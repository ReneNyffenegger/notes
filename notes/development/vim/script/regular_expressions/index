$ vim script - regular expressions

→ development/vim/script/regular_expressions/non_greedy[Non greedy matches]

→ development/vim/script/regular_expressions/negative_lookahead[negative lookahed]

→ development/vim/script/regular_expressions/negative_lookbehind[negative lookbehind]

→ development/vim/script/regular_expressions/to_upper_and_lower_case[to upper and lower case]

→ development/vim/script/regular_expressions/column_n[match at specific columns only]

{ Lookaround assertions #vim-re-lookaround-assertions

  The → development/regular-expressions#re-lookaround-assertions[lookaround assertions] in vim are as follows:

    table { lll

        ☰ ~Positive~ ☰ ~Negative~
      ~Look-ahead~  ☰  `ATOM\@=` ☰ `ATOM\@!`
      ~Look-behind~ ☰ `ATOM\@<=` , `ATOM\@42<=` ☰ `ATOM\@<!` , `ATOM\@42<!`
    table }

    The special forms `\@42<=` and `ATOM\@42<!` limit the range that is searched to 42 bytes.

    TODO: `\&` works the same as using `\@=`: `foo\&..` is the
    same as `\(foo\)\@=..`.  But using `\&` is easier, you don't need the braces.

}

sa:

  → development/vim/regular-expressions

  → development/vim/script/vimscript/regular_expressions

  → development/regular-expressions
