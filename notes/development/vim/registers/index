$ Vim registers

{ Available registers

  • `a` - `z` / `A` - `Z`: the named registers
  • `0` - `9`: the numbererd register
  • `"`: the unnamed register
  • `-`: the small delete register
  • `:`, `.`, `%`: read only registers
  • `#`: the → development/vim/editing/buffers#vim-alternate-buffer[alternate buffer]
  • `=`: the expression register
  • `*`, `+`, and `~`: The selection and drop registers
  • `/`: the last search pattern register
  • `_`: the black hole register

}
{ Types of registers #vim-register-type

  A register is one of these three types:
    • characterwise
    • linewise
    • blockwise-visual

  The type of the register can be set with the third argument of → development/vim/script/vimscript/functions/setreg[setreg()].

}
{ Reading and writing a register programmatically

  In a → development/vim/script/index[script] or an → http://renenyffenegger.ch/notes/development/vim/commands/[ex command], the value of the register can be accessed by prepending it with the at symbol:
code {
let l:value_of_register_f=@f
let @f='change value of register f'
code }


  The value of registers with a *dynamic name* can be set with → development/vim/script/vimscript/functions/setreg[setreg()]

}
{ Clearing a register

  A register (here: `r`) can be cleared like so
code {
:let @r=''
code }

But some key strokes can be safed by recording nothing into a register: `qrq`

}
sa:
  → development/vim/commands/put[`:put r`] which inserts the content of register r after the current line.
  
