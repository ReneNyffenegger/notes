$ Conque Shell - Run interactive commands inside a Vim buffer

{ Commands

code {
:ConqueTerm shell-command
code }

code {
:ConqueTermSplit …
code }

code {
:ConqueTermVSplit …
code }

code {
:ConqueTermTab
code }

}
{ Variables

  `g:ConqueTerm_ExecFileKey`: key to execute the current file in a split window. Default: `<F11>`
  
  `g:ConqueTerm_SendFileKey`: key to send current file contents to conque. Default: `<F10>`
  
  `g:ConqueTerm_SendVisKey`: key to send selected text to conque. Default: `<F9>`

  `g:ConqueTerm_ToggleKey`: key to toggle terminal key mappings. Default: `<F8>`

  `g:ConqueTerm_Color`: Control colors. 0: no colors except syntax highlighting, 1: limited terminal colors (past color history will be cleared). 2: all terminal colors

  `g:ConqueTerm_ColorMode`: Windows only

  `g:ConqueTerm_TERM`: TERM environment. Default: `vt100`.

  `g:ConqueTerm_Syntax`: → development/vim/syntax[syntax] for your → development/vim/editing/buffers[buffer]. Default: `conque_term`.

  `g:ConqueTerm_ReadUnfocused`: Keep updating the shell window after having switched to another buffer? Default: `0`.

  `g:ConqueTerm_PromptRegex`: → development/regular-expressions[regular expression] to highlight prompt. Default: `^\w\+@[0-9A-Za-z_.-]\+:[0-9A-Za-z_./\~,:-]\+\$`.

  `g:ConqueTerm_PyVersion`: Python version that is tried to load first. `2`, `3` or `0` (no preference).

  `g:ConqueTerm_CloseOnEnd`: Close buffer when program exits?

  `g:ConqueTerm_SendFunctionKeys`: Send function key presses to terminal?

  `g:ConqueTerm_SessionSupport`: → development/vim/editing/sessions[Vim session] support?

  `g:ConqueTerm_StartMessages`: unused for now.

  `g:ConqueTerm_CodePage`: Used in Windows only.

  `g:ConqueTerm_InsertCharPre`: beta feature.
}
