$ vim options

{ Characteristics of options #vim-option-characteristics

  The value of an option is one (or more?) of
    • boolean (→ development/vim/sources/src/option_h#vim-src-option_h-flags[`P_BOOL`])
    • numeric (`P_NUM`)
    • string (`P_STRING`, `P_NFNAME`)
    • comma separated list (`P_COMMA`, `P_ONECOMMA`)
    • single-char flags (`P_FLAGLIST`)
    • (?) a list of flags
    • (?) buffer string 
    • ?

  The *scope* of an option can be
    • global
    • local to a → development/vim/editing/windows[window]
    • local to a → development/vim/editing/buffers[buffer]

  An option has a *full name* and an *abbreviation* (or *short name*).

  Each option with their characteristics is stored in a → development/vim/sources/src/optiondefs_h#vim-src-optiondefs-vimoption[`vimoption` struct].
}
{ Commands related to options

 `:set all` shows all options and their values.

 `:set opt&` reverts the option `opt` to its default value.

 `:set all&` sets all options to their default value.

 `:set opt!` toggle (invert) boolean options (such as → development/vim/options/autoindent[autoindent]). Same thing: `:set invOPTION`.

 `:set opt?` displays the current value for the option.

 `:set opt<` Remove local value of an option so that global value will be used.

 `:setl opt<` Copy global value of an option to its local value.

 `:→ development/vim/commands/options[options]` opens a window (or menu?) to choose options.
}
{ Some options

→ development/vim/options/autoindent

→ development/vim/options/bufhidden

→ development/vim/options/buflisted

→ development/vim/options/buftype

→ development/vim/options/cindent[cindent]

→ development/vim/options/cinkeys[cinkeys]

→ development/vim/options/compatible[compatible]

→ development/vim/options/eventignore - a list of → development/vim/events[events] that are ignored (not triggerd)

→ development/vim/options/expandtab

→ development/vim/options/indentexpr[indentexpr]

→ development/vim/options/indentkeys[indentkeys]

→ development/vim/options/lisp[lisp]

→ development/vim/options/paste[paste]

→ development/vim/options/pastetoggle[pastetoggle] - key sequence that toggles the → development/vim/options/paste option.

→ development/vim/options/revins[revins]

→ development/vim/options/ruler[ruler]

→ development/vim/options/smartindent[smartindent]

→ development/vim/options/showmatch

→ development/vim/options/smarttab

→ development/vim/options/softtabstop

→ development/vim/options/swapfile

→ development/vim/options/textwidth

→ development/vim/options/updatetime

→ development/vim/options/wrapmargin

  `foldtext` (see → development/vim/editing/fold)

}

sa:
  → development/vim/sources/src/option_c[`src/option.c`],
  → development/vim/sources/src/optiondefs_h[`src/optiondefs.h`]
