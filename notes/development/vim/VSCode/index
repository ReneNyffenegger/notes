$ Vim for VSCode

{ Cloning from github and running Vim for VS Code

  As per → https://github.com/VSCodeVim/Vim/blob/master/.github/CONTRIBUTING.md[`CONTRIBUTING.md` on the github repository].

  { First: clone sources from github

code {
PS> cd ~/.vscode/extensions
PS> git clone https://github.com/VSCodeVim/Vim
PS> cd Vim
code }

  }

  { yarn install

code {
PS> yarn install
code }

    The last command (`yarn install`) seems to fetch some packages(?) into the sub directory `node_module`.

  }
  { npx gulp build

code {
PS> npx gulp build
[21:18:58] Using gulpfile ~\.vscode\extensions\Vim\→ https://github.com/VSCodeVim/Vim/blob/master/gulpfile.js[gulpfile.js]
[21:18:58] Starting 'build'...
[21:18:58] Starting 'prettier'...
[21:18:58] Finished 'prettier' after 670 ms
[21:18:58] Starting 'webpack'...
[21:18:58] Starting 'tslint'...
[21:20:03] Finished 'tslint' after 1.08 min
[21:20:15] asset extension.js 912 KiB [emitted] [minimized] (name: main) 2 related assets
webpack 5.42.0 compiled successfully

asset extensionWeb.js 578 KiB [emitted] [minimized] (name: main) 2 related assets
webpack 5.42.0 compiled successfully
[21:20:15] Finished 'webpack' after 1.27 min
[21:20:15] Starting 'commit-hash'...
[21:20:15] Finished 'commit-hash' after 84 ms
[21:20:15] Finished 'build' after 1.28 min
code }

  This command (`npx gulp build`) adds a `__metadata` key to `package.json` and creates some files in the `out` directory:
    • `extension.js`
    • `extension.js.LICENSE.txt`
    • `extension.js.map`
    • `extensionWeb.js`
    • `extensionWeb.js.LICENSE.txt`
    • `extensionWeb.js.map`
    • `version.txt`

  }
  { Finally: run Visual Studio Code

     
code {
PS> code
code }

  }
  { Misc

    → https://github.com/VSCodeVim/Vim/blob/master/.github/CONTRIBUTING.md[`CONTRIBUTING.md`] also lists commands to build a `.vsix` extension package etc.

  }

}
