$ vim sources

table { ll

  autocmd.c ☰ autocommands
  buffer.c ☰ manipulating buffers (loaded files)
  diff.c ☰  diff mode (vimdiff)
  → development/vim/src/dosinst_c[dosinst.c] ☰
  eval.c ☰  expression evaluation
  ex_docmd.c ☰ Functions for executing an → development/vim/commands[ex command line]. (Function `do_cmdline()`)
  feature.h ☰ Definitions of preferences when vim is → development/vim/compiling[compiled].
  fileio.c ☰ reading and writing files
  findfile.c ☰ search for files in 'path'
  fold.c ☰  folding
  getchar.c ☰ getting characters and key mapping
  indent.c ☰ C and Lisp indentation
  mark.c ☰  marks
  mbyte.c ☰  multi-byte character handling
  → development/vim/src/main_c[main.c] ☰ defines → development/languages/C-C-plus-plus/C/main[`main`]
  memfile.c ☰ storing lines for buffers in a swapfile
  memline.c ☰ storing lines for buffers in memory
  menu.c ☰  menus
  message.c ☰ Functions for displaying (error) messages on the *command line*.
  ops.c ☰  handling operators ("d", "y", "p")
  option.c ☰ options
  → development/vim/src/os_w32exe_c[os_w32exe.c] ☰ defines `WinMain` which calls → development/languages/C-C-plus-plus/C/main[`main`] which is defined in → development/vim/src/main_c[`main.c`].
  → development/vim/src/pathdef_c[pathdef.c] ☰ seems to be genarted during the build process
  quickfix.c ☰ quickfix commands (":make", ":cn")
  regexp.c ☰ pattern matching
  screen.c ☰ updating the windows (`update_screen()` calls `win_update()` for every window which calls `win_line()` for every line.
  search.c ☰ pattern searching
  sign.c ☰  signs
  spell.c ☰  spell checking
  syntax.c ☰ syntax and other highlighting
  tag.c ☰ tags
  term.c ☰ terminal handling, termcap codes
  undo.c ☰ undo and redo
  vimrun.c ☰ to create `vimrun.exe`.
  version.c ☰ 
  window.c ☰ handling split windows
  xpm_w32.c ☰ 

table }


→ development/vim/src/xxd/xxd_c[xxd/xxd.c]

→ development/vim/src/GvimExt/gvimext_cpp[GvimExt/gvimext.cpp]

sa:
  `src\README.txt`, `:help development`
