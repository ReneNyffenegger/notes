$ vim - src/globals.h

`globals.h` contains the definition of global variables.

{ The EXTERN macro

  These global variables are prefixed with the macro `EXTERN`, for example
code {
EXTERN schar_T	*ScreenLines INIT(= NULL);
code }

  The → development/vim/sources/src/main_c[`main.c`] defines `EXTERN` before it includes → development/vim/sources/src/vim_h[`vim.h`] which in turn includes `globals.h`.

  Thus, when `main.c` is compiled, the global variables are defined.

  However, `globals.h` also contains
code {
#ifndef EXTERN
# define EXTERN extern
# define INIT(x)
#else
# ifndef INIT
#  define INIT(x) x
#  define DO_INIT
   …
# endif
#endif
code }

  This allows to externally declare all global variables for all other compilation units.

}
{ homedir #vim-src-globals_h-homedir

 `homedir` stores the value of → development/vim/script/vimscript/variables/HOME[`$HOME`] (if no → development/environment-variable[environment variable] with the name `HOME` exists),
  see → development/vim/sources/src/misc1_c#vim-src-misc1_init_homedir[`init_homedir()`].

}
{ got_int

 `got_int` is set to `TRUE` when an *interrupt signal* was caught.

}
{ Windows (win_T) strucures

  Vim stores the characteristics of → development/vim/editing/windows[windows] in `win_T` structures.

  Regular (that is non-hidden (?)) windows] are stored in a *linked list*. 

 `*firstwin` points to its first entry, `*curwin` to the current window, `*lastwin` to the last entry in the linked list.

}
{ Buffer related

  { Linked list of buffers #vim-src-globals_h-linked-list-of-buffer

    All → development/vim/editing/buffers[buffers] are stored in a linked list.

    The global variables `firstbuf` and `lastbuf`, whose type is `buf_T*` point to the first and last buffer, respectively, in the linked list.

  }
  { FOR_ALL_BUFFERS

   `FOR_ALL_BUFFERS` is a macro that iterates over all buffers in the linked list. It is defined as
code {
#define FOR_ALL_BUFFERS(buf) for (buf = firstbuf; buf != NULL; buf = buf->b_next)
code }

  }
  { curbuf #vim-src-globals_h-curbuf
  
    The global variable `curbuf`, whose type is also `buf_T*` points to the currently active buffer.

  }

}
{ cmdline window related


code {
#ifdef FEAT_CMDWIN
EXTERN int	cmdwin_type INIT(= 0);	// type of cmdline window or 0
EXTERN int	cmdwin_result INIT(= 0); // result of cmdline window or 0
#endif
code }

  `cmdwin_result` is used in → development/vim/sources/src/main_c#vim-src-main_loop[`main_loop()`] as a terminating condition to break out from the main loop if the main loop is used to input command line data.

}
{ Variables that are defined in pathdef.c #vim-src-globals_h-pathdef_c

  Some variables are defined in → development/vim/sources/src/auto/pathdef_c[`src/auto/pathdef.c`] (which is generated during the make process):

code {
extern char_u *default_vim_dir;           // Location of the global vimrc file    (for example → Linux/fhs/etc, set with the → development/vim/compiling#vim-compilation-make[make option] VIMRCLOC)
extern char_u *default_vimruntime_dir;    // Location of the global runtime files (for example → Linux/fhs/usr/share[/usr/share]/vim, set with the make option VIMRUNTIMEDIR)
extern char_u *all_cflags;                // → development/languages/C-C-plus-plus/GCC/options[compiler options] with which → development/vim/sources[vim sources] were → development/vim/compiling[compiled].
extern char_u *all_lflags;                // → development/languages/C-C-plus-plus/GCC/linker options with which vim was linked.
extern char_u *compiled_user;
extern char_u *compiled_sys;
code }

}
{ misc

  { exe_name #vim-src-globals_h-exe_name

   `exe_name` is present if the macro `USE_EXE_NAME` is defined. It stores the name of the executable.

?   The value of `exe_name` might be used to determine the value of → development/vim/script/vimscript/variables/VIM[`$VIM`].

    The value of `exe_name` is determined in → development/vim/sources/src/os_win32_c#vim-src-os_win32-get_exe_name[`get_exe_name()`]

  }

}

{ TODO

  • `enc_utf8` (→ development/Unicode/UTF-8)
  • `default_vimruntime_dir` (declared in → development/vim/sources/src/globals_h[`src/globals.h`], defined in `pathdef.c`)

}
