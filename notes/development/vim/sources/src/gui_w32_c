$ VIM: src/gui_w32

GUI support for Microsoft Windows, aka Win32.

Among others, this file handles Windows messages such as `WM_KEYDOWN`, `WM_SYSKEYDOWN`.

{ gui_mch_init()

 `gui_mch_init()` initializes the GUI for gvim running on Windows.

  Among others, it creates (`CreateWindowExW`) the main window and the text area window.

 `gui_mch_init` is called from → development/vim/sources/src/gui_c#vim-src-gui-gui_start[`gui_start()`].

}
{ _WndProc() #vim-src-gui_w32-WndProc

 `_WndProc()` is the Window procedure for gvim's main window.

 `WM_CHAR` messages are handled by → #vim-src-gui_w32-_OnChar[`_OnChar()`].

}
{ _TextAreaWndProc()

  The Window procecdure for the text area inside gvim's main window.

  Messages that are handled are:
code { 
HANDLE_MSG(hwnd, WM_LBUTTONDBLCLK,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_LBUTTONDOWN,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_LBUTTONUP,	_OnMouseMoveOrRelease);
HANDLE_MSG(hwnd, WM_MBUTTONDBLCLK,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_MBUTTONDOWN,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_MBUTTONUP,	_OnMouseMoveOrRelease);
HANDLE_MSG(hwnd, WM_MOUSEMOVE,	_OnMouseMoveOrRelease);
HANDLE_MSG(hwnd, WM_PAINT,	_OnPaint);
HANDLE_MSG(hwnd, WM_RBUTTONDBLCLK,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_RBUTTONDOWN,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_RBUTTONUP,	_OnMouseMoveOrRelease);
HANDLE_MSG(hwnd, WM_XBUTTONDBLCLK,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_XBUTTONDOWN,_OnMouseButtonDown);
HANDLE_MSG(hwnd, WM_XBUTTONUP,	_OnMouseMoveOrRelease);
HANDLE_MSG(hwnd, WM_SIZE,	_OnSizeTextArea);
code }

  If → development/vim/features[feature] `FEAT_BEVAL_GUI` is enabled, it also handles `WM_NOTIFY`.

}
{ _OnChar() #vim-src-gui_w32-_OnChar

  `_OnChar` handles `WM_CHAR` messages and is (one of the?) functions that calls → development/vim/sources/src/ui_c#vim-src-ui-add_to_input_buf[`add_to_input_buf()`].

}
{ get_work_area()

  `get_work_area` determines the size of the screen, taking position on multiple monitors into account (if supported).
}
{ gui_mch_set_shellsize()

  Set the size of the window to the given width and height in pixels.

}
{ gui_mch_set_fg_color() / gui_mch_set_bg_color()

  Sets foreground and background color.

}


sa:
  → development/vim/sources/src/gui_c[gui.c]
