$ VIM struct: winopt_T

`winopt_T` is a `struct` that stores → development/vim/options[options] that are local to a → development/vim/editing/windows[window].

The struct is used twice in a → development/vim/editing/windows[window] (see members `w_onebuf_opt` and `w_allbuf_opt` in → development/vim/sources/src/structs_h/window_S[`win_T`]).
  • for the current → development/vim/editing/buffers[buffer] and
  • for all buffers

The struct is also refered to in → development/vim/sources/src/structs_h/wininfo_T[`wininfo_T`].

code {
typedef struct
{
#ifdef FEAT_ARABIC
    int         wo_arab;
# define w_p_arab w_onebuf_opt.wo_arab  // 'arabic'
#endif
#ifdef FEAT_LINEBREAK
    int         wo_bri;
# define w_p_bri w_onebuf_opt.wo_bri    // 'breakindent'
    char_u      *wo_briopt;
# define w_p_briopt w_onebuf_opt.wo_briopt // 'breakindentopt'
#endif
    char_u      *wo_wcr;
# define w_p_wcr w_onebuf_opt.wo_wcr    // 'wincolor'
#ifdef FEAT_DIFF
    int         wo_diff;
# define w_p_diff w_onebuf_opt.wo_diff  // 'diff'
#endif
#ifdef FEAT_FOLDING
    long        wo_fdc;
# define w_p_fdc w_onebuf_opt.wo_fdc    // 'foldcolumn'
    int         wo_fdc_save;
# define w_p_fdc_save w_onebuf_opt.wo_fdc_save  // 'foldenable' saved for diff mode
    int         wo_fen;
# define w_p_fen w_onebuf_opt.wo_fen    // 'foldenable'
    int         wo_fen_save;
# define w_p_fen_save w_onebuf_opt.wo_fen_save  // 'foldenable' saved for diff mode
    char_u      *wo_fdi;
# define w_p_fdi w_onebuf_opt.wo_fdi    // 'foldignore'
    long        wo_fdl;
# define w_p_fdl w_onebuf_opt.wo_fdl    // 'foldlevel'
    int         wo_fdl_save;
# define w_p_fdl_save w_onebuf_opt.wo_fdl_save  // 'foldlevel' state saved for diff mode
    char_u      *wo_fdm;
# define w_p_fdm w_onebuf_opt.wo_fdm    // 'foldmethod'
    char_u      *wo_fdm_save;
# define w_p_fdm_save w_onebuf_opt.wo_fdm_save  // 'fdm' saved for diff mode
    long        wo_fml;
# define w_p_fml w_onebuf_opt.wo_fml    // 'foldminlines'
    long        wo_fdn;
# define w_p_fdn w_onebuf_opt.wo_fdn    // 'foldnestmax'
# ifdef FEAT_EVAL
    char_u      *wo_fde;
# define w_p_fde w_onebuf_opt.wo_fde    // 'foldexpr'
    char_u      *wo_fdt;
#  define w_p_fdt w_onebuf_opt.wo_fdt   // 'foldtext'
# endif
    char_u      *wo_fmr;
# define w_p_fmr w_onebuf_opt.wo_fmr    // 'foldmarker'
#endif
#ifdef FEAT_LINEBREAK
    int         wo_lbr;
# define w_p_lbr w_onebuf_opt.wo_lbr    // 'linebreak'
#endif
    int         wo_list;
#define w_p_list w_onebuf_opt.wo_list   // 'list'
    int         wo_nu;
#define w_p_nu w_onebuf_opt.wo_nu       // 'number'
    int         wo_rnu;
#define w_p_rnu w_onebuf_opt.wo_rnu     // 'relativenumber'
#ifdef FEAT_LINEBREAK
    long        wo_nuw;
# define w_p_nuw w_onebuf_opt.wo_nuw    // 'numberwidth'
#endif
    int         wo_wfh;
# define w_p_wfh w_onebuf_opt.wo_wfh    // 'winfixheight'
    int         wo_wfw;
# define w_p_wfw w_onebuf_opt.wo_wfw    // 'winfixwidth'
#if defined(FEAT_QUICKFIX)
    int         wo_pvw;
# define w_p_pvw w_onebuf_opt.wo_pvw    // 'previewwindow'
#endif
#ifdef FEAT_RIGHTLEFT
    int         wo_rl;
# define w_p_rl w_onebuf_opt.wo_rl      // 'rightleft'
    char_u      *wo_rlc;
# define w_p_rlc w_onebuf_opt.wo_rlc    // 'rightleftcmd'
#endif
    long        wo_scr;
#define w_p_scr w_onebuf_opt.wo_scr     // 'scroll'
#ifdef FEAT_SPELL
    int         wo_spell;
# define w_p_spell w_onebuf_opt.wo_spell // 'spell'
#endif
#ifdef FEAT_SYN_HL
    int         wo_cuc;
# define w_p_cuc w_onebuf_opt.wo_cuc    // 'cursorcolumn'
    int         wo_cul;
# define w_p_cul w_onebuf_opt.wo_cul    // 'cursorline'
    char_u      *wo_culopt;
# define w_p_culopt w_onebuf_opt.wo_culopt      // 'cursorlineopt'
    char_u      *wo_cc;
# define w_p_cc w_onebuf_opt.wo_cc      // 'colorcolumn'
#endif
#ifdef FEAT_LINEBREAK
    char_u      *wo_sbr;
#define w_p_sbr w_onebuf_opt.wo_sbr     // 'showbreak'
#endif
#ifdef FEAT_STL_OPT
    char_u      *wo_stl;
#define w_p_stl w_onebuf_opt.wo_stl     // 'statusline'
#endif
    int         wo_scb;
#define w_p_scb w_onebuf_opt.wo_scb     // 'scrollbind'
    int         wo_diff_saved; // options were saved for starting diff mode
#define w_p_diff_saved w_onebuf_opt.wo_diff_saved
    int         wo_scb_save;    // 'scrollbind' saved for diff mode
#define w_p_scb_save w_onebuf_opt.wo_scb_save
    int         wo_wrap;
#define w_p_wrap w_onebuf_opt.wo_wrap   // 'wrap'
#ifdef FEAT_DIFF
    int         wo_wrap_save;   // 'wrap' state saved for diff mode
# define w_p_wrap_save w_onebuf_opt.wo_wrap_save
#endif
#ifdef FEAT_CONCEAL
    char_u      *wo_cocu;               // 'concealcursor'
# define w_p_cocu w_onebuf_opt.wo_cocu
    long        wo_cole;                // 'conceallevel'
# define w_p_cole w_onebuf_opt.wo_cole
#endif
    int         wo_crb;
#define w_p_crb w_onebuf_opt.wo_crb     // 'cursorbind'
    int         wo_crb_save;    // 'cursorbind' state saved for diff mode
#define w_p_crb_save w_onebuf_opt.wo_crb_save
#ifdef FEAT_SIGNS
    char_u      *wo_scl;
# define w_p_scl w_onebuf_opt.wo_scl    // 'signcolumn'
#endif
#ifdef FEAT_TERMINAL
    char_u      *wo_twk;
# define w_p_twk w_onebuf_opt.wo_twk    // 'termwinkey'
    char_u      *wo_tws;
# define w_p_tws w_onebuf_opt.wo_tws    // 'termwinsize'
#endif

#ifdef FEAT_EVAL
    sctx_T      wo_script_ctx[WV_COUNT];        // SCTXs for window-local options
# define w_p_script_ctx w_onebuf_opt.wo_script_ctx
#endif
} winopt_T;
code }
