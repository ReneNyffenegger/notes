$ VIM: src/ex_cmds.h
@ src/ex_cmds.h


{ exarg / exarg_T

  `ex_cmds.h` defines the struct → development/vim/sources/src/ex_cmds_h/exarg_T[`exarg` / `exarg_T`] which manages the arguments for an → development/vim/commands[ex command].

}
{ ex_func_T

 `ex_func_T` is a typedef for a → development/languages/C-C-plus-plus/C/language/datatypes/pointer/function[function pointer] that points to the function that manages a specific ex command:
code {
typedef void (*ex_func_T) (→ development/vim/sources/src/ex_cmds_h/exarg_T[exarg_T] *eap);
code }

  These functions are (as it seems to me) implemented in → development/vim/sources/src/ex_docmd_c[`ex_docmd.c`].

}
{ cmdnames

 `cmdnames` is an array of `cmdname`. Each `cmdname` defines the specifics of an → development/vim/commands[ex command].

}
{ Adding new ex-commands

  When a new ex command is added to `ex_cmds.h`, the file → development/vim/sources/src/ex_cmdidxs_h[`ex_cmdidxs.h`] needs to be generated
  with → development/vim/sources/src/create_cmdidxs_vim[`create_cmdidxs.vim`]

}

sa:

  → development/vim/sources/src/ex_cmds_h[`ex_cmds.h`]
