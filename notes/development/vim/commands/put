$ Vim ex command: put

`put r` write the content of the → development/vim/registers[register] named `r` on a new line after the current line. 

`nput r` write the content of the → development/vim/registers[register] named `r` on a new line after line *n* (for example `17put r`puts the content of `@r` on line 18).
-
`.put` puts text after the current line (`.` usually indicates the current line).

Instead of a named register, `=` can be used which evaluates the expression up to the end of the line and inserts the evaluated value.
For example, `:put =line('.')` puts the current line number onto the next line. `:put=g:foo` puts the value of the variable `g:foo` after
the current line.

After putting a value on a line, the cursor is placed on the line where text was inserted.
-
So, the range of ip numbers from `10.0.0.1` through `10.0.0.255` can be inserted from the current with
code {
:for i in → development/vim/script/vimscript/functions/range(1,255) | .put='10.0.0.'.i | endfor
code }


sa:
  → development/vim/commands[Ex commands]
