$ Vim: ex commands

`:help ex-cmd-index` gives a list of all the `:` commands (without mentioning any arguments, however).

A (repetitive) sequence of ex commands can be stored in a
→ development/vim/user-defined-functions[user defined function] (and then repeatedly called).

`:profile file [pattern]` profiles the performance of plugins.

`:vimgrep` searches for a regular expression in buffers(?)

{ Autocommands

  Vim has a list of → development/vim/events[events] that can be hooked to automatically execute commands.

  This feature is called *autocommand*.

  See also → development/vim/commands/autocmd[`:autocmd`], → development/vim/sources/src/autocmd_c[`autocmd.c`]

}

{ Adding an EX-command (in the c sources)

  The new EX-command needs to be added to → development/vim/sources/src/ex_cmds_h[`ex_cmds.h`]:
code {
EXCMD(CMD_myexcmd,	"myexcmd",	ex_myexcmd,
	EX_EXTRA|EX_NOTRLCOM|EX_SBOXOK|EX_CMDWIN,
	ADDR_NONE),
code }

  The C function that handles the command needs to be put into a source file (for example
  → development/vim/sources/src/eval_c[`eval.c`]):
code {
    void
ex_myexcmd(exarg_T *eap) {
    …
}
code }

  The function definition needts to be added to a `.pro` file (stored below `src/proto`), for example into `src/proto/eval.pro`.
code {
void ex_myexcmd(exarg_T *eap);
code }

  Note, apparently, the `*.pro` files are auto-generated. I have not yet found out, when this takes place or how I can trigger such an autogeneration.

  → development/vim/sources/src/ex_cmdidxs_h[`src/ex_cmdidxs.h`] needs also to be rebuilt:
code {
make cmdidxs
code }

}

sa:

  → development/vim/sources/src/ex_docmd_c[src/ex_docmd.c] contains functions for executing an ex command line.
  -
  Ex commands are defined in → development/vim/sources/src/ex_cmds_h.

  The function → development/vim/sources/src/scriptfile_c#scriptfile_c-do_source[`do_source()`] (→ development/vim/sources/src/scriptfile_c) reads a file and executes its lines as ex commands.

  The struct → development/vim/sources/src/ex_cmds_h/exarg_T[`exarg_T`] (→ development/vim/sources/src/ex_cmds_h[ex_cmds.h]) stores the arguments used for ex commands.
  -
  `cmdnames` (in the same source file) is an array that stores the specifics of all ex-commands.

  A command can be execute verbosely with `→ development/vim/commands/verbose[:verbose] command …`.
