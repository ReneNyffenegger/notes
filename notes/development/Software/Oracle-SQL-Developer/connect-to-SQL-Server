$ Connect to SQL Server with Oracle's SQL Developer

→ development/Software/Oracle-SQL-Developer[SQL Developer] can be used to connect to → development/databases/SQL-Server[MS SQL Server].

First, → https://sourceforge.net/projects/jtds/files/jtds/1.3.1/[jTDS] needs to be downloaded. I used version 1.3.1. The downloaded zip file needs to be unzipped. It contains
`jtds-1.3.1.jar` which needs to be copied to a »safe« location.

Then, in SQL Developer, this jar file needs to be pointed at in menu *Tools -> Preferences -> Database -> Third Party JDBC Driver*. Probably, SQL Developer should be restarted now.
-
Note: the dialog displays the .jar file as a folder rather than a file.

The connection dialog box now comes with the possibility to choose SQL Server as database to connect to:
gh|about-SQL-Developer|/SQL-Server/img/connect.png||

In order to connect to my local SQL Server 2017 (developer edition), I had to change the default port of 1433 to 1434. I determined the port with
code {
use → development/databases/SQL-Server/administration/system-databases/master[master];
go

xp_readerrorlog 0, 1, N'Server is listening on';
go
code }

{ Specifying an instance and database name

  The name of the instance needs to be stated in the *port* field(!): `1433;instance=INSTNAME`.

  In the same vein, the database name to connect to can (also in the port fiel) be specified with `…;databaseName=DBNAME`.

  See also → https://dba.stackechange.com/a/149561/515[this dba.stackechange.com answer].

}
{ Using Windows Authentication

  In order to be able to use Windows authentication, I also had to copy the file `x64\SSO\ntlmauth.dll` (also found in the jtds zip file) to the directory `jre\bin` under the root
  directory of the JDK used.

  When connecting, the username-password requires a username. With windows authentication, such a username is technically not necessary. I was able to proceed with the connection by
  just entering a space into the username field.

  { Circumenventing the entering of a blank username

    ~Dennis Laliberte~ notified me that is is possible to circumvent the entering of a space by following the following steps in the SQL Developer connection properties:
      • Uncheck *Use Windows Authentication*
      • Check *Use Default Password*
      • Check *Use Windows Authentication*

  }

}
{ begin transaction / rollback

  When trying to enter `begin transaction`, *SQL Developer* seems to recognize `begin` as a → development/databases/Oracle/PL-SQL[PL/SQL] keyword and the error
 *Incorrect syntax near the keyword 'begin'* is thrown.
  
  I was able to start a transaction by prepending the `begin` and `rollback` with a semicolon like so:
code {
; begin transaction;

update tab …

; rollback;
code }

}
