$ Oracle SQL Developer password decryptor

→ development/Software/Oracle-SQL-Developer[Oracle SQL Developer] allows a user to associate → development/security/password[passwords] with connections so that the user doesn't have to enter the password each time he opens a connection.

Of course, these passwords need to be stored somewhere. SQL developer stores them in an encrypted form, but it is possible to decrypt them.

In case of SQL developer version 4, two files are needed to find the information to encrypt these passwords. On Windows, these are
  • `→ Windows/dirs/Users/username/AppData/Roaming/SQL-Developer[%APPDATA%\SQL Developer]\system*\o.jdeveloper.db.connection*\connections.xml` (Update *2020-11-11*: this file now seems to be → development/Software/Oracle-SQL-Developer/directories/user-information/systemV_W_X_Y_Z/o_jdeveloper_db_connection/connections_json[`o.jdeveloper.db.connection/connections.json`])
  • `→ Windows/dirs/Users/username/AppData/Roaming/SQL-Developer[%APPDATA%\SQL Developer]\system*\o.sqldeveloper*\→ development/Software/Oracle-SQL-Developer/directories/user-information/systemV_W_X_Y_Z/o_sqldeveloper/product-preferences_xml[product-preferences.xml]`
(→ Windows/development/environment-variables/APPDATA[`%APPDATA%`] typically has a value of → Windows/dirs/Users/username/AppData/Roaming[`c:\user\username\AppData\Roaming`])

In `connections.xml`, one piece of the needed information is found in the `Contents` tag:
code {
<StringRefAddr addrType="password">
   <Contents>F35q3vdbVrI=</Contents>
</StringRefAddr>
code }

In `product-preferences.xml` the other pieced of the needed information is found in the following tag:
code {
<value n="db.system.id" v="3e8efb59-8a5a-4c13-b1d5-ff64f987787f"/>
code }

With these two values and the following → #decrypt-v4[Java program], you're now able to decrypt the password:
code {
java Decrypt_V4 F35q3vdbVrI= 3e8efb59-8a5a-4c13-b1d5-ff64f987787f
code }

{ Finding connections.xml and product-preferences.xml

  As the two required files are found under `%appdata%`, they are typically unaccessible for other users.

  However, there are at least two ways to access such files.

  { 1. Using a Linux live CD

     If you have physical access to the PC or laptop that has the `connections.xml` and `product-preferences.xml` *and* its harddisk
     is not encrypted, you can mount the PC harddisk with a Linux → https://en.wikipedia.org/wiki/Live_CD[[live CD] (such as → http://www.knopper.net/knoppix/index-en.html[Knoppix])  and copy the necessary information

  }
  { 2. Using dir /s /b on the company drive

    In many (big) companies, there is sometimes one or more »company drives« that all sorts of people and divisions or departments can store
    temporary files. Sometimes, database users backup their `conections.xml` and `product-preferences.xml` on such drives.
    -
    Luckily, in recent years, security awarness has risen so that such *company drives* have become rarer.

    Assuming this »company drive« is `X:`, then the wanted files can be found in a → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] prompt with
code {
cd /d X:
dir /s /b connections.xml product-preferences.xml
code }

    Possibly, such files can also be found in → development/version-control-systems/git or
    *subversion* repositories etc.

  }

}

{ Source code (java) #decrypt-v4

  gh|Oracle-SQL-developer-password-decryptor|/Decrypt_V4.java||

}
{ History

  table { ll
    V.2 ☰ Add `-v` (verbose) option
  table }

}
{ Links

  Ideas and knowhow were taken from → https://gist.github.com/ajokela/1846191 and → https://github.com/maaaaz/sqldeveloperpassworddecryptor

  → https://github.com/ReneNyffenegger/Oracle-SQL-developer-password-decryptor[Source files on github]

}
