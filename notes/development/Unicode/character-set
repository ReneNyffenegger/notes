$ Character set
@ character set

A *character set* is a collection of → development/Unicode/character[characters] without any → design/font/glyph[glyphs] associated with it.

Each character of a character set has a unique (within the character set) *character code* (→ development/Unicode/Codepoints/[codepoint]). For example, in 
→ development/Unicode/ASCII (which is a character set), 65 represents an `A`

{ Single Byte Character Sets (SBCS) #sbcs

  Each character corresponds to a single byte character code.

  Examples: → development/Unicode/ASCII

  SBCS are mostly found in American and European countries.

}
{ Double Byte Character Sets (DBCS)

  Each character corresponds to exactly a two byte character code. This implies a maximum of 65'536 → development/Unicode/character

  UTF-16 is not a DBCS because it also encodes some characters with four bytes and is therefore an MBCS

}
{ Multibyte Character Sets (MBCS)

  Dependent on a character, varying number of bytes is used. 

  Examples: utf-8, utf-16, utf-7, Shift-JIS, GB2312 

}

sa:

  → development/Unicode/collation

  → misc/ISO/8859

  → development/web/HTML/characterset

  → Linux/locale

  The → Windows/registry[registry] key → Windows/registry/tree/HKEY_CLASSES_ROOT/MIME/Database/Charset[`HKEY_CLASSES_ROOT\MIME\Database\Charset`].

  The Oracle function → development/databases/Oracle/installed/packages/utl/i18n/api/string_to_raw[`utl_i18n.string_to_raw`] converts an Oracle PL/SQL string to a given character set (and returns its binary data).
  -
  The function `→ development/databases/Oracle/installed/packages/utl/raw[utl_raw].convert` converts strings (or more accurately
  → development/databases/Oracle/SQL/data-types/raw[RAWs]) between two character sets.
  -
  → development/databases/Oracle/adminstration/init-parameters/nls#ora-nls_characterset[`nls_characterset`]
