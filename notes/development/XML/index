
XML is a format to store *hierarchical* data. Thus, the content of an → development/XML/DOM/nodes/document can be (graphically) represented as a tree.

{ XML Declarations

  Possible XML declarations are
    • `<? xml version="1.0">`
    • `<? xml version="1.0" encoding="→ development/Unicode/UTF-8[UTF-8]"?>`
    • `<? xml version="1.0" encoding="→ development/Unicode/UTF-8[UTF-8]" standalone="yes" ?>`

}
{ Namespace

  Namespaces are used to prevent name collisions in an XML document (for example when using XSLT with an XML document).

  An *XML namespace* consists of a set of names that are all different from one another.

  { Some known namespaces

    The following table lists some known namespaces. The second column corresponds to the prefix that is conventionally used to refer to the namespace.

    table { lll
      → http://www.w3.org/1998/Math/MathML ☰ `math` (?) ☰ MathML
      → http://www.w3.org/1999/xhtml ☰ ☰ XHTML (« HTML when used with an XML serialisation»?)
      → https://www.w3.org/1999/xlink ☰ ☰ A namespace defined in the → http://www.w3.org/TR/xlink/[XML Linking Language (XLink) specification]
      → http://www.w3.org/1999/XSL/Transform ☰ `xsl` ☰ XSLT
      → http://www.w3.org/2000/svg ☰ ☰ SVG
      → http://www.w3.org/2001/xml-events ☰ ☰ A namespace defined in the → https://www.w3.org/TR/xml-events/[XML Events] specification
      → http://www.w3.org/2001/XMLSchema ☰ ☰ XML Schema
      → https://www.w3.org/2001/XMLSchema-instance ☰ ☰ XML Schema instance namespace
      → http://www.w3.org/2002/xforms ☰ ☰ XForms (an XML application that represents the next generation of forms for the Web)
      → https://www.w3.org/2003/g/data-view ☰ ☰ GRDDL Data Views
      → http://purl.org/dc/elements/1.1/ ☰ `dc` (?) ☰ Dublin Core (A standard for → development/Data/metadata)
      http://openoffice.org/2004/office ☰ ☰
      http://openoffice.org/2004/writer ☰ ☰
      http://openoffice.org/2004/calc ☰ ☰
      http://openoffice.org/2005/report ☰ ☰
      http://openoffice.org/2009/office ☰ ☰
      http://openoffice.org/2009/table ☰ ☰
      http://openoffice.org/2010/draw ☰ ☰
      urn:oasis:names:tc:opendocument:xmlns:XXX:1.0 ☰ ☰ OASIS: Open Document Format for Office Applications. `XXX` is one of `animation`, `chart`, `config`, `database`, `dr3d`, `drawing`, `form`, `manifest`, `meta`, `data style`, `office`, `presentation`, `script`, `table`, `text`, `style`, `xsl-fo-compatible`, `svg-compatible`, `smil-compatible`
    table }


  }

}


sa:

  → development/Data/exchange/formats

  → development/XML/XPath,
  → development/XML/XQuery,
  → development/XML/XSD

 `→ Linux/fhs/usr/share/xml`

  → Microsoft/Office/Excel/xml[Excel xml format]

  → https://developers.google.com/protocol-buffers[Google protocol buffers]

  → development/languages/VBA/Useful-object-libraries/MSXML (Microsoft XML Core Services) is a set of «services» to build XML-based applications.

  → misc/ISO/9075#sql-standard-parts[Part 14 of the SQL standard] is XML related.

  The → development/databases/Oracle package → development/databases/Oracle/installed/packages/dbms/xmlgen[`dbms_xmlgen`] converts
  the result of an → development/databases/Oracle/SQL/select[SQL query] to XML.

  The → development/databases/SQL-Server/T-SQL/data-types/xml[SQL Server data type `xml`]

  → Windows/PowerShell:
    • The → Windows/PowerShell/command-inventory/noun/XML[PowerShell cmdLet noun `XML`],
    • Reading an XML file with → Windows/PowerShell/command-inventory/noun/content/get#ps-get-content-xml[`get-content`]

  The → Microsoft/dot-net clas  → Microsoft/dot-net/namespaces-classes/System/Xml/XmlReader[`System.Xml.XmlReader`] allows to read an XML document in forward-only fashion.

  The → Microsoft/Office/Excel/functions[Excel function] `filterXml`.

  The → development/databases/Oracle/SQLcl#sqlcl-sqldev-select-hints[SQLcl and SQL Developer select hint] `/*xml*/` causes an SQL result set to be returned in XML.

  The → Microsoft/Office/Excel menu → Microsoft/Office/Excel/GUI/Ribbon/tabs/Developer/XML[Developer -> XML]
