
*XPath* is a → development/standards/W3C recommendation for navigating → development/XML documents.

XPath is a (read-only) subset of the → development/XML/XQuery language. So, an XPath expression is also an XQuery expression.

{ Some XPath expressions

  table { ll

    `/` ☰ represents the root of the → development/XML element tree.
    `/xyz` ☰ navigates to the node named *xyz* immediately below the root of the XML eleent tree.
    `/abc/*/xyz` ☰ navigates to node *xyz* which is below any single node that is below *abc* immediatly under the root element.
    `//N` ☰ navigates to any node *N* below the «actual context»
    `//N//M` ☰ navigates to any node *N* below any node *M* below the «actual context»
    `..` ☰ get «actual node's» parent node
    `@foo` ☰ evaluate to the value of the attribute named `@foo` (For example `//someNode/@theAttribute`)
    `[…]` ☰ apply a filter, on child node value: `//parentNode[childNode = 'xyz']` or on node's attribute: `//node[@attr = 'bla']`). Some operators include `=`, `!=`, `or`, `and`, `not()`

  table }

  { /node/subnode

   `/node/subnode…` traverses the XML document from the root to select one or more nodes:
    gh|about-XPath|/expressions/slash-node.ps1||

  }
  { @attr

   `@attr` is applied on one (or more?) nodes to return the value of the attribute named `attr`:
    gh|about-XPath|/expressions/at.ps1||

  }

}

sa:

  The → development/languages/Perl module → development/languages/Perl/modules/XML/XPath[`XML::XPath`].

  The → Microsoft/Office/Excel/functions[Excel function `filterXml()`]

  The → Windows/PowerShell cmdLet → Windows/PowerShell/command-inventory/noun/XML/select[`select-XML`] allows to formulate XPath queries in PowerShell.

  → development/languages/VBA/Useful-object-libraries/MSXML/DOM/selectSingleNode[VBA: MSXML and DOM: `selectSingleValue`]
