$ Oracle: Materialized views
@ materialized view

A *materialized view* stores the result of a → development/databases/Oracle/SQL/select[select statement].
-
There are three options that specify how the result of the select statement is refreshed:
table { lll
   ☰ ☰ ~Default~
  Refresh Mode ☰ `on commit`, `on demand` or `on statement` ☰ `on demand`
  Refresh Option ☰ `complete`, `fast`, `force` or `never` ☰ `force`
  Trust constraints ☰ `trusted constraints` or `enforced constraints` ☰ `enforced`
table }

{ Master tables

  The → development/databases/Oracle/objects/tables[tables], → development/databases/Oracle/objects/views[views] and
  materialized view that provide the data for a materialized view (that is: the objects that the materialized view selects from) are
  referred to as *master tables* (sometimes also as *detail tables*).

}
{ Relation to snapshots

  Materialized views were previously referred to as *snapshots*. Therefore, for backward compatibility, it is possible to use the term `snapshot` instead of `materialized view`.

  The apparent package name → development/databases/Oracle/installed/packages/dbms/mview[`dbms_mview`] is in fact a
  → development/databases/Oracle/objects/synonyms for `dbms_snapshot`.

}


rem }


{ Materialized View Logs

  { Used for fast refreshable materialized views

    In order for a materialized view to be fast refreshable, *materialized log views* are typically required (exceptions being «partition change tracking» (PCT) refresh).

    When using materialized view logs for fast refershing materialized views, they should include the `rowid` clause.

    If they're used for aggregate materialized views, they must also include every column that is referenced in the materialized view.

rem {
CREATE MATERIALIZED VIEW LOG
  ON sales
  WITH ROWID
  (
    prod_id,
    cust_id, …
  )
  INCLUDING NEW VALUES
;
rem }

rem {
CREATE MATERIALIZED VIEW LOG
  ON sales
  WITH ROWID
  (
    prod_id,
    cust_id, …
  )
  COMMIT SCN
  INCLUDING NEW VALUES
;
rem }

rem {
CREATE MATERIALIZED VIEW LOG
  ON sales
  WITH
     SEQUENCE,  -- Required to support combination of insert, update or delete statements
     ROWID
  (
    prod_id,
    cust_id, …
  )
  COMMIT SCN
  INCLUDING NEW VALUES
;
rem }

  }

}
{ Requirements / MOS note 101705.1 #mos-101705-1

  MOS note 101705.1 lists a few requirements/restrictions for *ON COMMIT* and *fast refresh* materialized views

 *ON COMMIT*:
   • The materialized view should have a single table → development/databases/Oracle/SQL/select/aggregate[aggregate] or
   • it should have a join only.
   • `count(*)` must be present for Single-Table Aggregates
   • `count()` should be present.
   • It should be possible perform a fast refresh on the materialized view.

 *Fast refresh*:
   • The `from` list must contain base → development/databases/Oracle/objects/tables[tables] only (i.e. it must not select from → development/databases/Oracle/objects/views[views]).
   • Expressions must be constant (So, expressions involving `→ development/databases/Oracle/SQL/functions/date/sysdate` or `→ development/databases/Oracle/objects/tables/columns/pseudo/rownum` etc. are not permitted)
   • It cannot contain references to → development/databases/Oracle/SQL/data-types/raw[`raw` or `long raw`] data types.
   • It cannot contain `→ development/databases/Oracle/SQL/select/aggregate/having` or → development/databases/Oracle/SQL/select/hierarchical-queries/start-with_connect-by/index[`connect by`] clauses.
   • The → development/databases/Oracle/SQL/clauses/where/[`where` clause] can contain only joins and they must be → development/databases/Oracle/SQL/join/equi/index[equi-joins] (inner or outer) and all join predicates must be connected with ANDs. No selection predicates on individual tables are allowed
   • It cannot have → development/databases/Oracle/SQL/select/subquery[subqueries], inline views or set functions like `→ development/databases/Oracle/SQL/select/set-operators/union` or `→ development/databases/Oracle/SQL/select/set-operators/minus`.


 Further stipulations for *fast refreshability* seem to be:
    • No `select` list subquery
    • No → development/databases/Oracle/SQL/select/analytic[Analytic functions] in the select clause.
    • Referencing tables must not have an `XMLindex` index.
    • No `model` clause
    • No Nested queries with `any`, `all` or `not exists`
    • Mutliple detail tables at different sites / no remote detail tables
    • → development/databases/Oracle/objects/tables/organization/iot[Index organized tables] when using join or aggregates with `→ development/databases/Oracle/SQL/select/group-by`

  In addition, nested materialized views must have a → development/databases/Oracle/SQL/join or → development/databases/Oracle/SQL/select/aggregate[aggregate function].


}

}


sa: 
  The → development/databases/Oracle/adminstration/init-parameters[init parameters] `query_rewrite_enabled` and `query_rewrite_integrity`.

 `DBA_MVIEWS` lists all materialized views in a database.
  -
 `DBA_BASE_TABLE_MVIEWS` lists magterialized views with logs.

  Errors that occur when materialized views are automatically refreshed are recored in the → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/alert-log.

  The → development/databases/Oracle/SQL/hints[`rewrite` hint]

  → development/databases/Oracle/installed/packages/dbms/advisor/api/tune_mview[`dbms_advisor.tune_mview`] optimizes materialized view creation statements to achieve `refresh fast` and `enable query rewrite` goals

  → development/databases/Oracle/objects/views/materialized/prebuilt-table[Prebuilt tables]

  → development/databases/Oracle/objects/views/materialized/options/refresh/fast[fast refresh]

  The *query rewriting* → development/databases/Oracle/optimizer#ora-optimizer-qry-tran[query transformation]

  Compare with the `→ development/databases/Oracle/SQL/hints/list/materialize` hint.

  The → development/databases/Oracle/errors[error] messages
    • → development/databases/Oracle/errors/ORA-12008_error-in-materialized-view-or-zonemap-refresh-path
    • → development/databases/Oracle/errors/ORA-12051_ON-COMMIT-attribute-is-incompatible-with-other-options
    • → development/databases/Oracle/errors/ORA-12054_cannot-set-the-ON-COMMIT-refresh-attribute-for-the-materialized-view
