$ Oracle object namespaces
@ namespace

All → development/databases/Oracle/objects Within a given *object namespace* must be identified by a unique → development/databases/Oracle/objects#ora-obj-name[name].

In a schema, the following objects *share* the same namepsace:
  • → development/databases/Oracle/objects/tables[Tables]
  • → development/databases/Oracle/objects/views[Views]
  • PL/SQL units (Packages, stand alone procedures and functions, user-defined types and operators)
  • Private → development/databases/Oracle/objects/synonyms[synonyms]
  • MLE objects (?)

On the other hand, each object-type of the following list has an independent namespace within a given schema:
  • → development/databases/Oracle/objects/indexes[Indexes]
  • → development/databases/Oracle/objects/triggers[Triggers]
  • → development/databases/Oracle/objects/tables/constraints[Constraints]
  • → development/databases/Oracle/objects/views/materialized[Materialized views]
  • → development/databases/Oracle/objects/clusters[Clusters]
  • Dimensions
  • Private database links

Each of the following *non-schema* objects also have an independent namespace:
  • → development/databases/Oracle/architecture/database/logical-structures/tablespace[Tablespaces]
  • User roles
  • Public synonyms
  • Editions
  • Parameter files (*pfiles*) and server parameter files (*spfiles*)
  • Profiles
  • Public database links

Because of these namespaces, it's possible to create multiple objects with the same name:
code {
create table           tq84_a_name  (a number, b varchar2(10), c date);
alter  table           tq84_a_name   add constraint tq84_a_name primary key(a);
create cluster         tq84_a_name  (a number(4)) hash is a hashkeys 8192;
create public synonym  tq84_a_name   for sys.dual;
create index           tq84_a_name   on tq84_a_name (b);
code }

sa:
  → development/databases/Oracle/errors/ORA-0955_name-is-already-used-by-an-existing-object
