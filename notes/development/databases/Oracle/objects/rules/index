$ Oracle: Rules
-
@ rule

{ TODO

  { Possible actions
code {
[AFTER delay_interval] START step_1[,step_2 …]
code }

code {
STOP step_1[,step_2 …]
code }

code {
END [{end_value|step_name.error_code}]
code }

  }
  { Condition syntax

    An expression that follows the condition syntax evaluates to a `true` or `false`.

    «Fundamental Constructs that can be used to formulate chain conditions include
code {
TRUE
FALSE
stepname [NOT] SUCCEEDED
stepname [NOT] FAILED
stepname [NOT] STOPPED
stepname [NOT] COMPLETED

stepname ERROR_CODE [NOT] IN (integer, integer, integer …)
stepname ERROR_CODE =  integer
stepname ERROR_CODE != integer
stepname ERROR_CODE <> integer
stepname ERROR_CODE >  integer
stepname ERROR_CODE >= integer
stepname ERROR_CODE <  integer
stepname ERROR_CODE <= integer
code }

  Such «fundamental» constructs can be joined with the boolean operators `OR` and `AND`.
  -
  NOT(…)` inverses the value of an expression.

  The value of `ERROR_CODE` is set with `→ development/databases/Oracle/PL-SQL/exception/raise_application_error` within PL/SQL object.

  }

}


