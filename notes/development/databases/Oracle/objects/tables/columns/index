$ Oracle table columns
@ column

{ Modifying the table structures

code {
create table tq84_col_test (
   col_one   number
);
code }

  Add *one* new column
code {
alter table tq84_col_test add col_two varchar2(10);
code }

  Add *muliple columns at once
code {
alter table tq84_col_test add (
   col_three   date,
   col_four    number not null
);
code }

  Change a column:
code {
alter table tq84_col_test modify col_three not null;
code }


  A column that contains null values only can be converted to another data type.
  -
  If the column already has data, Oracle will throw error *ORA-01439: column to be modified must be empty to change datatype*.
code {
alter table tq84_col_test modify col_four varchar2(10);
code }

  Modifying multiple columns at once:
code {
alter table tq84_col_test modify (
   col_one    number(10, 2),
   col_two    varchar2(20)  
);
code }

  Renaming a column
code {
alter table tq84_col_test rename column col_four to col_text;
code }

  Dropping a column:
code {
alter table tq84_col_test drop column col_two;
code }

  Before dropping a column, it might be considered, especially on large tables, to first set it *unsed* (which is way faster then dropping it directly) and *later* drop it «physically», when
  the database is not heavily used:
code {
alter table tq84_col_test set unused (col_three);

select * from user_tab_cols
where
   table_name    = 'TQ84_COL_TEST' and
   hidden_column = 'YES';

alter table tq84_col_test drop unused columns;
code }



}

{ Default values

  A column can be assigned a default value with which the column is filled in an `insert` statement if no explicit value is stated. This default value can
  be a non-constant value such as → development/databases/Oracle/SQL/functions/date/sysdate[`sysdate`], `systimestamp` or come from a
  → development/databases/Oracle/objects/sequences[sequence].

  gh|Oracle-Patterns|/DatabaseObjects/Tables/columns/default-values.sql||

  In an existing table, a column can be altered to have a default value like so:
code {
alter table log_entry modify time_entered  default systimestamp;
code }

  The following → development/databases/Oracle/SQL/select[`select` statement] queries the → development/databases/Oracle/installed/data-dictionary for columns with default values.
  -
  This query also finds columns that were not created with a `default` clause but as → development/databases/Oracle/objects/tables/columns/identity[identity columns].
code {
select
   table_name,
   column_name,
   data_type,
   data_default,
   identity_column
from
   → development/databases/Oracle/installed/data-dictionary/tab/cols[user_tab_cols]
where
-- table_name like '%' and
   data_default is not null;
code }

}
{ Maximum number of columns #oracle-max-table-columns

  As of → development/databases/Oracle/Releases-and-versions/19c, the maximum number of columns in a → development/databases/Oracle/objects/tables[table] or
  → development/databases/Oracle/objects/views[view] is 1000.

  However, a → development/databases/Oracle/SQL/select[`select` statement] can return up to 8160 columns after which the error message *ORA-00913: too many columns* is thrown.

  The maximum number of columns that can be stored in a → development/databases/Oracle/architecture/database/logical-structures/data-block is 255.

}
sa:

  → development/databases/Oracle/objects/tables/columns/virtual[Virtual columns],
  → development/databases/Oracle/objects/tables/columns/identity[identity colunns]

  Renaming column names with → development/databases/Oracle/SQL/statement/nouns/table#ora-sql-alter-table-rename-column[`alter table … rename column …`].

  → development/databases/Oracle/objects/tables/columns/diff-structure[Simple way to determine the difference between two table structures]

  → development/databases/Oracle/installed/data-dictionary/tab/columns[`dba_tab_columns`],
  → development/databases/Oracle/installed/data-dictionary/tab/cols[`dba_col_privs`].

