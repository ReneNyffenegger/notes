$ Oracle: Tables
@ table

A table is the fundamental → development/databases/Oracle/objects[object] to store → development/Data in a → development/databases/Oracle/architecture/database.
-
It consists of rows and → development/databases/Oracle/objects/tables/columns[columns].

{ Records

  Records in a table are identified by a → development/databases/Oracle/SQL/data-types/rowid[rowid].

}
{ High Water Mark (HWM) #ora-table-hwm

  The HWM is used (among others?) for
  → development/databases/Oracle/architecture/instance/SGA/database-buffer-cache#buffer-cache-direct-path[direct path inserts].

}

sa:

  The SQL noun → development/databases/Oracle/SQL/statement/nouns/table[table]

  → development/databases/Oracle/objects/tables/columns/virtual[Virtual columns]

  A → development/databases/Oracle/objects/tables/partitions[partitioned table] allows to distribute records to several partitions, each of which can be managed individually.

  A → development/databases/Oracle/objects/tables/period-definition[period definition clause] adds support for *temporal validity*.

  A table's → development/databases/Oracle/objects/tables/DOP[default Degree of Parallelism (DOP)]

  With Oracle's → development/databases/Oracle/Workspace-Manager, its possible to store multiple versions of data in a table (if the
  table was version enabled).

  → development/Data[Data] is added to a table with the `→ development/databases/Oracle/SQL/DML/insert` and the `merge` statement.

  → development/databases/Oracle/objects/tables/result_cache[«Result cache» tables]

  → development/databases/Oracle/PL-SQL/function-procedure/polymorphic-table[Polymorphic Table Functions (PTFs)]

  → development/databases/Oracle/PL-SQL/collection-types/nested-table#nested-table-in-table[Storing nested tables in a table].

  → development/databases/Oracle/objects/tables/types[Types of tables and the data dictionary]

 `→ development/databases/Oracle/installed/data-dictionary/catalog`

  SQL Script to → development/databases/Oracle/objects/tables/columns/datatypes-and-primary-keys[show tables' columns and position of primary keys].

 `→ development/databases/Oracle/installed/packages/dbms/space[dbms_space].create_table_cost` estimates the requred size of a table to be created, given its storage attributes.

  → development/databases/Oracle/objects[Other Oracle object types], for example the → development/databases/Oracle/objects/clusters[cluster] which allows to store data from
  one ore more tables.

  → development/databases/Oracle/objects/tables/compare-data[Compare the data of two tables]

  → development/databases/Oracle/objects/tables/types/temporary/private[Private temporary tables]

  → development/databases/Oracle/Releases-and-versions/21c#ora-21c-blockchain-tables[Blockchain tables], introduced with 21c.

  → development/databases/Oracle/objects/tables/immutable[Immutable tables]

  → development/databases/Oracle/objects/tables/external[External tables]

  → development/databases/Oracle/objects/tables/read-only[Read-only] tables.

