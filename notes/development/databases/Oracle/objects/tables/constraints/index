$ Constraints (Oracle)
@ constraint

table { ll
  → development/databases/Oracle/objects/tables/constraints/unique[Unique] ☰ Makes sure that there are no duplicate values. Unlike → development/databases/Oracle/objects/tables/constraints/primary-key[primary keys], a unique constraint allows → development/databases/Oracle/SQL/null[`null`] values to be inserted.
  → development/databases/Oracle/objects/tables/constraints/check[Check] ☰  The check constraint makes sure that the values of a → development/databases/Oracle/objects/tables/columns[column] adheres to the conditions set forth in the constraint.
  → development/databases/Oracle/objects/tables/constraints/not-null[Not null] ☰ The not → development/databases/Oracle/SQL/null[`null`] constraint is a special check conststraint that prevents a value from being → development/databases/Oracle/SQL/null[`null`].
  → development/databases/Oracle/objects/tables/constraints/primary-key[Primary key] ☰ Is a combination of a → development/databases/Oracle/objects/tables/constraints/not-null[`not null`] and `unique` constraints
  → development/databases/Oracle/objects/tables/constraints/foreign-key[Foreign key] ☰ Makes sure that the values are present in a corresponding primary key
table }

It should be noted that primary-foreign key relationships are not reflected in the → development/databases/Oracle/installed/data-dictionary[data dictionary] view
→ development/databases/Oracle/installed/data-dictionary/constraints[`all_constraints`].

{ TODO

  { Drop child table

    gh|Oracle-Patterns|/DatabaseObjects/Tables/IntegrityConstraints/drop_child.sql||

    See also the → development/databases/Oracle/SQL/statement/nouns/table/drop/cascade-constraints[`cascade constraints`] clause of the `drop table` statement.

  }
  { NOT NULL, not unique

    A `→ development/databases/Oracle/objects/tables/constraints/not-null` constraints prevents a column value from being `→ development/databases/Oracle/SQL/null`.

    gh|Oracle-Patterns|/DatabaseObjects/Tables/IntegrityConstraints/not_null_non_unique.sql||

  }

}

sa:

  An → development/databases/Oracle/SQL/statement[SQL statement] to → development/databases/Oracle/objects/tables/constraints/referential-integrity/query[recursively query referential integrity dependencies].

  The SQL clause → development/databases/Oracle/objects/tables/constraints/exceptions-into[`exceptions into`]

  The → development/databases/Oracle/SQL-Plus/sqlpath/cons[`cons.sql`] SQL script displays information about a constraint.

  The → development/databases/Oracle/installed/data-dictionary lists constraints in `→ development/databases/Oracle/installed/data-dictionary/constraints` and the respective
  → development/databases/Oracle/objects/tables/columns[columns] in `→ development/databases/Oracle/installed/data-dictionary/cons/columns`.
  -
  The constraint type is recorded in the column → development/databases/Oracle/installed/data-dictionary/constraints/constraint_type[`constraint_type`] in `dba_contstraints`.

  The `set → development/databases/Oracle/SQL/statement/nouns/constraints[constraints`] statement.

  → development/databases/Oracle/objects/tables/constraints/deferrable[Deferrable constraints]

code {
→ development/databases/Oracle/SQL/statement/nouns/session#ora-alter-session-set[alter session set] constraints = [ immediate | deferred | default ];
code }
