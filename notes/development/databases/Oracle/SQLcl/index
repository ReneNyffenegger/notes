
SQLcl is a new Java-based command-line interface for Oracle Database. It supports everything that already → development/databases/Oracle/SQL-Plus[SQL*Plus] had, but additionally comes also with
  • SQL history
  • Code assistance (pressing `tab` completes table, view and column names)
  • New commands such as `cd`,`ctas`, `ddl`, `repeat`
  • Java scripting

{ JRE

  SQLcl only needs a JRE.

  Apparently, it can be very picky if it doesn't find the verion it expects.

}
{ Download

? The download file is less than 20 MB.

  → http://www.oracle.com/technetwork/developer-tools/sqlcl/downloads/index.html[Download].

}
{ script

code {
script
  ctx.write("hello world\n");
/
code }

`script` can also execute a script file. The file's suffix `.js` can be ommited:
code {
script some_file_with_javascript
code }

}

{ Starting sqlcl / Command line options

  sqlcl is started by using its name `sql`.

  sqlcl has the folloing command line options:
  { -H

    Display SQLcl version (as `-V` does) and usage help.

  }
  { -V

    Display SQLcl version

  }
  { -R level

    Set restricted level. Level = 1, 2, 3 or 4, 4 being the most restrictve.

    The restriction level determines how much a use can mess up the file system.

  }
  { -S
  
     Silent mode: no output of SQLcl banner, prompts and commands.

  }
  { -verbose

    Show logging messages inline.

  }
  { -nohistory

    No history logging.

  }
  { -noupdates

     No check if update is availab.e
  
  }
  { -oci

    By default, SQLcl uses Oracle's JDBS driver to connet to the database.
    -
    With `-oci`, it is instructed to use the Oracle client.
  }
  { -L
  
    Don't reprompt for username/password if entered wrongly.

  }

}
{ Misc

  { alias

    sqlcl can create aliases:
code {
rene@ORA19> alias usr=select username, account_status, default_tablespace from dba_users;
code }

   The command that such aliases is set to are then executed by simply entering the name of the alias:
code {
rene@ORA19> usr
code }

    When running sqlcl under → Windows, the aliases are stored in `→ Windows/dirs/Users/username/AppData/Roaming[%APPDATA]\sqlcl\aliases.xml` and thus can be reused when quitting and starting an
    sqlcl session.

  }
  { ddl / ctas

    Use `dbms_metadata` to get a table's create statement or to produce a `create table as select…` statement.

  }
  { info / info+

    `info` and `info+` describe tables and views

  }
  { colored output

gh|about-SQLcl|/img/colored-output.png||

  }

}

links:
  → https://twitter.com/oraclesqlcl[@oraclesql]

  → https://github.com/oracle/oracle-db-tools/tree/master/sqlcl

sa:
  → development/databases/Oracle/SQLcl/script

  → development/Software/Oracle-SQL-Developer/SQL-extensions

  → development/tools/scripts/personal/sqlcl_bat[sqlcl.bat] is a simple → Windows/dirs/Windows/System32/cmd_exe/batch-files to start SQLcl

  → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin/sql[`%ORACLE_HOME%\bin\sql.bat`] is a → Windows/dirs/Windows/System32/cmd_exe/batch-files that is supposed to
  start SQLcl (but doesn't seem to work).
  -
  → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/sqldeveloper/sqldeveloper/sql[`$ORACLE_HOME/sqldeveloper/sqldeveloper/bin/sql`] however *does* seem to work.

