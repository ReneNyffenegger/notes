$ SQLcl Commands

table { lll

  ~Command~ ☰ SQL*Plus ☰
  `/` ☰ ☰
  `@` ☰ ☰
  `@@` ☰ ☰
  `accept` ☰ ☰
  `→ development/databases/Oracle/SQLcl/commands/alias` ☰ ☰
  `apex` ☰ ✗ ☰ List and export APEX applications. The export can be compbined with `spool`.
  `append` ☰ ☰
  `aq` ☰ ✗ ☰ Advanced queuing
  `arbori` ☰ ✗ ☰
  `archive log list` ☰  ☰
  `archive_log` ☰ ✗ ☰
  `→ development/databases/Oracle/SQLcl/commands/argument` ☰ ✗ ☰ See also `set → development/databases/Oracle/SQLcl/commands/set/parameterpolicy`
  `awr` ☰ ✗ ☰
  `background` ☰ ✗ ☰ Runs a command in the background. Compare with `jobs` and `wait4`
  `blockchain_table` ☰ ✗ ☰
  `break` ☰ ☰
  `bridge` ☰ ✗ ☰
  `btitle` ☰ ☰
  `cd` ☰ ✗ ☰ Changes the current working directory which influences where SQLcl looks for sql scripts and writes spooled files to. See also `pwd`, `pushd`, `popd`, `dirs` and `show sqlpath`
  `certificate` ☰ ✗ ☰ Integration of `dbms_user_certs` into SQLcl
  `change` ☰ ☰
  `clear` ☰ ☰ `clear bre[aks] | buff[er] | col[umns] | comp[utes] | context | scr[een] | sql | timi[ng]`. (SQLcl has `clear context` in addition to → development/databases/Oracle/SQL-Plus).
  `cloudstorage` ☰ ✗ ☰
  `codescan` ☰ ✗ ☰ Check code agains Trivadis Coding Guidelines. See also `files`
  `column` ☰ ☰
  `compute` ☰ ☰
  `connect` ☰ ☰
  `connmgr` ☰ ✗ ☰ Manage persistent connections. Passwords can be stored in a secure wallet.
  `copy` ☰ ☰
  `cs` ☰ ✗ ☰ Same as `cloudstorage`?
  `ctas` ☰ ✗ ☰
  `datapump` ☰ ✗ ☰ Creates and submits data pump jobs (compare with the Cloud Premigration Advisor Tool - CPAT)
  `dbccred` ☰ ✗ ☰
  `ddl` ☰ ✗ ☰ Interface to `dbms_metadata`?
  `define` ☰ ☰
  `del` ☰ ☰
  `describe` ☰ ☰
  `dg` ☰ ✗ ☰ Data Guard
  `dirs` ☰ ✗ ☰ shows the directory stack filled with `pushd`. See also `popd`
  `disconnect` ☰ ☰
  `edit` ☰ ☰
  `execute` ☰ ☰
  `exit` ☰ ☰
  `files` ☰ ✗ ☰ See also `codescan`
  `find` ☰ ✗ ☰ Search for files in `$SQLPATH`. Compare `which` (and the shell utility also with the name `→ Linux/shell/commands/which`).
  `→ development/databases/Oracle/SQLcl/commands/format` ☰ ✗ ☰ Formats a script or SQL statement in the buffer.
  `get` ☰ ☰
  `history` ☰ ☰
  `host` ☰ ☰
  `immutable_table` ☰ ✗ ☰ Delete some or all expired rows in immutable tables (integrates `dbms_immutable_table` into SQLcl through the `immutable_table` extension)
  `information` ☰ ✗ ☰ Detailed information about the column definitions for a table, view or synonym, or the specifications for a function or procedure. `informatinon+` also shows column statistics
  `input` ☰ ☰
  `jobs` ☰ ✗ ☰ See also `background` and `wait4`
  `→ development/databases/Oracle/SQLcl/commands/liquibase` ☰ ✗ ☰ Integration of Liquibase (through the `Liquibase` extension)
  `list` ☰ ☰
  `load` ☰ ☰
  `mdb` ☰ ✗ ☰ Helps importing MS Access databases into Oracle
  `migrateadvisor` ☰ ✗ ☰
  `mle` ☰ ✗ ☰ Loads JavaScript libraries to the database as MLE modules
  `mkstore` ☰ ✗ ☰ See also `orapki`
  `modeler` ☰ ✗ ☰ command-line interface for Oracle SQL Developer Data Modeler
  `net` ☰ ✗ ☰
  `oci` ☰ ✗ ☰
  `ocidbmetrics` ☰ ✗ ☰
  `→ development/databases/Oracle/SQLcl/commands/oerr` ☰ ✗ ☰ Information about a given → development/databases/Oracle/errors[error message]
  `orapki` ☰ ✗ ☰ See also `mkstore`
  `password` ☰ ☰
  `pause` ☰ ☰
  `print` ☰ ☰
  `project` ☰ ✗ ☰ CICD SQLcl project extension
  `→ development/databases/Oracle/SQLcl/commands/prompt` ☰ ☰
  `pushd` ☰ ✗ ☰ See also `dirs`, `popd` and `cd`
  `pwd` ☰ ✗ ☰ Prints the current working directory. See also `cd`
  `quit` ☰ ☰
  `remark` ☰ ☰
  `repeat` ☰ ✗ ☰ Execute an SQL statement multiple times, similar to the shell command `→ Linux/shell/commands/watch`
  `reserved_words` ☰ ✗ ☰
  `rest` ☰ ✗ ☰ 
  `run` ☰ ☰
  `save` ☰ ☰
  `→ development/databases/Oracle/SQLcl/commands/script` ☰ ✗ ☰
  `secret` ☰ ✗ ☰ Store secret values securely in memory.
  `→ development/databases/Oracle/SQLcl/commands/set` ☰ ☰
  `→ development/databases/Oracle/SQLcl/commands/show` ☰ ☰ `show` is → development/databases/Oracle/SQL-Plus/show[also available in SQL*Plus], but SQLcl has more options for this command.
  `shutdown` ☰ ☰
  `soda` ☰ ✗ ☰ Schemaless application development using the JSON data model.
  `spool` ☰ ☰
  `sshtunnel` ☰ ✗ ☰ Creates an SSH tunnel (Compare `-L` and `-i` options of `ssh`)
  `start` ☰ ☰
  `startup` ☰ ☰
  `store` ☰ ☰
  `timing` ☰ ☰
  `tnsping` ☰ ✗ ☰ Compare with → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin/tnsping[`tnsping`] command line utility
  `tosub` ☰ ✗ ☰ 
  `ttitle` ☰ ☰
  `undefine` ☰ ☰
  `unload` ☰ ✗ ☰
  `variable` ☰ ☰
  `vault` ☰ ✗ ☰ Hashicorp Vault support (an extension)
  `wait4 ☰ ✗ ☰ Wait for the specified amount time (given in milliseconds). See also `background` and `jobs`
  `whenever` ☰ ☰
  `which` ☰ ✗ ☰ Reports the first file it finds in `SQLPATH`. Compare `find` (and the shell utility with → Linux/shell/commands/which[with the same name])
  `xquery` ☰ ☰
table }

{ TODO

  { echo #sqlcl-cmd-echo

    Is `echo` an undocumented → development/databases/Oracle/SQLcl/commands/alias?
code {
SQL> connect no/such@user
  …
  Error Message = IO Error: The Network Adapter could not establish the connection (CONNECTION_ID=5dyBXrg4RJ2/uPhBP7OXsQ==)

SQL> show user
USER is ""

SQL> echo hello world
SP2-0640: Not connected

Error starting at line : 36 File @ /ALIAS/echo
…
code }

  }

}

sa:
  Defining → development/databases/Oracle/SQLcl/script/command-handler[user defined commands] written in JavaScript.
