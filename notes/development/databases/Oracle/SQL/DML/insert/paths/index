$ Oracle: Conventional Path vs Direct Path Load

Data is added (→ development/databases/Oracle/SQL/DML/insert[inserted]) to a table in one of two technically different ways:
table { lll
 ~Operation~ ☰ ~Comment~ ☰ → development/databases/Oracle/SQL/statement/execution/plan/operations[Plan operation]
  Conventional insert ☰ Oracle tries to (re-)use free space. Referential integrity is maintained ☰ → development/databases/Oracle/SQL/statement/execution/plan/operations/load/table-conventional[`LOAD TABLE CONVENTIONAL`]
  Direct-path insert ☰ Data is inserted beyond the → development/databases/Oracle/objects/tables#ora-table-hwm[table's high water mark]. The → development/databases/Oracle/architecture/instance/SGA/database-buffer-cache/index#buffer-cache-direct-path[buffer cache is bypassed]. Generation of → development/databases/Oracle/architecture/database/redo-data[redo] and undo data can mostly be turned off, which helps improve performance. ☰ → development/databases/Oracle/SQL/statement/execution/plan/operations/load/as-select[`LOAD TABLE AS SELECT`]
table }

rem {
  TSM - Temp Segment Merge (TSM) Loading
        default mechanism for parallel loads into single segments in Oracle
        Database 11g Release 2 (although AutoDOP uses something different, see
        later).
rem }


sa:
  → development/databases/Oracle/SQL/hints/list/append[`append` hint]

  → development/databases/Oracle/installed/dynamic-performance-views/event_name/list/direct-path/read

  → development/databases/Oracle/adminstration/init-parameters/event/list[Events] 10352, 10357 and 10949.
