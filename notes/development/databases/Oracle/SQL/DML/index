$ Oracle SQL - DML statement
@ DML statements

`call`, `delete`, `explain plan`, `insert`, `lock table`, → development/databases/Oracle/SQL/DML/merge[`merge`], `select` and `update`.
-
Some consider `select` to be a *DRL* (Data Retrieval Language) statement.

{ Undoing changes of DML statements

  As long as a transaction is not → development/databases/Oracle/SQL/TCL/commit[commited], DML statements can be undone with a → development/databases/Oracle/SQL/TCL/rollback[`rollback`]. This is possible because
  the necessary information is stored in → development/databases/Oracle/architecture/database/logical-structures/segment/undo/data.

  After committing a transaction, it might be possible with → development/databases/Oracle/Features_Options_Management-Packs/Flashback.

}
{ Locks

  There are two types of locks that come into play with DML statements: *row locks* and *table locks*.
  -
  These lock types must be distinguished from *system locks* (such as → development/databases/Oracle/architecture/instance/SGA/latch[latches], mutexes and internal locks.

  { Row locks (TX)

    Records that were changed by a DML statement are proteced from being changed by another → development/databases/Oracle/architecture/transaction until the modification is commited by
    a *row lock* (aka *TX lock*, TX apparently standing for «transaction»).

  }

  { Table locks (TM)

   A DML statement on a table, as well as the `for update` clause and the `lock table` statement, lock the entire table with a *table lock* (aka *TM lock*).

    A table lock can be held in different modes: RS, RX, S, SRX and X

  }

}
{ Error handling

  See → development/databases/Oracle/installed/packages/dbms/errlog[`dbms_errlog`] and
  the → development/databases/Oracle/SQL/DML/insert/log-errors[`log errors` clause] in insert statements.

}

sa:
  → development/databases/Oracle/SQL

  → development/databases/Oracle/installed/data-dictionary/dml_locks/index

  The column `pdml_status` in → development/databases/Oracle/installed/dynamic-performance-views/session[`v$session`] shows if *parallel DML* mode is enabled
 in a particular → development/databases/Oracle/architecture/session.

  → development/databases/SQL/DML[SQL DML statements]

  The → development/databases/Oracle/adminstration/init-parameters[init parameter] `optimizer_real_time_statistics` controls whether Oracle gathers real-time
  → development/databases/Oracle/optimizer/statistics[statistics] during conventional DML.

  → development/databases/Oracle/SQL-Plus/set[Setting] `feedback` to on in → development/databases/Oracle/SQL-Plus reports the number of records affected after executing
  a DML statement.
