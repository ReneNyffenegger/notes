$ Oracle SQL noun: TABLE

The → development/databases/Oracle/SQL/statement[Oracle SQL statements] with the noun `table` are
  • `alter table`
  • `analyze table`
  • `→ development/databases/Oracle/SQL/statement/nouns/table/create`
  • `→ development/databases/Oracle/SQL/statement/nouns/table/drop`
  • `→ development/databases/Oracle/SQL/statement/nouns/table/flashback`
  • `lock table`
  • `purge table`
  • `→ development/databases/Oracle/SQL/statement/nouns/table/truncate`

{ alter table add column

 `alter table … add …` adds a → development/databases/Oracle/objects/tables/columns[column] to a table.

  The `default` clause allows to specify a value with which the new column is filled.

  gh|Oracle-Patterns|/DatabaseObjects/Tables/AlterTable/add_column.sql||

}
{ alter table rename column #ora-sql-alter-table-rename-column

 `alter table … rename column …` allows to rename a → development/databases/Oracle/objects/tables/columns[column] in a → development/databases/Oracle/objects/tables[table], as is
  demonstrated in the following simple example:
  gh|Oracle-Patterns|/DatabaseObjects/Tables/AlterTable/rename_column.sql||

  See also the → development/databases/Oracle/SQL/statement/verbs/rename[SQL verb `rename`]

}
{ move compress where

code {
alter table xyz move
   compress
   including rows
   where
     trx_dt < date '2019-01-01';
code }

}

sa:
  The Oracle object → development/databases/Oracle/objects/tables[table].

  Using → development/databases/Oracle/installed/packages/dbms/metadata/api/get/dependent/ddl[`dbms_metadata.get_dependent_ddl`] to obtain
  → development/databases/Oracle/objects/tables/constraints/foreign-key[foreign keys] as `alter table` statements.
