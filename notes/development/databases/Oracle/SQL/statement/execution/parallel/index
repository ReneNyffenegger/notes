$ Oracle: Parallel SQL execution

In an → development/databases/Oracle[Oracle] database, parallel → development/databases/Oracle/SQL/statement/execution[SQL execution] is based on
  • the Query Coordinator (QC) and
  • the Parallel Execution (PX) server processes.

{ QC - Query Coordinator

  QC initiates the parallel execution and distributes the work to PX servers.

  The QC is identified in execution plans as *PX COORDINATOR*.

}
{ PX - Parallel Execution

  PX does most of the work for the job at hand.

}
{ QC and  PX

  For example, in a parallel select statement with a `sum()`, the PX servers sum part of the data while the QC in the end will calculate the final
  sum from the results from the PX servers.
 
}
{ Enabling parallel execution

  By default, Oracle is enabled for parallel execution of queries and → development/databases/Oracle/SQL/DDL[DDL statements].

  For → development/databases/Oracle/SQL/DML[DML statements] and select statements, parallel execution needs to be enabled with
code {
alter session enable parallel dml;
alter session enable parallel query;
code } 

}
{ Default degree of parallelism

  The default degree of parallelism is determined by the product of the two init-parameters `cpu_count` and `parallel_threads_per_cpu`:
code {
with p as (
  select
    max(case when name = 'cpu_count'                then value end) cpu_count,
    max(case when name = 'parallel_threads_per_cpu' then value end) parallel_threads_per_cpu
  from
    v$parameter
)
select
  p.cpu_count,
  p.parallel_threads_per_cpu,
  p.cpu_count * p.parallel_threads_per_cpu "default parallism degree"
from
  p;
code }

}
{ TODO

  DOP: Degree of parallelism

  DFO: Data flow operator

}
