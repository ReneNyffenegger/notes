$ Oracle: Parallel SQL execution

In an → development/databases/Oracle[Oracle] database, parallel → development/databases/Oracle/SQL/statement/execution[SQL execution] is based on
  • the Query Coordinator (QC) and
  • the Parallel Execution (PX) server processes.

{ QC - Query Coordinator

  QC initiates the parallel execution and distributes the work to PX servers.

  The QC is identified in execution plans as *PX COORDINATOR*.

}
{ PX - Parallel Execution

  PX does most of the work for the job at hand.

}
{ QC and  PX

  For example, in a parallel select statement with a `sum()`, the PX servers sum part of the data while the QC in the end will calculate the final
  sum from the results from the PX servers.
 
}
{ Enabling parallel execution

  By default, Oracle is enabled for parallel execution of queries and → development/databases/Oracle/SQL/DDL[DDL statements].

  For → development/databases/Oracle/SQL/DML[DML statements] and select statements, parallel execution needs to be enabled with
code {
→ development/databases/Oracle/SQL/statement/nouns/session[alter session] enable parallel dml;
→ development/databases/Oracle/SQL/statement/nouns/session[alter session] enable parallel query;
→ development/databases/Oracle/SQL/statement/nouns/session[alter session] enable parallel ddl;

→ development/databases/Oracle/SQL/statement/nouns/session[alter session] force  parallel dml parallel 16;
code } 

  After enabling parallel dml or query, the new state is reflected in
  → → development/databases/Oracle/installed/dynamic-performance-views/session[`v$session`].
code {
select
   pdml_enabled,
   pdml_status,
   pddl_status,
   pq_status
from
   → development/databases/Oracle/installed/dynamic-performance-views/session[v$session]
where
   → development/databases/Oracle/installed/dynamic-performance-views/session#vSession-audsid[audsid] = → development/databases/Oracle/SQL/functions/sys_context('userenv', 'sessionid');
code }

  { Using SQL hints

code {
insert /*+ enable_parallel_dml */ …
code }

  }
  { Transactions / rollback

  ? Apparently, an `alter session [enable|disable] parallel…` statement cannot be executed if a → development/databases/Oracle/architecture/transaction is still active.

  ? A rollback of a DML statement that was executed in parallel seems to be faster as well. TOOD: Needs to be investigated.

  }

}
{ Default degree of parallelism

  The default degree of parallelism is determined by the product of the two init-parameters `cpu_count` and `parallel_threads_per_cpu`:
code {
with p as (
  select
    max(case when name = 'cpu_count'                then value end) cpu_count,
    max(case when name = 'parallel_threads_per_cpu' then value end) parallel_threads_per_cpu
  from
    v$parameter
)
select
  p.cpu_count,
  p.parallel_threads_per_cpu,
  p.cpu_count * p.parallel_threads_per_cpu "default parallism degree"
from
  p;
code }

}
{ TODO

  DOP: Degree of parallelism

  DFO: Data flow operator

  { ORA-12801 and ORA-12805

    ORA-12801 is *error signaled in parrallel query server …*
    -
    ORA-12805 is *parallel query server died unexpectedly*

    These two errors are generic messages that may be caused when executing a parallel query. These errors are usually (always?) accompanied by additional messages which indicate
    the real cause of the problem.

    See also MOS note *184416.1*.

  }

}
sa:
  → development/databases/Oracle/installed/packages/dbms/parallel_execute[`dbms_parallel_execute`]

  → development/databases/Oracle/installed/dynamic-performance-views/px/session[`v$px_session`] shows information about sessions that run parallelly.
