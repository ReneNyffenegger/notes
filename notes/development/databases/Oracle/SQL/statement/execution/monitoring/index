$ Oracle: Real Time SQL Monitoring

By default, Oracle monitors the → development/databases/Oracle/SQL/statement/execution[execution] of → development/databases/Oracle/SQL/statement[SQL statements] that
  • run for longer than 5 seconds, or are
  • executed in parallel

Oracle can be forced to monitor all executions with one of the following statements:
code {
alter session set events 'sql_monitor force=true';
alter system  set events 'sql_monitor force=true';
code }

In order to force monitoring an SQL statement identified by an SQL Id, one of the following statements will do:
code {
alter session set events 'sql_monitor [sql:abc0123456789] force=true';
alter system  set events 'sql_monitor [sql:abc0123456789] force=true';
code }

Monitoring can be turned off with
code {
alter system  set events 'sql_monitor off';
code }

{ Limits

  The number of statement executions that will be monitored at a given time is limited to 20 times the number of cpus, but can be adjusted with the
  hidden → development/databases/Oracle/adminstration/init-parameters[init parameter] `_sqlmon_max_plan`.

  Statements whose → development/databases/Oracle/SQL/statement/execution/plan[execution plans] exceed 300 lines are not monitored. This threshold can be
  altered with the parameter `_sqlmon_max_planlines`.

  The minimal execution time of 5 seconds that an SQL statement must be running before monitoring kicks in can be adjusted with `_sqlmon_threshold`.

}

sa:
  → development/databases/Oracle/installed/dynamic-performance-views/sql/monitor[`v$sql_monitor`]

  The → development/databases/Oracle/installed/dynamic-performance-views/sql/monitor[`monitor` and `no_monitor`] → development/databases/Oracle/SQL/hints[SQL hints].

  Compare with → development/databases/Oracle/installed/dynamic-performance-views/sql/plan/statistics[`v$sql_plan_statistics`] and
  → development/databases/Oracle/installed/packages/dbms/xplan/api/display/cursor[`dbms_xplan.display_cursor`].
