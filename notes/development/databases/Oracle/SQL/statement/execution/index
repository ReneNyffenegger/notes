$ Oracle: SQL statement execution

When a SQL statement is executed, → development/databases/Oracle checks
if it has a cached (parsed) version of it to reuse it.

These parsed representations are stored in the → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/library-cache.

If Oracle finds such a parsed statement, it is referred to as *soft parse* or *library cache hit*.
-
If not, Oracle parses the SQL statement. This is referred to as *hard parse* or *library cache miss*.

When Oracle is done executing an SQL statement, it updates some statistical numbers for that statent in
→ development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`]. For long running statements, these
statistics are updated every 5 seconds.

{ Terminating (quarantining) statements

  The *Resource Manager* might terminate the execution of an SQL statement when the statement consumed too many resources.
  -
? This is referred to as quarantining the statement.

  See also the columns `AVOIDED_EXECUTIONS` and `SQL_QUARANTINE` in → development/databases/Oracle/installed/dynamic-performance-views/sql/diff-sql_sqlarea[`v$sql` and `v$sqlarea`].

}
{ Tracing SQL statement execution #ora-sql-exec-tracing

  TODO
    • `→ development/databases/Oracle/installed/packages/dbms/session[dbms_session].session_trace_disable`
    • `→ development/databases/Oracle/installed/packages/dbms/session[dbms_session].session_trace_enable`
    • `→ development/databases/Oracle/installed/packages/dbms/session[dbms_session].set_sql_trace`
    • `xxx_trace_disable` and `xxx_trace_enable` procedures in → development/databases/Oracle/installed/packages/dbms/monitor[`dbms_monitor`]
    • → development/databases/Oracle/adminstration/trace-file-analyzer[Trace file analyzer], → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/suptools/tfa/release/tfa_home/bin/tfactl[`$ORACLE_HOME/suptools/tfa/release/tfa_home/bin/ftactl`]
    • → development/databases/Oracle/tools/oradebug
    • → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/trace-file[Trace files]

code {
select
   value
from
  → development/databases/Oracle/installed/dynamic-performance-views/diag/info[v$diag_info]
where
  name = 'Default Trace File';
code }

}


sa:

  → development/databases/Oracle/optimizer

  → development/databases/Oracle/SQL/statement/execution/parallel[Parallel SQL execution]
