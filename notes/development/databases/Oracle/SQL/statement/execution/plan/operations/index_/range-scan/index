$ Oracle SQL Plan operation INDEX RANGE SCAN
@ INDEX RANGE SCAN

The `index range scan` → development/databases/Oracle/SQL/statement/execution/plan/operations[plan operation] is used in non-unique
→ development/databases/Oracle/objects/indexes. It returns the
→ development/databases/Oracle/SQL/data-types/rowid[rowids] of the searched value in the ascending order of the indexed value.

An *index range scan* accesses the data in the index with *single block IO* because leaf blocks are not stored in the order of the indexed keys they contain.

In most cases, `index range scan` does not have a child operator. Some child operations I've come accross include
  • → development/databases/Oracle/SQL/statement/execution/plan/operations/fast-dual[`fast dual`]
  • → development/databases/Oracle/SQL/statement/execution/plan/operations/filter[`filter`]
  • `index`
  • → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access[`table access`]
  • `union-all`
`

code {
create table tq84_tab(
   nm  number,
   tx  varchar2(200)
);

insert into tq84_tab
select
   round(→ development/databases/Oracle/installed/packages/dbms/random[dbms_random].value(1, 1000), 1),
   rpad('x', 200)
from
   dual connect by level <= 100000
;

create index tq84_tab_ix on tq84_tab(nm);

begin
   → development/databases/Oracle/installed/packages/dbms/stats/api/gather/table_stats[dbms_stats.gather_table_stats](user, 'tq84_tab');
end;
/

→ development/databases/Oracle/SQL/statement/verbs/explain for
select
   tx
from
   tq84_tab
where
   nm between 100 and 105;

select * from table(→ development/databases/Oracle/installed/packages/dbms/xplan/api/display(format=>'basic'));
--
-- -----------------------------------------------------------
-- | Id  | Operation                           | Name        |
-- -----------------------------------------------------------
-- |   0 | → development/databases/Oracle/SQL/statement/execution/plan/operations/statement/select                    |             |
-- |   1 |  → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/by-index#ora-table-access-by-index-rowid-batched[TABLE ACCESS BY INDEX ROWID BATCHED]| TQ84_TAB    |
-- |   2 |   INDEX RANGE SCAN                  | TQ84_TAB_IX |
-- -----------------------------------------------------------

drop table tq84_tab;
code }

sa:

  Compare `INDEX RANGE SCAN` with → development/databases/Oracle/SQL/statement/execution/plan/operations/index_/unique-scan[`INDEX UNIQUE SCAN`] which returns at most 1 ROWID for a searched
  value.

code {
select
   sest.sid,
   sest.value
from
   v$sesstat  sest                                         join
   v$statname stat on sest.statistic# = stat.statistic#
where
   stat.name = 'index range scans'
;
code }

  → development/databases/Oracle/SQL/statement/execution/plan/operations[SQL statement execution plan operations]
