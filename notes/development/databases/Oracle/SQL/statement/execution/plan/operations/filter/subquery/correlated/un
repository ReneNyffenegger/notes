$ Oracle Plan Operation FILTER for Uncorrelated Subqueries

Create two demonstration → development/databases/Oracle/objects/tables[tables] and fille them with some dummy data:
code {
create table tq84_A (id integer, tx  varchar2(10));
create table tq84_B (id integer, val number);

begin
insert into tq84_A values(1, 'A');
insert into tq84_A values(2, 'B');
insert into tq84_A values(3, 'C');

insert into tq84_B values(10, 5 );
insert into tq84_B values(20, 2 );
insert into tq84_B values(30, 4 );
end;
/
code }

Show the → development/databases/Oracle/SQL/statement/execution/plan for a query with an uncorrelated → development/databases/Oracle/SQL/select/subquery (`where exists …`):
code {
→ development/databases/Oracle/SQL/statement/verbs/explain for
select
   *
from
   tq84_A
where
   exists (
      select
         null
      from
         tq84_B
      where
         val = 6
   );
select * from table(→ development/databases/Oracle/installed/packages/dbms/xplan/api/display[dbms_xplan.display](format=>'basic'));
--
-- -------------------------------------
-- | Id  | Operation          | Name   |
-- -------------------------------------
-- |   0 | → development/databases/Oracle/SQL/statement/execution/plan/operations/statement/select   |        |
-- |   1 |  → development/databases/Oracle/SQL/statement/execution/plan/operations/filter            |        |
-- |   2 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_A |
-- |   3 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_B |
-- -------------------------------------
code }


Run the query and show if a row source was started. Because the subquery does not return a record, the SQL executor does not have run («start») the full table access on `tq84_A`:
code {
select /*+ → development/databases/Oracle/SQL/hints/list/gather/plan_statistics */
   *
from
   tq84_A
where
   exists (
      select
         null
      from
         tq84_B
      where
         val = 6
   );

select * from table(→ development/databases/Oracle/installed/packages/dbms/xplan/api/display/cursor[dbms_xplan.display_cursor](format=>'adaptive rowstats -note'));
--
-- ----------------------------------------------------------------
-- | Id  | Operation          | Name   | Starts | E-Rows | A-Rows |
-- ----------------------------------------------------------------
-- |   0 | → development/databases/Oracle/SQL/statement/execution/plan/operations/statement/select   |        |      1 |        |      0 |
-- |*  1 |  → development/databases/Oracle/SQL/statement/execution/plan/operations/filter            |        |      1 |        |      0 |
-- |   2 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_A |      0 |      3 |      0 |
-- |*  3 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_B |      1 |      1 |      0 |
-- ----------------------------------------------------------------
--  
-- Predicate Information (identified by operation id):
-- ---------------------------------------------------
--  
--    1 - filter( IS NOT NULL)
--    3 - filter("VAL"=6)
code }
 

Run a version of the query where the subquery returns a row and thus makes the outer query return all records of `tq84_A` (the corresponding full table access is «started»):
code {
select /*+ gather_plan_statistics */
   *
from
   tq84_A
where
   exists (
      select
         null
      from
         tq84_B
      where
         val = 5
   );

select * from table(dbms_xplan.display_cursor(format=>'adaptive rowstats -note'));
--
-- ----------------------------------------------------------------
-- | Id  | Operation          | Name   | Starts | E-Rows | A-Rows |
-- ----------------------------------------------------------------
-- |   0 | → development/databases/Oracle/SQL/statement/execution/plan/operations/statement/select   |        |      1 |        |      3 |
-- |*  1 |  → development/databases/Oracle/SQL/statement/execution/plan/operations/filter            |        |      1 |        |      3 |
-- |   2 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_A |      1 |      3 |      3 |
-- |*  3 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/table-access/full[TABLE ACCESS FULL]| TQ84_B |      1 |      1 |      1 |
-- ----------------------------------------------------------------
--  
-- Predicate Information (identified by operation id):
-- ---------------------------------------------------
--  
--    1 - filter( IS NOT NULL)
--    3 - filter("VAL"=5)
code }

Cleaning up:
code {
drop table tq84_A;
drop table tq84_B;
code }
