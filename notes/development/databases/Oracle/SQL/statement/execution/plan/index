$ Oracle: SQL Execution Plan
@ SQL execution plan

An *execution plan* consists of the required steps and their dependency among each other that is needed to → development/databases/Oracle/SQL/statement/execution[execute] an
→ development/databases/Oracle/SQL/statement[SQL statement].
-
The step-dependency is hierarchical.
-
The execution steps are usuall referred to as A plan consists of a hierarchical list of → development/databases/Oracle/SQL/statement/execution/plan/operations[row sources or plan operations].

The execution plan is stored in the → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/library-cache/Shared-SQL-Area.

{ Optimizer

  The → development/databases/Oracle/optimizer[optimizer's] main goal is to generate the optimal execution plan for SQL statements.

? → development/databases/Oracle/SQL/statement/execution/plan/management monitors execution plans over time in order to check if they deteriorate.

}
{ Optimizer statistics

  When the optimizer formulates a plan, it bases its decision on statistical numbers, commonly referred to as → development/databases/Oracle/optimizer/statistics[optimizer statistics].

  Such statistical numbers include:
    • Table related statistics such as numbers of rows
    • Column statistics such as number of nulls
    • Index related statistics such as B-tree levels
    • System statistics such as CPU and I/O performance 

}
{ Hints

  → development/databases/Oracle/SQL/hints[Hints] allow a developer to override the execution plan that Oracle would have chosen otherwise.

}


sa:

  → development/databases/Oracle/SQL/clauses/where/subquery/execution-plan[SQL execution plans] for subqueries in `where` clauses.

  With → development/databases/Oracle/optimizer/adaptive[adaptive query optimization], the *statement executor* can adjust an SQL execution plan (which was created at *compile-time*) at *run-time*.

  → development/databases/Oracle/SQL/statement/execution/plan/directive[SQL plan directives] store statistical information about past executions of an SQL statement. They're used to (hopefully)
  create a more optimal plan for a future execution of the SQL statement.

  → development/databases/Oracle/installed/dynamic-performance-views/sql/plan[`v$sql_plan`] and
  → development/databases/Oracle/installed/dynamic-performance-views/sql/plan/monitor[`v$sql_plan_monitor`]

  → development/databases/Oracle/installed/packages/dbms/xplan[`dbms_xplan`]

  The → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/trace-file#ora-trace-file-STAT[`STAT`] lines in a
  → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/trace-file[trace file].

  The fixed tables → development/databases/Oracle/architecture/instance/fixed-tables/xplton-xpltoo[`x$xplton`, `x$xpltoo`] and
  → development/databases/Oracle/architecture/instance/fixed-tables/k/q/lf/xpl[`x$kqlfxpl`].

  → development/databases/Oracle/installed/data-dictionary/base-tables/sqlobj[`sys.sqlobj`]

  → development/databases/Oracle/adminstration/init-parameters/nls#ora-nls_sort[`nls_sort`].

  → development/databases/Oracle/PL-SQL/errors-warnings/PLW-07204_conversion-away-from-column-type-may-result-in-sub-optimal-query-plan

  → development/databases/SQL-Server/sql/Query-Optimizer/Execution-Plan[Execution plans] in → development/databases/SQL-Server.

  The SQL statements that are executed as part of a → development/databases/Oracle/objects/triggers is not recorded for the statement that fires the trigger.

? → development/databases/Oracle/adminstration/init-parameters/event/list[Event] 10132 dumps the plan after compilation of an SQL statement

   Execution plan → development/databases/Oracle/SQL/statement/execution/plan/tests[tests].
