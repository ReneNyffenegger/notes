$ Oracle SQL: LISTAGG
@ listagg

`listagg` is → development/databases/Oracle/SQL/select/aggregate[aggregate function] that allows to concatenate values of different records that belong to the same group into *one* record.

code {
select
   …
   LISTAGG([DISTINCT] expr [, separator])
     [ overflow-clause                 ]
     [ WITHIN GROUP (order by xyz)     ]
     [ OVER ( query partition clause ) ]
   …
from
   …
→ development/databases/Oracle/SQL/select/group-by
   expr
code }

`listagg` is defined in the → misc/ISO/9075/features/T625[optional SQL feature T625].

→ development/databases/Oracle/Releases-and-versions/19c improves `listagg` with the `DISTINCT` clause.

{ Example

  gh|Oracle-Patterns|/SQL/select/group_by/listagg.sql||

  The result of the query is
code {
ID TXT_
-- ----------------------
1  eins-one-un
2  duo-two
3  drei-three-tres-trois
code }

}
{ ORA-01489: result of string concatenation is too long

 `listagg` can only return up to 4000 characters so that the following statement results in an
 → development/databases/Oracle/errors/ORA-01489_result-of-string-concatenation-is-too-long error:
code {
select
   listagg(level, '-')
from
   dual connect by level < 1023;
code }

  Such errors can be omitted with the *listagg overflow clause*:
code {
select
   listagg(level, '-' on overflow truncate '...' without count)
from
   dual connect by level < 1023;
code }

  With the → development/databases/Oracle/Data-Cartridge/interfaces[Data Cartridge Interfaces], it is possible to write a
  → development/databases/Oracle/Data-Cartridge/interfaces/aggregation[user defined aggregate function] that offers a similar functionality like `listagg`, but returns
  a → development/databases/Oracle/SQL/data-types/lob[`CLOB`].
  -
  An example of such a user defined function is → development/databases/Oracle/SQL/select/aggregate/listagg/ORA-01489[here].
}

sa:
  `listagg` being used to → development/databases/Oracle/installed/data-dictionary/ind/columns/columns-of-index#dba_ind_columns-listagg[concatenate the column names] of
  → development/databases/Oracle/objects/indexes[indexes].
