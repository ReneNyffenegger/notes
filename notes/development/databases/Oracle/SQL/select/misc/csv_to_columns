$ Oracle SQL: CSV lines to columns

This example tries to demonstrate how → development/databases/Oracle/SQL/functions/regular_expressions/regexp_substr[`regexp_replace`] can be used to transform
→ development/Data/exchange/formats/CSV text that is stored in a *single column* in a → development/databases/Oracle/objects/tables[table] into multiple columns
in a → development/databases/Oracle/SQL/select[`select` statement].

First, we need a table for our test data …
gh|Oracle-Patterns|/SQL/select/misc/csv_to_columns/create-table.sql||

… and fill it with CSV like data:
gh|Oracle-Patterns|/SQL/select/misc/csv_to_columns/insert-values.sql||

The following select statement creates a column for each value in our CSV data. It uses the
→ development/regular-expressions[regular expression] pattern `[^,]*` which means: *any count of non-comma characters*.
-
For the first column, we require that the returned value starts at the beginning of our CSV data, hence the `^` in front of the patter.
-
The columns 2, 3 and four use the *occurence* parameter to return the respective value.
gh|Oracle-Patterns|/SQL/select/misc/csv_to_columns/select.sql||

Cleaning up:
gh|Oracle-Patterns|/SQL/select/misc/csv_to_columns/drop-table.sql||
