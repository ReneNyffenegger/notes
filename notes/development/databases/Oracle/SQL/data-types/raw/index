$ Oracle data type RAW and LONG RAW
@ raw

The data types `raw` and `long raw` (as also → development/databases/Oracle/SQL/data-types/lob[`blob`]) store a sequence of bytes.

The `raw` data type is similar to the `→ development/databases/Oracle/SQL/data-types/varchar2` data type, but it is not subject to character conversion
in Oracle Net or import/export utilities.

`long raw` stores → development/Data/binary up to 2 GB.

`long raw` (as well as `long`) is horrible to manage, especially when their size is larger than 32 KB. Therefore, Oracle (and probably everybody else) recommends to use → development/databases/Oracle/SQL/data-types/lob[`clob` instead of `long raw`].

It should be noted that → development/databases/Oracle/SQL/functions[SQL functions] do not operate on the `raw` datatype and that
→ development/databases/Oracle/PL-SQL does not allow to overload functions between `raw` and
→ development/databases/Oracle/SQL/data-types/char[`char`] data types.
-
These limitations give raise to the `→ development/databases/Oracle/installed/packages/utl/raw` package with which RAWs can be manimpulated.

~Packages~ related to the raw data types are: → development/databases/Oracle/installed/packages/utl/raw[`utl_raw`] and → development/databases/Oracle/installed/packages/utl/i18n[`utl_i18n`] (for example the procedure
→ development/databases/Oracle/installed/packages/utl/i18n/api/string_to_raw[`utl_i18n.string_to_raw`].

{ rawtohex

  gh|Oracle-Patterns|/SQL/datatypes/raw/rawtohex.sql||

  The return value of `rawtohex` is limited to 32767 bytes. Additional data is truncated.

}

sa:

  → development/databases/Oracle/SQL/functions/raw[Functions related to `raw`] include `rawtohex` and `hextoraw`.

  → development/databases/Oracle/tools/sql-loader/binary-data-long-raw[Loading binary data into long raw with SQL*Loader]

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/Oracle/DataAccess/Types/OracleBinary[`Oracle.DataAccess.Types.OracleBinary`] (with an example that demonstrates how
  a long raw can be extracted from a table and then be written to a file).

  The function `→ development/databases/Oracle/installed/packages/dbms/utility[dbms_utility].is_bit_set`

  → development/databases/Oracle/installed/packages/dbms/stats/api/convert_raw/value[`dbms_stats.convert_raw_value`] converts a (statistical value stored as raw) back to
  its original data type and value (see → development/databases/Oracle/installed/data-dictionary/tab/cols#dba_tab_cols-stat-cols[statistcal columns] in
  → development/databases/Oracle/installed/data-dictionary/tab/cols[`dba_tab_cols`]).

  The → development/databases/Oracle/OraOLEDB/connection-string-attributes[OraOLEDB specific connection string attribute `ChunkSize`]

  → development/databases/Oracle/SQL/functions/lob/to[`to_lob`] converts a → development/databases/Oracle/SQL/data-types/long[`long`] or a `long raw` to a
  → development/databases/Oracle/SQL/data-types/lob[lob data type].

  In order for a → development/databases/Oracle/objects/views/materialized[materialized view] to be fast refreshable, the query must not have references
  to `raw` or `long raw`.

  The maximum size of `raw`, → development/databases/Oracle/SQL/data-types/varchar2[`varchar2`] and `nvarchar2`  in SQL is controlled by the
  → development/databases/Oracle/adminstration/init-parameters/max/string_size[init parameter `max_string_size`].

  → development/databases/Oracle/SQL/data-types
