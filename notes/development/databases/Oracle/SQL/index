$ Oracle SQL

→ development/databases/Oracle/SQL/select

→ development/databases/Oracle/SQL/DCL: → development/databases/Oracle/SQL/DCL/grant[`grant`] and `revoke`

→ development/databases/Oracle/SQL/DDL: `→ development/databases/Oracle/SQL/analyze`, `associate statistics`, `audit`, `comment`, `create ...`, `disassociate statistics`, `drop ... `, `flashback ... `, `grant`, `noaudit`, `purge`, `rename`, `revoke`, `truncate`

→ development/databases/Oracle/SQL/DML: `call`, `delete`, → development/databases/Oracle/SQL/statement/verbs/explain[`explain plan`], `insert`, `lock table`, `merge`, `select` and `update`.

→ development/databases/Oracle/SQL/TCL: `commit`, `savepoint`, `rollback`, `set transaction`

→ development/databases/Oracle/SQL/data-types

→ development/databases/Oracle/SQL/functions

→ development/databases/Oracle/SQL/statement/execution[SQL statement execution]

→ development/databases/Oracle/SQL/session-system-control

In order to dynamically execute SQL statements (that are for example stored in a string), → development/databases/Oracle/PL-SQL/execute-immediate[`execute immediate`] might be used.

→ development/databases/Oracle/SQL/cursor[Cursors]

{ SQL analysis

  See → development/databases/Oracle/installed/packages/dbms/utility#dbms_utility-expand_sql_text[`dbms_utility.expand_sql_text`].

}

sa:
  → development/databases/SQL

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/Oracle/DataAccess/Client/OracleCommand[`Oracle.DataAccess.Client.OracleCommand`]
