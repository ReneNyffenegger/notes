$ Oracle SQL function: REGEXP_SUBSTR
@ regexp_substr

`regexp_substr` is the → development/regular-expressions[regular expression] variant of → development/databases/Oracle/SQL/functions/text/substr[`substr`].

The basic usage of `regexp_substr` is to
search for the → development/regular-expressions `pattern` in `text` and return the portion of `text` that matches this pattern:
code {
regexp_substr ( text , pattern )
code }

Optionally, a start position can be stated: the first character of `text` where a matching pattern should be after:
code {
regexp_substr ( text , pattern , start_position )
code }

In case that there are multiple portions in `text` that match `pattern`, an optional occurence can be give to return the n-th match:
code {
regexp_substr ( text , pattern , start_position , occurence )
code }

A `match_param` can be used to change the default function:
code {
regexp_substr ( text , pattern , start_position , occurence, → development/databases/Oracle/SQL/functions/regular_expressions/parameters/match_param[match_param])
code }

Finally, an other optional parameter is `sub_expression` (a number between `1` and `9`):
code {
regexp_substr ( text , pattern , start_position , occurence, match_param , sub_expression)
code }

{ Some basic examples

  { Extract a number from a string

    gh|Oracle-Patterns|/SQL/functions/regular_expressions/regexp_substr/extract-number.sql||

  }
  { Extract third value from a semicolon separated string

    gh|Oracle-Patterns|/SQL/functions/regular_expressions/regexp_substr/extract-3rd-substring.sql||

  }
  { Extract the portion of a text between two delimiters

    The following example extracts the portion of the text that is delimeted with `>` and `<`.

    gh|Oracle-Patterns|/SQL/functions/regular_expressions/regexp_substr/extract-between-delimiters.sql||

  }
  { Split text into records of words

    This example uses the regular expression pattern `\w+` in combination with a recursive query to extract «words» from a text. Each word is returned as a record:
code {
select
   regexp_substr('
This regexp_replace example returns a
record for each word in this text', '\w+', 1, level) word
from
   dual → development/databases/Oracle/SQL/select/hierarchical-queries/start-with_connect-by[connect by] level <= 12 --<== needs to be adjused or result set to be filtered.
;
--
-- WORD                                                                    
-- ------------------------------------------------------------------------
-- This
-- regexp_replace
-- example
-- returns
-- a
-- record
-- for
-- each
-- word
-- in
-- this
-- text
code }

  }
}

sa:

 `regexp_substr()` can be used to translate → development/Data/exchange/formats/CSV[CSV] lines to individual columns,
  see → development/databases/Oracle/SQL/select/misc/csv_to_columns[here].

  → development/databases/Oracle/SQL/functions/regular_expressions[Oracle functions for regular expressions]

  → development/databases/Oracle/errors/ORA-12727_invalid-back-reference-in-regular-expression

  `regexp_substr` is defined in the → misc/ISO/9075[SQL Standard] as → misc/ISO/9075/features[feature] F844.
