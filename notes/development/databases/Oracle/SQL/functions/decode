$ Oracle SQL: DECODE
@ decode

code {
DECODE( expr
        val_1 , result_1 ,
        val_2 , result_2 ,
        val_3 , result_3 ,
)
code }

Decode compares the value of `expr` with `val_n` and returns `result_n` for the *first* `val_n` that is equal to `expr`.

{ Default value

  It's possible to add a *default value* which is returned if no values match:o
code {
DECODE( expr
        val_1 , result_1 ,
        …
        default_value
)
code }

}
{ Special NULL treatment #ora-decode-null

 `decode` compares `→ development/databases/Oracle/SQL/null` values differently than one → development/databases/Oracle/SQL/null#ora-null-cmp[is used to from Oracle]. `decode` considers `null` to be equal to `null`.

  The following statement returns 42:
code {
select
   decode( null ,
      null,  42,
     'xyz',  99,
             17)
from
   dual;
code }

}

sa:

  The → development/databases/SQL-Server#from-oracle-to-sql-server[SQL Server equivalent] for `decode` seems to be `choose`.
