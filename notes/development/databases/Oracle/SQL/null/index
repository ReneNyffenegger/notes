$ Oracle SQL: NULL
@ null

{ Zero length strings are NULL

  A speciality of → development/databases/Oracle is that it considers a zero length → development/databases/Oracle/SQL/data-types/varchar2#varchar2-null[`varchar2` to be `null`].
  -
  Unlike in → development/databases/SQL-Server however, a string can be concatenated with the null value without the entire expression becoming null.

  Because empty strings are equivalent to `null`, it's impossible to create empty → development/databases/Oracle/SQL/JSON[JSON] strings.

}
{ Indexes

  Most → development/databases/Oracle/objects/indexes[indexes] do not create index-entries for rows where all indexed
  → development/databases/Oracle/objects/tables/columns[columns] are `null`.
  -
  An exception to that rule are → development/databases/Oracle/objects/indexes/bitmap[bitmap indexes]: they create an entry for all rows regardless of `null` or `not null` values.

}

sa:

  → development/databases/Oracle/SQL/functions/null-related[SQL functions] related to `null`.

  The → development/databases/Oracle/objects/tables/constraints/not-null[`not null` constraint].

  → Companies-Products/SAS/programming/proc/sql/oracle/null

  → development/databases/SQL/data-types/null

  → development/Software/Oracle-SQL-Developer allows to configure how `null` values are
  displayed under → development/Software/Oracle-SQL-Developer/GUI/menu/Tools/Preferences/Database/Advanced[Tools -> Preferences -> Database -> Advanced].

  A → development/databases/Oracle/SQL/select/subquery that returns `null` values to a → development/databases/Oracle/SQL/clauses/where/subquery/in_not-in[`not in`] operator
  causes the entire query to not return any record at all.

  The influence of `null` values in → development/databases/Oracle/SQL/select/aggregate/null-values[aggregate functions]

  → development/databases/Oracle/errors/ORA-01723_zero-length-columns-are-not-allowed
