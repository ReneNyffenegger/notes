$ Oracle SQL: WITH clause
@ with clause

In an → development/databases/Oracle/SQL/statement, a *with clause* allows to define
  • (named) subquery blocks, or
  • → development/databases/Oracle/PL-SQL procedures and functions.

{ Local functions #ora-with-func

  A `with` clause allows to declare → development/databases/Oracle/PL-SQL functions that are local to the → development/databases/Oracle/SQL/statement in which it occurs:
code {
with
   function f (a number, b number) return number is
   begin
      return abs(a) + abs(b);
   end f;
   function g (a number, b number) return number is
   begin
      return f(a-5, b+5);
   end g;
   d as (
     select -4 u,  9 v from dual union all
     select  4 u,  9 v from dual union all
     select -2 u, -8 v from dual union all
     select  1 u,  0 v from dual
   )
select
   u,
   v,
   f(u,v) f,
   g(u,v) g
from
   d
;
code }

  Another example …
  gh|Oracle-Patterns|/SQL/select/with/inline-function/example-01.sql||

  When using local functions in a `with` clause to insert data, the `with_plsql` → development/databases/Oracle/SQL/hints must be used to prevent
  → development/databases/Oracle/errors/ORA-32034_unsupported-use-of_WITH-clause#ora-32034-with_plsql[ORA-32034: unsupported use of WITH clause].

  See also → development/databases/Oracle/PL-SQL/pragma/inline[`pragma inline`].

}
{ Using the WITH clause together with an INSERT statement

code {
create table tq84_t (col number);

→ development/databases/Oracle/SQL/DML/insert into tq84_t
with d as (
   select 42 as num from → development/databases/Oracle/SQL/dual
)
select * from d;

drop table tq84_t;
code }

}
{ Combining WITH clause with UNION ALL #ora-with-union-all

  The following somewhat silly select statement demonstrates how a `WITH` clause can be combined with a → development/databases/Oracle/SQL/select/set-operators/union/all[`UNION ALL`]:
code {
with p as (select 'FOO' nam from dual)
   select 'object', owner      from p, dba_objects      where object_name = p.nam union all
   select 'column', table_name from p, dba_tab_columns  where column_name = p.nam;
code }

}

sa:


  In a `with` clause, the → development/databases/Oracle/SQL/hints[`/*+ materialize */` hint] forces the data that is returned by its → development/databases/Oracle/SQL/select/subquery to be stored
  in a → development/databases/Oracle/objects/tables/types/global-temporary[global temporary table].

  Using a `with` clause in a → development/databases/Oracle/SQL/statement/nouns/table/create/as-select#ora-ctas-with[`create table as select` statement].

  The *cursor duration temporary tables* → development/databases/Oracle/optimizer#ora-optimizer-qry-tran[query transformation].

  The → development/databases/Oracle/errors[error messages]
    • → development/databases/Oracle/errors/ORA-32034_unsupported-use-of_WITH-clause
    • → development/databases/Oracle/errors/ORA-32044_cycle-detected-whlie-executing-recursive-WITH-query
    • → development/databases/Oracle/errors/ORA-02287_sequence-number-not-allowed-here

  The `with` clause can be used to prevent → development/databases/Oracle/errors/ORA-62569_nested-polymorphic-table-function-is-disallowed

