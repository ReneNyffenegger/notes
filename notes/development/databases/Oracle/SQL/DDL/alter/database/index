$ Oracle SQL: alter database

Oracle apparently considers `alter database` to be a → development/databases/Oracle/SQL/DDL[DDL statement].

{ alter database add standby logfile

code {
alter database add standby logfile ('/path/to/file') size 500M;
alter database add standby logfile thread 2 size 500M;
code }

}
{ alter database convert to physical standby

  Converts a snapshot → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby] database to a
  physical standby database.
  -
  The database must be mounted, but not open.
  -
  It must have been mounted at least once in read-write mode.

}
{ alter database disable thread n

}
{ alter database drop logfile group n


}
{ alter database force logging #force-logging

  Forced logging prevents unlogged direct writes in a database.

  The statement might take a bit of time to complete because it has to wait until all unlogged direct write I/O is flushed.

  A → development/databases/Oracle/High-Availability/Data-Guard/index#dg-primary-db[primary database] in a
  → development/databases/Oracle/High-Availability/Data-Guard[data guard] environment must be running with forced logging.

}
{ alter database open …

  { Upgrade/migrate mode

    The → development/databases/Oracle/architecture/database can be → development/databases/Oracle/architecture/instance/startup-shutdown[opened] in the very
    limited *upgrade/migrate* mode (which lacks package standard and → development/databases/Oracle/installed/packages/dbms/output[`dbms_output`], among other things).
code {
alter database open upgrade
code }
  }

}
{ alter database register logfile

code {
alter database register logfile '/path/to/some/possibly/archived/logfile.arc';
code }

}
{ alter database recover managed standby database #alter-database-recover-managed-standby-database

 Enable *Real-Time Apply* on *physical* → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby databases].
 -
 Compare with → #alter-database-start-logical-standby-apply-immediate
  
code {
alter database recover managed standby database;
code }


  { cancel

    Stop application of *Redo Apply* on the physical → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby DB].

code {
alter database recover managed standby database cancel;
code }


  }
  { disconnect

    Without using `disconnect`, a foreground session is started, that is, the session cannot be used to execute further SQL statements. With `disconnect`, a background session
    is started:
code {
alter database recover managed standby database ~disconnect~;
code }

  }

}
{ alter database start logical standby apply immediate #alter-database-start-logical-standby-apply-immediate

   Enable *Real-Time Apply* on *logical* → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby databases].
   -
   Compare with → #alter-database-recover-managed-standby-database

}
