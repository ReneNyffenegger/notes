$ Oracle: Sample schemas
@ sample schemas

Oracle maintains a few *sample schemas* which are used in Oracle's documentation to demonstrate features and concepts of SQL and the database in general.

These schemas are described in → https://docs.oracle.com/en/database/oracle/oracle-database/21/comsc/index.html[Oracle online database documentation (21c)] and
can be → development/version-control-systems/git/commands[cloned] from the github repository → https://github.com/oracle/db-sample-schemas[sample schemas on github].
-
The sample schemas are also supposed to be found under
`→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n[$ORACLE_HOME]/demo/schema`, but I only found
`→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/demo/schema/human_resources`.

Starting with → development/databases/Oracle/Releases-and-versions/21c, Sample Schemas are not part of a default Oracle installation, they must be cloned from a GitHub repository.

Oracle's sample schemas are:
table { lll
   BI ☰ → Business/intelligence ☰
   HR ☰ Human Resources ☰ Among the sample schemas, the HR schema is the smallest and most sipmle one. The HR account is locked after the installation. See also `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/demo/schema/human_resources`
   IX ☰ Information Exchange ☰
   OE ☰ Order Entry ☰ Needs MDSYS (→ development/databases/Oracle/Options/spatial-and-graph[Oracle Spatial?) to be installed.
   PM ☰ Product Media ☰
   SH ☰ Sales History ☰
table }

Some schemas are dependent on other schemas; they need to be installed in alphabetical order.

{ Cloning the github repository

code {
$ → development/version-control-systems/git/commands/clone[git clone] https://github.com/oracle/db-sample-schemas.git
$ cd db-sample-schemas
$ → development/version-control-systems/git/commands/tag
v12.1.0.2
v12.2.0.1
v18c
v19.2
v19c
v21.1
$ → development/version-control-systems/git/commands/switch --detach v19c
code }

}
{ Installing the schemas

  Use Perl for → development/languages/Perl/in-place-editing[in place editing]: `__SUB__CWD__` must be replaced with the current directory.
  -
  Note that a perl interpreter is installed under `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/perl`.

  I use `-Mopen="IO,:raw"` to → https://stackoverflow.com/a/71337274/180275[preserve Unix line endings] in the files.

  { PowerShell
code {
PS> perl.exe -Mopen="IO,:raw" -i -p -e "s#__SUB__CWD__#$($pwd -replace '\\', '/' )#g" (get-childItem *.sql,*/*.sql,*/*.dat)
code }


rem {
   Change line endings back to Unix:
code {
get-childItem *.sql,*/*.sql,*/*.dat | % {
   [IO.File]::WriteAllText( $_, [IO.File]::ReadAllText($_) -replace ("`r`n", "`n"))
}
code }
rem }

  }
  { Make sure the Oracle environment is correct

    Linux/Unix → Linux/shell:
code {
$ source → Linux/fhs/usr/local/bin/oraenv[/usr/local/bin/oraenv]
code }

  }
  { Windows: Grant access rights on some files

    The Oracle Windows-Service that is running the instance needs to be able to read the files referenced
    in → https://github.com/oracle/db-sample-schemas/blob/main/order_entry/createResources.sql[`order_entry/createResources.sql`],
    otherwise, errors like → development/databases/Oracle/errors/ORA-22288_file-or-LOB-operation_failed[ORA-22288: file or LOB operation FILEOPEN failed]
    and/or *ORA-31001: Invalid resource handle or path name "/home/OE/purchaseOrder.xsd"* will be thrown.

code {
$oracle_service_name = 'NT SERVICE\OracleServiceORA19' 

$accessRule = new-object System.Security.AccessControl.FileSystemAccessRule `
   'NT SERVICE\OracleServiceORA19'                                , `
  ([System.Security.AccessControl.FileSystemRights]::FullControl) , `
  ([System.Security.AccessControl.AccessControlType]::Allow)

foreach ($file in get-childItem -recurse -file -include *xsd,*xsl,*.xml order_entry) {  
   $acl = get-acl $file.fullName
   $acl.AddAccessRule($accessRule)
   set-acl $file.fullName   $acl
}
code }

  }
  { Show executed script

    For each line in the `*.sql` scripts that start with `@`, add another line that writes the name of the executed SQL script so that errors during the installation
    can be easier located.

code {
perl.exe -Mopen="IO,:raw" -i'.bak' -p -e "s#^(\s*)@(.*)$#prompt exec script `$2;\n`$1\@`$2#" (get-childItem *.sql,*/*.sql)
code }

   Remove .bak files:
code {
PS> get-childItem -re *.bak | % { rm $_}
code }

  }
  { Install

?   Because OE needs MDSYS, make sure that Oracle Spatial is installed.

    Run the `mksample.sql` script in → development/databases/Oracle/SQL-Plus. This script creates all 5 sample schemas. If any of those schemas already exists, they will be dropped first.

    If set in the `→ development/databases/Oracle/SQL-Plus/sqlpath/login` file,
    consider making sure that → development/databases/Oracle/adminstration/init-parameters/plsql_warnings[`plsql_warnings`]
    is disabled in order to focus on error messages and not be distracted by warnings.

rem {
SQL> → development/databases/Oracle/SQL/statement/nouns/session/set/init-param[alter session set] plsql_warnings = 'disable:all';
rem }

   Note: the final slash in the path of the log directory seems to be required:
code {
rem mkdir log
→ development/databases/Oracle/SQL-Plus[sqlplus] system/iAmSystem
SQL> @mksample iAmSystem iAmSysdba hrPw oePw pmPw ixPw shPw biPw DATA TEMP log/ ora19
code }

  Start from a → Windows/PowerShell command line and → development/databases/Oracle/SQL-Plus/start/run-SQL-script-from-command-line#sqlplus-highlight-ps[highlight errors and warnings]:
code {
sqlplus system/iAmSystem@Ora19 `@mksample iAmSystem iAmSysdba hrPw oePw pmPw ixPw shPw biPw DATA TEMP log/ ora19 | foreach-object {
   $line = $_
   $line = $line -replace '^(error|warning).*|^SP2-', "$([char]27)[38;5;9m$line$([char]27)[0m"
   $line = $line -replace '^(\s*exec script).*|^SP2-', "$([char]27)[32;5;9m$line$([char]27)[0m"
   $line
}
code }

  }
  { TODO

    { Unlocking HR

      The HR account is supposed to be locked after the installation and must be unlocked befor logging on as HR. However, I found this information to be wrong.
      Anyway, the account can be unlocked with
code {
SQ> alter user hr identified by your_password account unlock;
code }

    }
  }
}

sa:

  → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/rdbms/admin/utlsampl_sql[`$ORACLE_HOME/rdbms/admin/utlsampl.sql`] creates the sample schema `SCOTT` with the tables
  `EMP`, `DEPT`, `SALGRADE` and `BONUS`.
