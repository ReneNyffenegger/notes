$ oradebug unit_test

code {
oradebug unit_test dbke_test dde_flow_kge_soft bla foo bar baz
--
-- --> → development/databases/Oracle/errors/ORA-00700_soft-internal-error, arguments: [bla], [foo], [bar], [baz], [], [], [], [], [], [], [], []
code }

Found in https://thehelpfuldba.com/2017/06/[A DBA's blog]:
code {
oradebug unit_test kebm_dmp_slv_attrs kewrmafsa_
oradebug unit_test kebm_set_slv_attrs kewrmafsa_ retain retain retain retain 0 0
code }

Found in the → https://oraclue.wordpress.com/2009/10/29/find-waiter-with-oradebug-11gr2/[oraclue blog].
code {
oradebug unit_test per_session_find_one_waiter find_waiters_for=current_sess wait_event="enq: TX – row lock contention" waiter_min_secs_blkd=300 min_results=1
code }

?
code {
SQL> oradebug unit_test ksm_ut_alloc_mem
code }


Number of loops?
code {
SQL> oradebug unit_test ksm_ut_memrmstats 1 1 1
code }

code {
oradebug unit_test ksp_ut_gpu <mode> [<wait_time_secs>|<param_name>]
   <mode>: INIT | STALL | KILL
code }

code {
oradebug unit_test ksl_tst_pkt_ssh <cmd> <test_num>
  ksl_tst_pkt_ssh: Cmd: init/get/clean
code }

code {
oradebug unit_test ksfd_ut_snap
code }

code {
oradebug unit_test ksfd_ut_share
code }

code {
oradebug unit_test ksfqutmrr <op> ..
  <op>: ctxcreate|create|retrieve|mirrcnt|mrside|read|close|copy|delete|ctxdestroy
code }

code {
oradebug unit_test kjcicut
code }

code {
oradebug unit_test kjoeut
code }

code {
 oradebug unit_test kjscut
code }

Get statistics for a wait event, for example `library cache pin`:
code {
SQL> oradebug unit_test get_wait_event_statistics wait_event="library cache pin"
code }

code {
oradebug unit_test ksoltp_ut_main test1 <num_threads> <num_of_tasks_to_submit> <max_limit>
oradebug unit_test ksoltp_ut_main test3 <num_threads> <num_of_tasks_to_submit> <cleanup_type(1-3)>
oradebug unit_test ksoltp_ut_main test4 <num_threads> <num_of_tasks_to_submit> <destroy_waittime_csecs>
oradebug unit_test ksoltp_ut_main test6 <num_threads> <num_of_tasks_to_submit> <allocation_size><number_of_allocations>
oradebug unit_test ksoltp_ut_main test8 <num_threads> <num_of_tasks_to_submit> <max_limit>k
oradebug unit_test ksoltp_ut_main test9 <num_threads> <num_of_tasks_to_submit> <max_limit>
oradebug unit_test ksoltp_ut_main test13 <num_threads> <num_of_tasks_to_submit> <allocation_size><number_of_allocations>
oradebug unit_test ksoltp_ut_main test14 <num_threads> <num_of_tasks_to_submit> <loop_count><master_loop_factor>
code }

{ kjzdut

code {
SQL> oradebug UNIT_TEST kjzdut <sub_test> <options>
ERROR: insufficient arguments
 kjzdut - kjzd unit testing

 Syntax to run this test is:
 SQL> oradebug UNIT_TEST kjzdut <sub_test> <options>

 Currently following sub tests are implemented:
        PRINT_DUMPDESC  : print descriptions of the DIAG dumps
        DUMP_PSTACK {session_id}        : Dump pstack of session_id
        DUMP_ASM        : Send message to ASM to dump
code }

`PRINT_DUMPDESC` must be uppercase:
code {
SQL> oradebug unit_test kjzdut PRINT_DUMPDESC
DIAG dump request description
==================
dump KSTDUMPALLPROCS_CLUSTER
system state dump request
ASM system state dump request
RAC dump request
process state dump request
trace bucket dump request
custom dump request
diagnostic dump request
abnormal process termination
abnormal instance termination
dump DIAG in memory trace
SYSTEMSTATE_GLOBAL: global system state dump request
system detected a lock (resource) blocker
controlfile time tracing
controlfile enqueue held for too long
timeout communicating with ASM process
timeout initializing ASMB background
ASM umbilicus terminated
ASM client did not deregister
ADVM dump request

DIAG custom dump callback description
==================
dump KST trace buffers for all processes
KSXP receiver dump
Diag internal trace
Hang Manager non-incident asynchronous System State dump
HA dump all procs
KJXGG CGS dump
local receiver state dump
local lms state dump
ges process stack dump
Dump S-lock Resources
kjdg Dump 4031
LMHB diag test dump
LMHB hung process callstack dump
LMHB system state dump
LMHB css dump
Controlfile header dump
Redo dumping
Dump Long Waiting LE
Dump LE in Granules
Snap Shot Old Dumping
code }

code {
SQL> 
code }

}

{  kxdbc_ut_driver

code {
oradebug unit_test kxdbc_ut_driver <mode=local|remote>
                                   <bs=backup_piece_size>
                                   <df=file1,file2,...>
                                   <cs=chunk_size>
                                   <mb=max_buffers>
                                   <ecf=estimated_compression_factor>
                                   <cfn=container_filename>
                                   <cfs=container_filesize>
                                   <nc=number_of_chunks>
                                   <test=t|f|y|n>
                                   <dl=debug_level>
code }

}
