$ oradebug doc event

`oradebug doc event` documents the format (syntax) for → development/databases/Oracle/tools/oradebug/event[`oradebug event`].

code {
sys@ORA18> → development/databases/Oracle/tools/oradebug doc event

Event Help:
***********

  Formal Event Syntax
  --------------------
    <event_spec>   ::= '<→ development/databases/Oracle/adminstration/init-parameters/event/list[event_id]> [<event_scope>]
                                   [<event_filter_list>]
                                   [<event_parameters>]
                                   [<action_list>]
                                   [off]'

    <event_id>     ::= <→ development/databases/Oracle/tools/oradebug/doc/event/name[event_name] | number>[<target_parameters>]

    <→ development/databases/Oracle/tools/oradebug/doc/event/scope[event_scope]>  ::= [<scope_name>: scope_parameters]

    <→ development/databases/Oracle/tools/oradebug/doc/event/filter[event_filter]> ::= {<filter_name>: filter_parameters}

    <→ development/databases/Oracle/tools/oradebug/doc/event/action[action]>       ::= <action_name>(action_parameters)

    <action_parameters> ::= <parameter_name> = [<value>|<action>][, ]

    <*_parameters> ::= <parameter_name> = <value>[, ]


  Some Examples
  -------------
    * Set event 10235 level 1:
      alter session set events '10235';

    * Set events SQL_TRACE (a.k.a. 10046) level 1:
      alter session set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/sql_trace[sql_trace]';

    * Turn off event SQL_TRACE:
      alter session set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/sql_trace[sql_trace] off';

    * Set events SQL_TRACE with parameter <plan_stat> set to 'never'
      and parameter <wait> set to 'true':
      alter session set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/sql_trace[sql_trace] wait=true, plan_stat=never';

    * Trace in-memory the SQL_MONITOR component (the target) and all its
      sub-components at level high. Get high resolution time for each
      trace:
      alter session set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/trace[trace][sql_mon.*] memory=high,
                                                 get_time=highres';

    * On-disk trace PX servers p000 and p005 for components 'sql_mon'
      and 'sql_optimizer' (including sub-components) at level highest:
      alter system set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/trace[trace][sql_mon | sql_optimizer.*]
                            {process: pname = p000 | process: pname=p005}';

    * Same as above but only when SQL id '7ujay4u33g337' is executed:
      alter system set events '→ development/databases/Oracle/tools/oradebug/doc/event/name/trace[trace][sql_mon | sql_optimizer.*]
                                    [sql: 7ujay4u33g337]
                            {process: pname = p000 | process: pname=p005}';

    * Execute an action immediatly by using 'immediate' for the event
      name:
      alter session set events 'immediate → development/databases/Oracle/tools/oradebug/doc/event/action/eventdump(system)'

    * Create an incident labeled 'table_missing' when external error
      942 is signaled by process id 14534:
      alter session set events '942 {process: 14534}
                                    incident(table_missing)';


  Notes
  -----
    * Implicit parameter level is 1 by default
      e.g. '10053' is same as '10053 level 1'

    * Event target (see [<target_parameters>] construct) is only
      supported by specific events like the TRACE[] event

    * <event_scope> and/or <event_filter> are constructs
      that can be used for any event

    * Same event can be set simultaneously for a different scope or
      target but not for different filters.

    * '|' character can be used to select multiple targets, scope or
      filters.

      E.g. '→ development/databases/Oracle/tools/oradebug/doc/event/name/sql_trace[sql_trace] [sql: sql_id=g3yc1js3g2689 | sql_id=7ujay4u33g337]'

    * '=' sign is optional in <*_parameters>

      E.g. 'sql_trace level 12';

    * Like → development/databases/Oracle/PL-SQL, no need to specify the parameter name for target,
      scope, filters and action. Resolution is done by position in
      that case:

      E.g. '→ development/databases/Oracle/tools/oradebug/doc/event/name/sql_trace[sql_trace] [sql: g3yc1js3g2689 | 7ujay4u33g337]'


  Help sub-topics
  ---------------

    → development/databases/Oracle/tools/oradebug/doc/event/name[NAME]    [<event_name>]      List all events or describe <event_name>
    → development/databases/Oracle/tools/oradebug/doc/event/scope[SCOPE]   [<scope_name>]      List all scopes or describe <scope_name>
    → development/databases/Oracle/tools/oradebug/doc/event/filter[FILTER]  [<filter_name>]     List all filters or describe <filter_name>
    → development/databases/Oracle/tools/oradebug/doc/event/action[ACTION]  [<action_name>]     List all actions or describe <action_name>

code }

sa:

  → development/databases/Oracle/tools/oradebug/doc/component[`oradebug doc components`]

  → development/databases/Oracle/tools/oradebug
