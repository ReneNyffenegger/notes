$ oradebug doc event filter

code {
Event filters in library DIAG:
------------------------------
occurence            filter to implement counting for event checks
→ development/databases/Oracle/tools/oradebug/doc/event/filter/diag/callstack[callstack]            filter to only fire an event when a function is on the stack.If the nofname option is used, then the event is fired only when the function is not on the stack
eq                   filter to only fire an event when a == b
ne                   filter to only fire an event when a != b
gt                   filter to only fire an event when a > b
lt                   filter to only fire an event when a < b
ge                   filter to only fire an event when a >= b
le                   filter to only fire an event when a <= b
anybit               filter to only fire an event when (a & b) != 0
allbit               filter to only fire an event when (a & b) == b
nobit                filter to only fire an event when (a & b) == 0
bet                  filter to only fire an event when b <= a <= c
nbet                 filter to only fire an event when a < b or a > c
in                   filter to only fire an event when a is equal to any b .. p
nin                  filter to only fire an event when a is not equal to any b .. p
streq                filter to only fire an event when string s1 = s2 (up to <len> characters)
strne                filter to only fire an event when string s1 != s2 (up to <len> characters)
tag                  filter to only fire an event when a tag is set

Event filters in library RDBMS:
------------------------------
→ development/databases/Oracle/tools/oradebug/doc/event/filter/rdbms/wait[wait]                 filter for specific wait parameters and wait duration
→ development/databases/Oracle/tools/oradebug/doc/event/filter/rdbms/process[process]              filter to set events only for a specific process
→ development/databases/Oracle/tools/oradebug/doc/event/filter/rdbms/px[px]                   filter to check identity of the process for fault injection

Event filters in library GENERIC:
------------------------------
errarg               filter to set error events only for a specific error argument
code }

The three sections can also be «queried» individually:
code {
oradebug doc event filter → development/databases/Oracle/tools/oradebug/doc/event/filter/diag[diag]
oradebug doc event filter → development/databases/Oracle/tools/oradebug/doc/event/filter/rdbms[rdbms]
oradebug doc event filter generic
code }

{ Filter pgadep

  There was also also a (now) undocumented filter `pgadep`.

  When trying to use the `pgadep` filter, Oracle throws *ORA-49100: Failed to process event statement … ORA-49108: Event Name [PGADEP] not found*.

  In earlier releases of Oracle, it was possible to execute
code {
SQL> oradebug doc event filter pgadep

pgadep: filter to only fire an event when the pgadep matches a given value or falls within a range

Usage
-------
{pgadep:  exactDepth      <ub4>,
          lessThan        <ub4>,
          greaterThan     <ub4> }
code }

  pgadep refers to the recursion level(?) of sql statements.
  -
  In normal execution, 0 is a top level SQL statement, in PL/SQL execution, 0 is PL/SQL execution and 1 is execution of an SQL statement.

  See also → http://www.juliandyke.com/Diagnostics/Tools/ORADEBUG/DOC_EVENT_FILTER.php[Julian Dyke's note].
  

}

sa:
  → development/databases/Oracle/tools/oradebug/doc/event[`oradebug doc event`]
