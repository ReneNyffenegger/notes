$ ORA-00936: missing expression

The following → development/databases/Oracle/SQL/statement causes the error message *ORA-00936: missing expression* to be thrown:
code {
select
   object_name,
   object_type,
   owner      , -- <== Note the comma!
from
   dba_objects;
code }

{ Selecting column name and asterisk #ora-00936-asterisk

  The following SQL statement uses an asterisk (`*`) and combines it with column names, which causes an ORA-00936:
code {
select
   object_type,
   *
from
   user_objects;
code }

  This can be fixed by using an alias:
code {
select
   object_type,
   obj.*
from
   user_objects obj;
code }

  Related to the cause of this error might be the error message → development/databases/Oracle/errors/ORA-00960_ambiguous-column-naming-in-select-list.

}
{ Using a column name that is a semi-reserved keyword

  Semi-reserved keywords can be used as column names when tables or views are created. However, when using such column names in a query's select list,
  the query throws a *ORA-00936: missing expression* error, as for example with the following query:
code {
select
   group#,
   thread#,
   sequence#,
   iscurrent,
   current,
   first_change#,
   con_id
from
   → development/databases/Oracle/installed/dynamic-performance-views/archive;
code }

  In order to query a semi-reserved keyword, they need to be quoted (`"…"`):
code {
select
   group#,
   thread#,
   sequence#,
   iscurrent,
  "CURRENT",
   first_change#,
   con_id
from
   v$archive;
code }

  Semi-reserved keywords can be found in → development/databases/Oracle/installed/dynamic-performance-views/reserved_words[`v$reserved_words`]:
code {
select
   keyword
from
   v$reserved_words
where
   res_semi = 'Y'
code }

}
{ Error after reformatting an SQL statement

  This error can also be caused when sloppily reformatting an SQL statement, for example when the commas in the select list are put to the left side of the expressions
  and a comma on the right side is not deleted (here: `num,`):
code {
select
   42             num,
, 'hello world'   txt
,  sysdate        now
from
   dual
code }

}
{ Using CHAR instead of CHR

  This error message is also caused when inadvertantly using the → development/databases/Oracle/SQL/data-types/char[data type `char`] instead of
  the → development/databases/Oracle/SQL/functions/text/chr-nchr[SQL function `chr`]:
code {
select
   dummy || char(13) as char_with_newline
from
   dual;
code }

}

sa:

  → development/databases/Oracle/errors[Other Oracle error messages] such as
    • → development/databases/Oracle/errors/ORA-00904_invalid-identifier
    • → development/databases/Oracle/errors/ORA-00920_invalid-relational-operator
    • → development/databases/Oracle/errors/ORA-00923_FROM-keyword-not-found-where-expected
