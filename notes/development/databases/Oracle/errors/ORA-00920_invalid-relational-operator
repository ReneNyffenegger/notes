$ ORA-00920: invalid relational operator

{ Example 1

code {
create table tq84_a (
   id  integer,
   txt varchar2(10),
   val number(5,2)
);


begin
insert into tq84_a values(1, 'abc', 1.11);
insert into tq84_a values(2, 'def', 2.22);
insert into tq84_a values(1, 'ghi', 4.00);
insert into tq84_a values(3, 'jkl', 3.99);
insert into tq84_a values(2, 'def', 7.07);
insert into tq84_a values(2, 'abc', 4.50);
end;
/
code }

  The following select statement throws *ORA-00920: invalid relational operator*:
code {
select * from tq84_a where  id, txt  in ( (1, 'ghi'), (1,'def'));
code }
   
  This statement runs OK:
code {
select * from tq84_a where (id, txt) in ( (1, 'ghi'), (1,'def'));
code }

  Cleaning up:
code {
drop table tq84_a;
code }

}
{ Example 2: Syntactically wrong statement

  A simple → development/databases/Oracle/objects/tables:
code {
create table tq84_ora_00920 (
    id  integer   generated always as identity,
    prt varchar2( 3),
    txt varchar2(20)
);
code }
 
  The following → development/databases/Oracle/SQL/statement is syntactically incorrect: it ends with a comma. When trying to execute it, Oracle will throw
  → development/databases/Oracle/errors/ORA-00936_missing-expression.
code {
select
   max(id),
   prt
from
   tq84_ora_00920
group by
   prt,
;
code }
 

  *However*, a select statement that uses *same query* in a → development/databases/Oracle/SQL/select/subquery will throw
  *ORA-00920: invalid relational operator*:
code {
select
   prt,
   txt
from
   tq84_ora_00920
where
  (id, prt) in (
     select
        max(id),
        prt
     from
        tq84_ora_00920
     group by
        prt,     -- <=== ORA-00920: invalid relational operator
   );
code }

  Cleaning up:
code {
drop table tq84_ora_00920;
code }

}
{ Example 3: Unrecognized function

 `regexp_match` is not a (built-in) Oracle function so that the following statement throws the ORA-00920 error:
code {
select
   count(*) cnt
from
   user_objects
where
   regexp_match(object_name, '\d');
code }

  However, if `→ development/databases/Oracle/SQL/functions/regular_expressions/regexp_like` is used, the query runs ok:
code {
select
   count(*) cnt
from
   user_objects
where
   regexp_like(object_name, '\d');
code }

}

sa:
  → development/databases/Oracle/errors[Other Oracle error messages]
