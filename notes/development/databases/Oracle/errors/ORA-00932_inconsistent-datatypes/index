$ ORA-00932: inconsistent datatypes: expected … got …

An *ORA-00932* is thrown when a → development/databases/Oracle/SQL/data-types[data type] cannot be converated to another.
-
In Oracle versions prior to → development/databases/Oracle/Releases-and-versions/23c, the message is *ORA-00932: inconsistent datatypes: expected … got …*, with the «error message improvement program», the messages
changed to *ORA-00932: expression is of data type …, which is incompatible with expected data type …*.


{ CHAR / NUMBER

 { ORA-00932: inconsistent datatypes: expected CHAR got NUMBER

code {
select
   case '1'
      when  2  then 'two'
      when '1' then 'one'
   end
from
   dual;
code }

 }
 { ORA-00932: inconsistent datatypes: expected NUMBER got CHAR

code {
select
   case  1
      when  2  then 'two'
      when '1' then 'one'
   end
from
   dual;
code }

  }

}
{ ORA-00932: inconsistent datatypes: expected CHAR got LONG #ora-00932-exp-char-got-long

  The → development/databases/Oracle/SQL/data-types[data type] of the column
  `data_default` in the → development/databases/Oracle/installed/data-dictionary[data dictionary] view
  → development/databases/Oracle/installed/data-dictionary/tab/columns[`user_tab_columns`] is
  → development/databases/Oracle/SQL/data-types/long[`long`] which essentially makes it impossible
  to formulate a query-condition on that column when selecting from `user_tab_columns`:
code {
select *
from
   user_tab_columns
where
   data_default like '%sysdate%';
code }

  See also
    • → development/databases/Oracle/SQL/data-types/long/to/varchar2[LONG to VARCHAR2]
    • → development/databases/Oracle/errors/ORA-00932_inconsistent-datatypes/expected-CHAR-got-LONG[This link] which shows how `→ development/databases/Oracle/installed/packages/dbms/duma_internal` can be used to somewhat relax this problem.

}
{ ORA-00932: inconsistent datatypes: expected - got CLOB #ora-00932-exp-got-clob

  It's not possible to execute a `→ development/databases/Oracle/SQL/select/group-by` on a → development/databases/Oracle/SQL/data-types/lob#ora-lob-group-by[`clob` (or `blob`)] value. The following `select` statement raises a *ORA-00932: inconsistent datatypes: expected - got CLOB* error:
code {
create table tq84_ora_00932_group_by (
    val number,
    txt clob
);

select
   txt,
   max(val) max_val
from
   tq84_ora_00932_group_by
group by
   txt;
   
drop table tq84_ora_00932_group_by;
code }

}
{ ORA-00932: inconsistent datatypes: expected NUMBER got DATE

 `ceil` cannot be applied on a → development/databases/Oracle/SQL/data-types/date[`date`] datatype:
code {
select ceil(sysdate) from dual;
code }

}
{ ORA-00932: inconsistent datatypes: expected DATE got DATE

  If you get what you want but still complain…

code {
select
   → development/databases/Oracle/SQL/functions/timestamp#ora-adj_date[adj_date](→ development/databases/Oracle/SQL/functions/date/sysdate)
from
   dual;
code }

}
{ ORA-00932: inconsistent datatypes: expected UDT got NUMBER

  The following snippet throws *ORA-00932: inconsistent datatypes: expected UDT got NUMBER*.
code {
create type tq84_result_line as object (
   num     number(2),
   txt     varchar2(10)
);
/

create type tq84_result_table as table of tq84_result_line;
/


declare
   res tq84_result_table;
begin

   select
      tq84_result_table(level, rpad('x', level, 'x')) --- <== Change to tq84_result_line to fix problem
   bulk collect into res
   from
      dual connect by level <= 10;
      
end;
/
code }

}
{ ORA_00932: inconsistent datatypes: expected NLS PARAMETER got NUMBER #ora-00932-exp-nls-parameter-got-number

code {
select
   → development/databases/Oracle/SQL/functions/type-conversion/to/char[to_char](→ development/databases/Oracle/installed/packages/dbms/random[dbms_random].value, '0.0000', 10)
from
   → development/databases/Oracle/SQL/dual;
code }

}
{ ORA-00932: inconsistent datatypes: expected TIMESTAMP got TIMESTAMP WITH TIME ZONE

code {
select
   → development/databases/Oracle/SQL/functions/timestamp#ora-from_tz[from_tz](systimestamp, 'Europe/Zurich')
from
   dual;
code }

}

sa:

  → development/databases/Oracle/errors/ORA-01722_invalid-number

  → development/databases/Oracle/SQL/functions/type-conversion/validate_conversion[`validate_conversion()`]

  → development/databases/Oracle/SQL/data-types

  → development/databases/Oracle/errors[Other Oracle error messages]
