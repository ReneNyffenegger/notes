$ ORA-01722: invalid number

code {
--
-- Cause errors:
--
select case when 'A' =  1  then 'yes' else 'no' end from dual;
select case when  1  = 'A' then 'yes' else 'no' end from dual;

select * from dual where dummy = 42;
select * from dual where 42    = dummy;

--
-- OK:
--
select case when '2' =  1  then 'yes' else 'no' end from dual;
select case when  1  = '2' then 'yes' else 'no' end from dual;
code }

{ Finding values that are not numerical

  Unfortunately, Oracle does not have a built-in function that checks if a value is numerical. However, it is possible to create a user defined function that returns `y` if a value can be converted to a
  number and `n` otherwise:
code {
create or replace function isnumber(txt in varchar2)
   return varchar2
is
   num number;
begin

   num := → development/databases/Oracle/SQL/functions/type-conversion/to/number[to_number](txt);
   return 'y';

exception when value_error then
   return 'n';
end isnumber;
/
code }

code {
select
   isNumber(   5.5  ) a,
   isNumber('-42.3' ) b,
   isNumber( '17,18') c,
   isNumber(   9.1 ') d
from
   dual;
code }

}
{ Using the DEFAULT val ON CONVERSION ERROR clause of TO_NUMBER

  The → development/databases/Oracle/SQL/functions/type-conversion/to/number[`to_number`] function has a
  → development/databases/Oracle/SQL/functions/type-conversion/to/number#ora-to_number-default-on-error[`default 'val' on conversion error`] clause with which it is sometimes possible to
  find offinding characers:
code {
select
   supposed_number,
   to_number(supposed_number default -9999999999999999 on conversion error)
from
   tab
order by
   2;
code }


}
{ Finding the offending SQL statement with a trace file

  By setting the event 01722 (prior to executing the → development/databases/Oracle/SQL/statement[SQL statement]!),
  it is possible to find the offending SQL statement in a → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/trace-file[trace files]:

  Find the name of the trace file into which the statement is written:
code {
SQL> select value from → development/databases/Oracle/installed/dynamic-performance-views/diag/info where name = 'Default Trace File';
SQL> → development/databases/Oracle/SQL/statement/nouns/session/set/init-param[alter session set] events '1722 trace name errorstack level 1';
SQL> select to_number('not a number') from dual;
ORA-01722: invalid number
code }

}


sa:

  → development/databases/Oracle/errors/ORA-06502_PL-SQL-numeric-or-value-error#ora-06502-character-to-number[ORA-06502: PL/SQL: numeric or value error: character to number conversion error]

  The SQL function → development/databases/Oracle/SQL/functions/type-conversion/to/number[`to_number`]

  → development/databases/Oracle/SQL/functions/type-conversion/validate_conversion[`validate_conversion()`],
  → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/is_number[`txt.is_number`]

  → development/databases/Oracle/errors/ORA-00932_inconsistent-datatypes

  The → development/databases/Oracle/PL-SQL/exception#ora-predef-exc[predefined exception] `invalid_number`
