$ ORA-00054: resource busy and acquire with NOWAIT specified or timeout expired

→ development/databases/Oracle/architecture/session[Session] 1:
code {
→ development/databases/Oracle/SQL/statement/nouns/table/create tq84_ora_54 (
   txt varchar2(10)
);
--
-- Table created.
code }

Session 2:
code {
insert into tq84_ora_54 values ('xyz');
--
-- 1 row created.
code }

As long as session 2 did not commit the → development/databases/Oracle/SQL/DML[DML] on `tq84_ora_54`, another session cannot drop the table.
-
Session 1:
code {
→ development/databases/Oracle/SQL/statement/nouns/table/drop tq84_ora_54;
--         *
-- ERROR at line 1:
-- ORA-00054: resource busy and acquire with NOWAIT specified or timeout expired
code }

Find the → development/databases/Oracle/architecture/session that is blocking the table from being dropped:
code {
select
   ses.sid,
   ses.serial#,
   prc.spid
from
   → development/databases/Oracle/installed/dynamic-performance-views/locked_object lck join
   → development/databases/Oracle/installed/data-dictionary/objects     obj on lck.object_id  = obj.object_id join
   → development/databases/Oracle/installed/dynamic-performance-views/session       ses on lck.session_id = ses.sid       join
   → development/databases/Oracle/installed/dynamic-performance-views/process       prc on ses.paddr      = prc.addr
where
   obj.object_name = 'TQ84_ORA_54';
code }

Session 2:
code {
commit;
--
-- Commit complete.
code }

Session 1:
code {
drop table tq84_ora_54;
--
-- Table dropped.
code }

sa:

  Check the → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository/trace-file and/or *alert log* file.

code {
alter session set → development/databases/Oracle/adminstration/init-parameters/ddl/lock_timeout = …;
code }

  Force the creation of a trace file when the next ORA-00054 is thrown:
code {
alter system set events '54 trace name errorstack level 3';

code }

  → development/databases/Oracle/errors[Other Oracle error messages]
