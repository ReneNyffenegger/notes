$ Oracle database buffer cache

The database buffer cache is also referred to as *buffer cache*.

The buffer cache stores copies *data blocks* in memory. These copies are stored in what is called *buffers* by Oracle. Naturally, the size of such a buffer equals the data block size.

The buffer cache is shared among all sessions that are connected to an development/databases/Oracle/architecture/instance.

The goal is to keep frequently used data blocks in the buffer cache in order to improve physical I/O.

When a dirty buffer is not used anymore, it is written to disk by the → development/databases/Oracle/architecture/processes/background/DBWn[Database Writer background process].

{ Components of the buffer cache

  The buffer is divided into
    • Default pool (where blocks are normally buffered)
    • Keep pool
    • Recycle pool
    • Non-default buffer pools (One for each nonstandard block sizes of 2, 4, 16 or 32 KB)
    • Database Smart Flash Cache (flash cache)
    • Least Recently Used list (LRU)
    • Checkpoint queue
    • Flash Buffer Area


}
{ Cache hit vs cache miss

  When a database uses needs data, Oracle checks with the buffer cache if the relevant data block is already copied into the buffer cache.
  -
  If this is the case, this is referred to as a *cache hit*.
  -
  If not, this is a *cache miss*. In this case, a copy from the data block needs to be copied into the buffer cache.

}
sa:
  Compare with → development/databases/SQL-Server/architecture/buffer-cache[SQL Server's buffer cache]
