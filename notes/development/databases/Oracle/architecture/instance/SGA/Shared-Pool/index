$ Oracle: Shared Pool
@ Shared Pool

The *Shared Pool* is part of the → development/databases/Oracle/architecture/instance/SGA. It stores or caches
  • Parsed → development/databases/Oracle/SQL[SQL statements]
  • → development/databases/Oracle/PL-SQL[PL/SQL code]
  • System parameters
  • → development/databases/Oracle/installed/data-dictionary[Data dictionary] information

(Sub-) components of the Shared Pool are
  • → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/library-cache[Library cache] (stores executable SQL and PL/SQL)
  • Reserved pool (to allocate large (>5 KB) contiguous chunks of memory
  • → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/data-dictionary-cache[Data dictionary cache]
  • Server result cache (for SQL query result cache)
  • → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/other-components[Other components] (enqueues, latches, ILM (Information Lifecycle Management) bitmap tables, → development/databases/Oracle/Active-Session-History[Active Session History (ASH)] etc.)

The Shared Pool also stores → development/databases/Oracle/architecture/instance/SGA/Shared-Pool/buffer-header[buffer headers].

Most components of the Shared Pool are shared among → development/databases/Oracle/architecture/session[sessions].
-
A notable distinction between the Shared Pool and the → development/databases/Oracle/architecture/instance/SGA/database-buffer-cache (which is also shared between sessions) is that the
shared pool primarily caches metadata while the buffer cache stores data.

{ Size of the shared pool

? The size of the shared pool depends on whether *automatic shared memory management* (ASMM) and *Automatic Memory Management* (AMM) is used or not and might depend on the value of `shared_pool_size` (See MOS Note 455179.1)

}
{ Examining the contents of the Shared Pool #ora-exam-cont-shared-pool

  The following query shows the summed up allocations of memory for various components in the Shared Pool:
code {
select
   name,
   to_char(bytes/1024/1024, '999,999,990.00') mb
from
   → development/databases/Oracle/installed/dynamic-performance-views/sga/stat
where
   pool = 'shared pool'
order by
   bytes desc;
code }

  While the previous query shows summations, more detailed information about individual objects in the Shared Pool can be queried from
    • `→ development/databases/Oracle/installed/dynamic-performance-views/db/object_cache` and its related views
    • `→ development/databases/Oracle/installed/dynamic-performance-views/sql` and `→ development/databases/Oracle/installed/dynamic-performance-views/sql/area`

}
{ Allocating memory / Heap manager #ora-shared-pool-alloc-mem

  The *heap manager* allocates and releases memory for/from the Shared Pool and keeps track of allocations in the Shared Pool.

  When the heap manager is requested to allocate a certain amount of memory, it tries to locate a chunk of contiguous memory to satisfy this request.

  If such a contiguous space cannot be found, a process begins to free batches of heaps from the shared pool until the chunk can be allocated.

  If even after trying five times to find free memory by going trhough the LRU list there is still not enough *contiguous* memory left after freeing the memory still (typically because the objects
  are being used, see → #ora-shared-pool-pinned-objects[pinned objects]), Oracle throws the error message
  → development/databases/Oracle/errors/ORA-04031_unable-to-allocate_bytes-of-shared-memory.

}
{ Pinned objects #ora-shared-pool-pinned-objects

  The → #ora-shared-pool-alloc-mem[heap manager] does not free memory associated with objects that are being used.
  -
  Such objects are referred to as *pinned objects*.

  An object can be pinned manually using the `→ development/databases/Oracle/installed/packages/dbms/shared_pool` package.

}
{ LRU list

  The Shared Pool uses a LRU list to determine which memory can or should be freed if memory becomes sparse. 

  This is different from the → development/databases/Oracle/architecture/instance/SGA/Large-Pool which does not have such a LRU list.

}
{ SQL Statements

  All child versions of SQL statements that are stored in the Shared Pool can be queried in → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`].
  -
  The child versions' work area can be queried from → development/databases/Oracle/installed/dynamic-performance-views/sql/workarea[`v$sql_workarea`].

}
{ Cleare the shared pool

  Remove all information from the shared pool:
code {
→ development/databases/Oracle/SQL/statement/nouns/system/alter#ora-alter-system-flush[alter system flush] shared_pool;
code }

}
{ Queries

  The units of memory stored in the shared pool are exhibited through → development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/s/p[`x$ksmsp`]:
code {
select * from → development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/s/p[x$ksmsp];
code }

}
{ Problems arising from an undersized pool

  If the Shared Pool is sized too small, the following symptoms are expected
    • → development/databases/Oracle/errors/ORA-04031_unable-to-allocate_bytes-of-shared-memory
    • Library cache lock and pin contention (high library cache reloads), investigate in `→ development/databases/Oracle/installed/dynamic-performance-views/librarycache`
    • Row cache enqueue contention (high row cache reloads), investigate in `→ development/databases/Oracle/installed/dynamic-performance-views/rowcache`
    • Latch contention (Shared pool, library cache, row cache)

}
{ Subpools

  The shared pool comprises of *subpools*

rem {
  When the instances starts up, it creates a subpool for every 4 CPUs with a maximum of 7 subpools: 1-4 CPUs: 1 subpool, 5-8 CPUs: 2 subpools etc.
rem }

  See also the hidden parameter `_kghdsidx_count` and MOS Note 455179.1

}

sa:

  The → development/databases/Oracle/adminstration/init-parameters
     • `→ development/databases/Oracle/adminstration/init-parameters/shared/pool/size`
     • `→ development/databases/Oracle/adminstration/init-parameters/shared/pool/size/reserved`

  → development/databases/Oracle/installed/packages/dbms/shared_pool[`dbms_shared_pool`]

  → development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/lru

  → development/databases/Oracle/SQL-Plus/sqlpath/ratzeputz[`ratzeputz.sql`]

links:
  Tanel Poder's → https://twitter.com/TanelPoder/status/1657223277096361984[tweet] mentions that the paper
  → https://www.oracle.com/technetwork/database/manageability/ps-s003-274003-106-1-fin-v2-128827.pdf[Understanding Shared Pool Memory Structures] from 2005
  is still relevant.
  -
  Because the paper is a bit dated, it should mention that
 `shared_pool_size` → https://twitter.com/tmmdv/status/1657235238420881411[should not be set] on PDB level.

