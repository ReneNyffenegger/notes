$ Oracle System Global Area (SGA)
@ SGA

The SGA is the (shared) memory that an → development/databases/Oracle/architecture/instance[Oracle instance] needs to operate.

{ Components of the SGA

  The components of the SGA are
    • → development/databases/Oracle/architecture/instance/SGA/fixed[Fixed SGA] (stores general information about the state of the database and → development/databases/Oracle/architecture/instance[instance], and information communicated between processes)h
    • variable SGA
    • → development/databases/Oracle/architecture/instance/SGA/database-buffer-cache[Database buffer cache] (stores copies of *data blocks*)
    • → development/databases/Oracle/architecture/instance/SGA/redo-log-buffer[Redo log buffer]

  The sizes of these components can be queried from `→ development/databases/Oracle/installed/dynamic-performance-views/sga`.

  { Variable SGA #ora-variable-sga

    The variable SGA consists of
      • → development/databases/Oracle/architecture/instance/SGA/Shared-Pool (parsed → development/databases/Oracle/SQL[SQL statements], system parameters, data dictionary etc.)
      • → development/databases/Oracle/architecture/instance/SGA/Large-Pool (optional)
      • Java pool
      • → development/databases/Oracle/Features_Options_Management-Packs/Flashback[Flashback] buffer (optional)
      • Database Smart Flash cache (optional level 2 cache on Solaris and → Linux)
      • → development/databases/Oracle/architecture/instance/SGA/In-Memory-Area (optional, to store data in the columnar format)
      • → development/databases/Oracle/architecture/instance/SGA/memoptimize-pool (optional, for key-based queries(?))
      • Shared I/O Pool (Secure files)
      • Streams pool (used by Oracle Streams, Data Pump and → development/databases/Oracle/High-Availability/Golden-Gate to store buffered queue messages). This pool's size is controlled by the init parameter `→ development/databases/Oracle/adminstration/init-parameters/streams_pool/size`.

  }
  { Shared pool vs buffer cache

    A notable distinction between the → development/databases/Oracle/architecture/instance/SGA/Shared-Pool and the → development/databases/Oracle/architecture/instance/SGA/database-buffer-cache is that the
    shared pool primarily caches metadata while the buffer cache stores data.
  }
}


{ SGA Granules #sga-granules

? In 9i, the SGA architecture was reengineered with a concepts called *granules* which are uniformely sized memory units that can be allocated, freed or relocated between memory areas such as buffer cache and shared pool depending on the workload.

  The size of the granules are dependent on OS, → development/databases/Oracle/Releases-and-versions[Oracle version] and size of the SGA (MOS ID #947152.1).
  -
  It can be determined with
code {
select bytes/1024/1024 gran_sz_mb from → development/databases/Oracle/installed/dynamic-performance-views/sga/info where name = 'Granule Size';
code }

  See also `→ development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/ge`

}
{ Queries

code {
select
   component,
   current_size/power(1024,2) size_mb,
   last_oper_type,
   last_oper_time,
   granule_size
from
   → development/databases/Oracle/installed/dynamic-performance-views/memory/dynamic_components[v$memory_dynamic_components]
order by
   component;
code }

}


sa:
 `→ development/databases/Oracle/installed/dynamic-performance-views/sga` can be queried for the actual memory consumption of the SGA.
  -
 `→ development/databases/Oracle/installed/dynamic-performance-views/sga/dynamic_componentes`,
 `→ development/databases/Oracle/installed/dynamic-performance-views/sga/dynamic/free_memory`

  → development/databases/Oracle/adminstration/memory-management

  → development/databases/Oracle/tools/oradebug/dumpvar[oradebug dumpvar sga …]

  In order to run → development/databases/Oracle/Application-Express[APEX], the SGA must be at least 300 MB.

  → development/databases/Oracle/adminstration/init-parameters[init parameters]:
    • `allow_group_access_to_sga`
    • `cluster_database_instances`
    • `hi_shared_memory_address`
    • `lock_sga`
    • → development/databases/Oracle/adminstration/init-parameters/log/archive/start[`log_archive_start`]
    • `memory_target`
    • → development/databases/Oracle/adminstration/init-parameters/sga/size[`sga_max_size`]
    • → development/databases/Oracle/adminstration/init-parameters/sga/size[`sga_min_size`]
    • `→ development/databases/Oracle/adminstration/init-parameters/sga/target`
    • `shared_memory_address`
    • `unified_audit_sga_queue_size`
    • `memory_target`

  → development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/mem[`x$ksmmem`] allows to read the value of every byte in the SGA.
  -
  The names of of SGA variables are listed in → development/databases/Oracle/architecture/instance/fixed-tables/k/s/m/fs/v[`x$ksmfsv`].

code {
oradebug → development/databases/Oracle/tools/oradebug/dump/global_area[dump global_area] 2
code }

links:
  Kyle Hailey has → http://oraperf.sourceforge.net[written a C program to directly access the SGA].
