$ Oracle: X$KSMFSV
@ x$ksmfsv

Names of variables, address of their value in the → development/databases/Oracle/architecture/instance/SGA, their datatype and size of the datatype.

? *2024-08-15*: It appears that *sys* needs to be connected to a CDB root, not a container, in order for `x$ksmfsv` to return any values.

code {
select   
-- addr addr_hex,
-- to_number(addr    , rpad('x', 16, 'x')) addr,
   ksmfsnam                                variable_name,
   to_number(ksmfsadr, rpad('x', 16, 'x')) address,
   ksmfstyp                                typ,
   ksmfssiz                                siz
from
   x$ksmfsv
order by
   variable_name
;
code }

{ SCN number (kcsgscn_)

  Such a variable is for example `kcsgscn_` which stores the *current SCN number*:
code {
select
   to_number(mem.ksmmmval, rpad('x', 16, 'x'))      value,
   vdb.current_scn 
from
   x$ksmfsv   var                                   join
   x$ksmmem   mem on var.ksmfsadr = mem.addr cross  join
   v$database vdb 
where
   var.ksmfsnam = 'kcsgscn_' -- SCN Number  
;
code }

}
{ Latches #ora-ksmfsv-latches

  Many of these variables seem to store the address of *latches* which are exposed in → development/databases/Oracle/architecture/instance/fixed-tables/k/s/l/l/d[`x$kslld`] or
  → development/databases/Oracle/architecture/instance/fixed-tables/k/s/l/l/tr[`x$kslltr`].
code {
select   
-- addr addr_hex,
-- to_number(addr    , rpad('x', 16, 'x')) addr,
   ksmfsnam                                variable_name,
   lld.kslldnam                            lld_name,
   lld.ksllddsp                            lld_description,   
   llt.kslltnam                            llt_name,
   to_number(ksmfsadr, rpad('x', 16, 'x')) address,
   ksmfstyp                                typ,
   ksmfssiz                                siz
from
   x$ksmfsv        var                                    left join
   x$kslld         lld on  var.ksmfsadr = lld.kslldadr    left join
   x$kslltr        llt on  var.ksmfsadr = llt.kslltaddr
where
   coalesce(lld.kslldadr, llt.kslltaddr) is not null
;
code }

}
{ Unix Epoch

 `ksudbrmseccnt_` stores the value of the → development/date-time/Unix-time[Unix epoch] (seconds since January 1st 1970):
code {
select
   date '1970-01-01' + (1/24/60/60) * to_number(mem.ksmmmval, rpad('x', 16, 'x')) as "current time UTC"
from
   x$ksmfsv   var                                   join
   x$ksmmem   mem on var.ksmfsadr = mem.addr
where
   var.ksmfsnam = 'ksudbrmseccnt_'
;
code }
 
}
{ Dumping variable values with oradebug

  → development/databases/Oracle/tools/oradebug[ORADEBUG] allows to print the value of a variable with the → development/databases/Oracle/tools/oradebug/dumpvar[`dumpvar`] command:
code {
oradebug dumpvar kcsgscn
code }

}
{ Column ksmfstyp

 `ksmfstyp` shows the type of the variable: Some of these types are basic memory units such as `uword`, `ub4`, `int` etc., others seem to refer to some kind of structs, such as
 `ksllt`, `ksbsa`, `kzxctok` etc. Also seen is `void *`, `size_t`, `oratext *` and many more.

  In the case of the type being `ksllt`, it can be joined to → development/databases/Oracle/architecture/instance/fixed-tables/k/s/l/l/d#kslld-join-ksmfsv[`x$kslld`] to list variables that
  are related to → development/databases/Oracle/architecture/instance/SGA/latch[latches].

}

sa:

  The → development/databases/Oracle/tools/oradebug/doc/event/action/varaddr[`varaddr`] action of → development/databases/Oracle/tools/oradebug.

  → development/databases/Oracle/architecture/instance/fixed-tables[fixed tables]
