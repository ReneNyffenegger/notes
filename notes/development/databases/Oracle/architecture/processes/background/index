$ Oracle background processes
@ background process

The background → development/databases/Oracle/architecture/processes[processes] are part of the → development/databases/Oracle/architecture/instance/SGA.

Each background process is designed to perform a specific taks. They work with each other. Many processes also operate on *data files*. 

There are mandatory and optional processes.

The mandatory background processes are created when a → development/databases/Oracle/architecture/instance is started.

Background processes have `→ development/databases/Oracle/installed/dynamic-performance-views/session[v$session].type = BACKGROUND`.

table { lll
          ☰ ☰ Mandatory

   `Qnnn` ☰ advanced queueing processes ☰ 
   → development/databases/Oracle/architecture/processes/background/ARCn[`ARCn`] ☰ The *archiver processes* archives *redo log files* (if `ARCHIVELOG` is enabeled) ☰ 
   → development/databases/Oracle/architecture/processes/background/CKPT[`CKPT`] ☰ The *checkpoint process* regularly initiates a checkpoint which uses → development/databases/Oracle/architecture/processes/background/DBWn[`DBWn`] to write *all* dirty blocks back to the datafile (thus synchronizing the datrabase). ☰ ✓
   → development/databases/Oracle/architecture/processes/background/CJQ0[`CJQ0`] ☰ Coordinator-of-job-queues process: dynamically spawns slave processes for job-queues ☰ 
   → development/databases/Oracle/architecture/processes/background/DBWn[`DBWn`] ☰ The *database writer processes* write *dirty blocks* from the *database buffer* to *datafiles*. Number of processes according to init param `DB_WRITER_PROCESSES`. ☰ ✓
   `Dnnn` ☰ The *dispatcher process*, used in a *shared server* environment ☰ 
   `DMnn` ☰ → development/databases/Oracle/tools/Data-Pump master process  ☰ 
   `DWnn` ☰ → development/databases/Oracle/tools/Data-Pump worker processes  ☰ 
   `Dnnn` ☰ dispatcher processes: multiplex server-processes on behalf of users ☰ 
   `DMON` ☰ The main → development/databases/Oracle/High-Availability/Data-Guard[Data Guard] Broker monitor process ☰ 
   → development/databases/Oracle/architecture/processes/background/FBDA[`FBDA`] ☰ The *Flashback Data Archive Process* ☰
   → development/databases/Oracle/architecture/processes/background/Jnnn[`Jnnn`] ☰ Job-queue slave processes ☰ 
`LCKnnnn` (?) ☰ The *inter-instance locking process (?) ☰
   → development/databases/Oracle/architecture/processes/background/LGWR[`LGWR`] ☰ The *log-writer process* writes the → development/databases/Oracle/architecture/instance/SGA/redo-log-buffer[redo log buffer] from the → development/databases/Oracle/architecture/instance/SGA to the *online redo log file*. ☰ ✓
   `LGnn` ☰ *Log Writer Worker helper processes* ☰
`LMD0` (?)☰ ☰
   `LNSn` ☰ log-write network-server: transmits redo logs in Data Guard environments ☰ 
`LMON` (?)☰ The *lock manager* ☰ 
   → development/databases/Oracle/architecture/processes/background/LREG[`LREG`] ☰ The *→ development/databases/Oracle/architecture/Listener registration process* ☰ ✓
   `LSP0` ☰ logical standby coordinator process: controls Data Guard log-application ☰ 
   `MRP`  ☰ The *media-recovery process* applies *archived redo log* to a → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby database]. ☰ 
   `MMAN` ☰ The *memory-manager process* is used for internal database tasks such as Automatic Shared Memory Management (ASMM) ☰ 
   → development/databases/Oracle/architecture/processes/background/MMON[`MMON`] ☰ The *Manageability-monitor process* for automatic problem-detection, self-tuning and statistics-gathering ☰ ✓
   → development/databases/Oracle/architecture/processes/background/MMNL[`MMNL`] ☰ The *Manageability-monitor light process*: gathers and stores → development/databases/Oracle/Automatic-Workload-Repository[Automatic Workload Repository (AWR)] data ☰ ✓
    ?     ☰ mmon slaves (`Mnnnn`—`M0000`, `M0001` etc.): background slaves of the `MMON` process ☰ 
   `NSVn` ☰ netslave processes: Data Guard Broker inter-database communication processes ☰ 
   `Pnnn` ☰ parallel query execution servers ☰ 
   → development/databases/Oracle/architecture/processes/background/PMAN[`PMAN`] ☰ ☰ ✓
   → development/databases/Oracle/architecture/processes/background/PMON[`PMON`] ☰ The *process-monitor process* frees up resources of failed *user processes*. Wakes up every 3 seconds. ☰ ✓
   `PSP0` ☰ process-spawner process: spawns Oracle background processes after initial instance startup[107] ☰ 
   `QMNC` ☰ queue-monitor coordinator process: dynamically spawns queue monitor slaves[108] ☰ 
   `QMNn` ☰ queue-monitor processes (AQ Time Manager?) ☰ 
   `RECO` ☰ The *recoverer process* finds pending distributed transactions and resolves them. ☰ ✓
   `RFS`  ☰ The *remote file-server process* runs on a → development/databases/Oracle/High-Availability/Data-Guard#dg-standby-db[standby database] and receives *archived redo logs* from the → development/databases/Oracle/High-Availability/Data-Guard#dg-primary-db[primary database]. ☰ 
   `RFS`  ☰ monitor for Data Guard management: Data Guard Broker Worker process[110] ☰ 
   → development/databases/Oracle/architecture/processes/background/RVWR[`RVWR`] ☰ The *recovery writer process* ☰
   `Snnn` ☰ The *shared server processes* is used in a *shred server* environment to serve client-requests ☰ 
`SNPnnn`  ☰ The *snapshot process* ? ☰
   `SMCO` ☰ The *space-management coordinator process* coordinates space management ☰ 
   → development/databases/Oracle/architecture/processes/background/SMON[`SMON`] ☰ The *system monitor process* performs *instance recovery*, cleans up after dirty shutdowns and coalesces adjacent free extents into larger free extents. Wakes up every 5 minutes. ☰ ✓
`TRWR`(?) ☰ Trace file writer (?) ☰
   `TTnn` ☰ The *Redo Transport Slave Process* ships redo from the current online and standby redo logs to the remote standby destinations configured for Asynchronous redo transport ☰
`WMON`(?) ☰ The *wakeup monitor process* (?) ☰

table }

{ Slave processes

  Slave processes perform work on behalf of other processes.
  
  The slave processes are:
   • `Dnnn`
   • `Snnn`

}
sa:
  → development/databases/Oracle/installed/dynamic-performance-views/bgprocess[`v$bgprocess`]
