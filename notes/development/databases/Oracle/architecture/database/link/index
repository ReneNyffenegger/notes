$ Oracle: Database Link
@ database link


A *database link* allows to access objects that are stored in other → development/databases/Oracle/architecture/database[databases].
-
If the other database is not an Oracle database system, they must be accessed with *Oracle Heterogeneous Services*.

{ Closing/opening database links

  gh|Oracle-Patterns|/SQL/alter/session/close-open-database-link.sql||

}
{ Executing a PL/SQL procedure in the remote database

  gh|Oracle-Patterns|/DatabaseObjects/Database-Links/function.sql||

}

sa:

  The `→ development/databases/Oracle/SQL/hints/list/driving_site` SQL → development/databases/Oracle/SQL/hints.

  Interestingly, for me, at least, a database link is not an → development/databases/Oracle/objects[Oracle object].

  → development/databases/Oracle/SQL/functions/date/sysdate#sysdate-at-excl[`sysdate@!`]

  The execution plan operator → development/databases/Oracle/SQL/statement/execution/plan/operations/remote[`remote`].

 *Data links* in the → development/databases/Oracle/architecture/multitenant.

 `→ development/databases/Oracle/installed/data-dictionary/db/links`, `→ development/databases/Oracle/installed/dynamic-performance-views/dblink`

  The → development/databases/Oracle/errors[error messages]
    • → development/databases/Oracle/errors/ORA-02021_DDL-operations-are-not-allowed-on-a-remote-database
    • → development/databases/Oracle/errors/ORA-22992_cannot-use-LOB-locators-selected-from-remote-tables

  The → development/databases/Oracle/adminstration/init-parameters[init parameter] `open_links`
