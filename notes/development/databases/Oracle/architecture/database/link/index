$ Oracle: Database Link
@ database link

A *database link* allows to access objects that are stored in other → development/databases/Oracle/architecture/database[databases].
-
If the other database is not an Oracle database system, they must be accessed with *Oracle Heterogeneous Services*.

{ Closing/opening database links

  gh|Oracle-Patterns|/SQL/alter/session/close-open-database-link.sql||

}
{ Executing a PL/SQL procedure in the remote database

  gh|Oracle-Patterns|/DatabaseObjects/Database-Links/function.sql||

}
{ Executing a DDL statement in the remote database

  → development/databases/Oracle/installed/packages/dbms/utility/api/exec_ddl_statement#exec_ddl_statement-db-link[`dbms_utility.exec_ddl_statement`] allows to execute a → development/databases/Oracle/SQL/DDL[DDL statement] on a remote database via
  a database link:
code {
begin
   → development/databases/Oracle/installed/packages/dbms/utility/api/exec_ddl_statement[dbms_utility.exec_ddl_statement]@remote_db('create table t1 (id number)');
end;
/
code }
}
{ Execution plans

  If a statement can be run completely on the remote database, `dbms_xplan.display()` adds the note *fully remote statement*.

code {
→ development/databases/Oracle/SQL/statement/verbs/explain for
select count(*) from xyz@db_far_away;
select * from → development/databases/Oracle/installed/packages/dbms/xplan/api/display();
----------------------------------------------------------------------------------------
| Id  | Operation              | Name         | Rows  | Cost (%CPU)| Time     | Inst   |
----------------------------------------------------------------------------------------
|   0 | → development/databases/Oracle/SQL/statement/execution/plan/operations/statement/select/remote[SELECT STATEMENT REMOTE]|              |     1 | 12034  (14)| 00:00:01 |        |
|   1 |  → development/databases/Oracle/SQL/statement/execution/plan/operations/sort/aggregate        |              |     1 |            |          |        |
|   2 |   → development/databases/Oracle/SQL/statement/execution/plan/operations/index_/full-scan/fast | XYZ_IX       |    33M| 12034  (14)| 00:00:01 | XINST~ |
----------------------------------------------------------------------------------------
Note
-----
   - fully remote statement
code }

}

sa:

  The `→ development/databases/Oracle/SQL/hints/list/driving_site` SQL → development/databases/Oracle/SQL/hints.

  Interestingly, for me, at least, a database link is not an → development/databases/Oracle/objects[Oracle object].

  → development/databases/Oracle/SQL/functions/date/sysdate#sysdate-at-excl[`sysdate@!`]

  The execution plan operator → development/databases/Oracle/SQL/statement/execution/plan/operations/remote[`remote`].

 *Data links* in the → development/databases/Oracle/architecture/multitenant.

 `→ development/databases/Oracle/installed/data-dictionary/db/links`, `→ development/databases/Oracle/installed/dynamic-performance-views/dblink`

  The → development/databases/Oracle/errors[error messages]
    • → development/databases/Oracle/errors/ORA-02018_database-link-of-same-name-has-an-open-connection
    • → development/databases/Oracle/errors/ORA-02021_DDL-operations-are-not-allowed-on-a-remote-database
    • → development/databases/Oracle/errors/ORA-02063_preceding_from
    • → development/databases/Oracle/errors/ORA-02080_database-link-is-in-use
    • → development/databases/Oracle/errors/ORA-22992_cannot-use-LOB-locators-selected-from-remote-tables
    • → development/databases/Oracle/errors/ORA-65503_cannot-send-or-receive-temporary-LOB-locators-over-a-database-link

  The → development/databases/Oracle/adminstration/init-parameters[init parameter] `open_links`

  → development/databases/Oracle/SQL/functions/sys_context/dblink_info[`sys_context('userenv', 'dblink_info')``]

 `x$k2gte`
