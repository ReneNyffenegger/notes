$ Oracle Optimizer: COST
@ cost

{ Measures

  Measures from which the cost is calculated include
  table { ll
    Selectivity ☰ A number between 0 and 1 which corresponsds to the (assumed) *ratio* of selected to probed records in filtering  *predicates* (0: no records, 1: all records are returned). The selectivity is not visible in an → development/databases/Oracle/SQL/statement/execution/plan[execution plan].
    Cardinality ☰ The number of rows returned by a → development/databases/Oracle/SQL/statement/execution/plan/operations[plan operation] («row source»). The cardinality is stored in the column `cardinality` in plan tables.
    CPU speed ☰
    I/O throughput ☰ 
    Available Memory ☰
  table }

}
{ TODO

  { cost = f(cpu_cost, io_cost)

code {
select
   count(*) cnt,
   ratio
from (

   select
      pln.operation,
      pln.options,
      pln.object_name,
      pln.object_owner,
      pln.cost,
      pln.cpu_cost,
      pln.io_cost,
      round( (pln.cost -pln.io_cost) / nullif(pln.cpu_cost, 0), 15) ratio,
      pln.time,
      pln.cardinality,
      pln.partition_start,
      pln.partition_stop,
      pln.*
   from
      v$sql_plan_statistics_all pln
   where
      pln.operation in ('TABLE ACCESS', 'INDEX ACCESS')
   --    pln.cost     is not null or
   --    pln.cpu_cost is not null or
   --    pln.io_cost  is not null
   order by
      pln.cost desc nulls last

)
group by
   ratio
order by
   count(*) desc
;
code }

  }
  { Ratio cost : time

code {
select
   pln.cost,
   pln.time,
   to_char(pln.cost / pln.time, '999990.0') ratio,
   pln.operation,
   pln.options,
   pln.object_owner,
   pln.object_name
from
   v$sql_plan pln
order by
   pln.time desc nulls last;
code }

  }

}


sa:
  The → development/databases/Oracle/SQL/statement/verbs/explain/plan_table[`plan_table`] columnn
  `→ development/databases/Oracle/SQL/statement/verbs/explain/plan_table/columns/cardinality` and
  `→ development/databases/Oracle/SQL/statement/verbs/explain/plan_table/columns/cost`.
