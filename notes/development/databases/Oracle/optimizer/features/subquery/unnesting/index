$ Oracle optimizer feature: subquery unnesting

The → development/databases/Oracle/optimizer uses *subquery unnesting* to transform an → development/databases/Oracle/SQL/statement that contains a
→ development/databases/Oracle/SQL/select/subquery into an SQL statement with an additional → development/databases/Oracle/SQL/join to eliminate the subquery. 

{ Possibility of subquery unnesting

  Subquery unnesting is possible if
    • the resulting join statement is guaranteed to return the same rows as the original statement
    • the subquery does not have → development/databases/Oracle/SQL/select/aggregate[aggregate functions]

}
{ Relation to view merging

  *subquery unnesting* deals with → development/databases/Oracle/SQL/select/subquery[subqueries] that appear in
    • the list of selected attributes
    • where clause

  In contrast, view merging deals with *inline views* (that appear in a `from` clause) and *factored subqueries*.

  → development/databases/Oracle/SQL/hints[Hints] related to *subquery unnestings* are `/*+ unnest */` and `/*+ no_unnest */`, hints that apply to
  view merging are `/*+ merge */` and `/*+ no_merge */`.

}
sa:

  → development/databases/Oracle/optimizer#ora-optimizer-qry-tran[Query transformation]

  The → development/databases/Oracle/SQL/hints[`unnest` and `no_unnest` hints]
