
The *Automatic Workload Repository* (AWR) is a repository of historical performance data that includes cumulative statistics for
  • the system,
  • sessions,
  • individual → development/databases/Oracle/SQL/statement[SQL statements],
  • segments and
  • services.

These statistics are collected and evaluated in order to detect problems and self-tune the database.

{ Collected performance statistics

  The collected statistics include:
    • Access and usage statistics of → development/databases/Oracle/architecture/database/logical-structures/segment[segments]
    • Activity usages («time model statistics»), as found in → development/databases/Oracle/installed/dynamic-performance-views/sys_time_model[`v$sys_time_model`] and → development/databases/Oracle/installed/dynamic-performance-views/sess/time_model[`v$sess_time_model`].
    • System and → development/databases/Oracle/architecture/session related statistics as found in → development/databases/Oracle/installed/dynamic-performance-views/sysstat[`v$sysstat`] and → development/databases/Oracle/installed/dynamic-performance-views/sesstat[`v$sesstat`]
    • The → development/databases/Oracle/SQL/statement[SQL statements] that use lots of system resource or take long to finish
    • → development/databases/Oracle/Active-Session-History

}

{ AWR Snapshot #ora-awr-snapshot

  The → development/databases/Oracle/architecture/instance stores performance data in the → development/databases/Oracle/architecture/instance/SGA.

  The → development/databases/Oracle/architecture/processes/background/MMON[`MMON`] background process regularly (by default: hourly) processes the collected data and creates *AWR Snapshots*.
  Thus, an AWR snapshot contains the performance metrics for a time period. A snapshot corresponds to the minimum time granularity for reporting purposes.

  These snapshots are then written into the → development/databases/Oracle/architecture/database/logical-structures/tablespace/SYSAUX[`SYSAUX` tablespace].

  `→ development/databases/Oracle/installed/packages/dbms/workload/repository[dbms_workload_repository].modify_snapshot_settings` allows to specify settings such as
    • snapshot interval
    • retention period
    • number of SQL statements for each top criteria

  See also the init parameter `→ development/databases/Oracle/adminstration/init-parameters/awr/pdb/autoflush_enabled`.

  { Find snasphots #ora-awr-find-snasphots

   `→ development/databases/Oracle/installed/data-dictionary/hist/snapshot` allows to find snapshots (taken in a given period)
    gh|oracle_scriptlets|/ash-awr/awr/find_snap_ids.sql||

  }

}
{ AWR baseline

  An AWR baseline is a set of performance metric values. Usually, these are determined when a system performs without problems. They can then be used to compare the metrics in times when a System does not seem to perform very well.

}
{ Automatic Database Monitor (ADDM)

  The *Automatic Database Monitor* uses the captured statistics to automatically and proactively find possible performance problems.

  ADDM can be run manually, if needed.

}
{ Query difference between two periods

code {
with
stat_1 as       (-- {
   select /*+ materialize */
            stat.sql_id sql_id,
       sum (stat.executions_delta    )        executions,
       sum (stat.elapsed_time_delta  ) / 1e6 elapsed_time,
       sum (stat.cpu_time_delta      )        cpu_time,
       sum (stat.iowait_delta        )        iowait_time,
       sum (stat.disk_reads_delta    )        disk_reads,
       sum (stat.buffer_gets_delta   )        buffer_gets,
       sum (stat.direct_writes_delta )        writes,
       sum (stat.parse_calls_delta   )        parses,
       sum (stat.sorts_delta         )        sorts
   from
       dba_hist_sqlstat stat  join
       dba_hist_snapshot snap using (snap_id)
   where
       trunc(snap.end_interval_time) = trunc(sysdate-2)
   group by
       stat.sql_id
   having sum(stat.executions_delta) > 0
),  -- }
stat_2 as       (-- {
   select /*+ materialize */
            stat.sql_id sql_id,
       sum (stat.executions_delta    )       executions,
       sum (stat.elapsed_time_delta  ) / 1e6 elapsed_time ,
       sum (stat.cpu_time_delta      )       cpu_time,
       sum (stat.iowait_delta        )       iowait_time,
       sum (stat.disk_reads_delta    )       disk_reads,
       sum (stat.buffer_gets_delta   )       buffer_gets,
       sum (stat.direct_writes_delta )       writes,
       sum (stat.parse_calls_delta   )       parses,
       sum (stat.sorts_delta         )       sorts
   from
       dba_hist_sqlstat stat  join
       dba_hist_snapshot snap using (snap_id)
   where
       trunc(snap.end_interval_time) = trunc(sysdate-1)
   group by
       stat.sql_id
   having sum(stat.executions_delta) > 0
)  -- }
select           -- {
   sql_id,
   replace (cast (dbms_lob.substr (text.sql_text, 250) as varchar (250)), chr (10), '')   sql_text,
   --
   stat_2.elapsed_time - stat_1.elapsed_time elapsed_time_d, stat_1.elapsed_time elapsed_time_1, stat_2.elapsed_time elapsed_time_2,
   stat_2.executions   - stat_1.executions   executions_d  , stat_1.executions     executions_1, stat_2.executions     executions_2
from
  stat_1                    full outer join
  stat_2                using (sql_id) join
  dba_hist_sqltext text using (sql_id)
order by
  nvl(stat_2.elapsed_time, 0) - nvl(stat_1.elapsed_time, 0) desc -- }
;
code }

}
sa:

  The → development/databases/Oracle/architecture/processes/background/MMON[`MMON`] and
  The → development/databases/Oracle/architecture/processes/background/MMNL[`MMNL`] → development/databases/Oracle/architecture/processes/background[background processes].

  Don't confuse the AWR with the → development/databases/Oracle/architecture/database/system-files/Automatic-Diagnostic-Repository[ADR]

  AWR data is essential for → development/databases/Oracle/adminstration/performance-tuning[performance tuning] of a database.

  → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/rdbms/admin/addmrpt_sql[`$ORACLE_HOME/rdmbs/admin/addmrpt.sql`] is an → development/databases/Oracle/SQL-Plus script to run ADDM analysis on a pair
  AWR snapshots and display the result of the analysis.

  `→ development/databases/Oracle/installed/packages/dbms/xplan[dbms_xplan].display_awr`

  Data stored in the Automatic Workload Repository can be queried from the → development/databases/Oracle/installed/data-dictionary/hist[`DBA_HIST_*`] views.

  The `→ development/databases/Oracle/adminstration/init-parameters/control/management_pack_access` init parameter.

  → development/databases/Oracle/Automatic-Workload-Repository/2014-11-03[Introduction to AWR of 2014-11-03]

  The `→ development/databases/Oracle/installed/packages/dbms/workload/repository` package allows to perform operations on the AWR such as
  taking snapshots or creating baselines.

 `→ development/databases/Oracle/installed/dynamic-performance-views/metric`
