$ SQL*Plus: Variables

There are three types of variables in → development/databases/Oracle/SQL-Plus:
table { lll
  ~Variable type~  ☰ ~Declaration~ ☰ ~Displaying value~
  System variables ☰ `→ development/databases/Oracle/SQL-Plus/set …` ☰ `→ development/databases/Oracle/SQL-Plus/show`
  Substitution variables ☰ `→ development/databases/Oracle/SQL-Plus/define …` ☰ `prompt` (with `&`)
  Bind variables ☰ `→ development/databases/Oracle/SQL-Plus/variable …` ☰ `→ development/databases/Oracle/SQL-Plus/print`
table }

{ Bind variables #sql-plus-bind-var

  A *bind variable* is declared with SQL*Plus's `→ development/databases/Oracle/SQL-Plus/variable` statement.

  The value of a bind variable can be changed within a → development/databases/Oracle/PL-SQL/block or a → development/databases/Oracle/PL-SQL/function-procedure[PL/SQL function or procedure]:
code {
VARIABLE num NUMBER

begin
  :num := 42;
end;
/

→ development/databases/Oracle/SQL-Plus/print num

select :num from dual;
code }

}
{ Substitution variables #sql-plus-substistution-var

code {
define num = 42
prompt &num
select object_name from user_objects where rownum <= &num;
code }

  The value for a substitution variable can be assigned from user input with `→ development/databases/Oracle/SQL-Plus/accept`.
  -
  The value of a column of a → development/databases/Oracle/SQL/select[`select` statement] can be assigned with → development/databases/Oracle/SQL-Plus/new_value[`COLUMN colname NEW_VALUE varname`].

  SQL*Plus limits the number of substitution variables to 2048.
  -
  The maximum length of a character substitution variable is 240 bytes.

  Substitution variables (whose value contain ampersands) are not recursively expanded.

  Using variables can be turned of with → development/databases/Oracle/SQL-Plus/set/define[`set define off`].
  -
  The special meaning of the ampersand can be suppressed using `→ development/databases/Oracle/SQL-Plus/set/escape`.

  Commands that relate to substitution variables include
    • `→ development/databases/Oracle/SQL-Plus/accept`
    • `→ development/databases/Oracle/SQL-Plus/column`
    • `→ development/databases/Oracle/SQL-Plus/define`, `undefine`
    • `→ development/databases/Oracle/SQL-Plus/edit`
    • `→ development/databases/Oracle/SQL-Plus/exit`
    • `→ development/databases/Oracle/SQL-Plus/host`
    • `whenever`
    • `ttitle`, `btitle`, `repheader` and `repfooter`.

   
   

}
{ System variables #sql-plus-system-var

code {
set → development/databases/Oracle/SQL-Plus/set/serveroutput on;
…
show serveroutput
code }

  The value of a system variable can be shown with the `→ development/databases/Oracle/SQL-Plus/show` command:
code {
SQL> → development/databases/Oracle/SQL-Plus/show serveroutput
code }

}
{ Assigning substitution variables to bind variables

  the following snippet demonstrates how
  the value of a substitution variable can be assigned to a bind variable.
 (→ development/databases/Oracle/SQL-Plus/execute[exec] is just a wrapper for a one statement → development/databases/Oracle/PL-SQL/block which allows for the assignment):
code {
define   num = 123
variable bnd number

→ development/databases/Oracle/SQL-Plus/execute[exec] :bnd := &num;
code }

}

sa:
  → development/databases/Oracle/SQL-Plus
