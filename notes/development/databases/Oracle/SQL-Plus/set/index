$ SQL*Plus: SET
@ set

The → development/databases/Oracle/SQL-Plus command `set xyz` allows to assign a value to the setting `xyz`. Currently assigned values for `xyz` are displayed with 
`→ development/databases/Oracle/SQL-Plus/show[show] xyz`.

{ Some options

  Some interesting options, IMHO, that can be set, include:
table { ll
  → development/databases/Oracle/SQL-Plus/set/arraysize[`arraysize`] ☰
  → development/databases/Oracle/SQL-Plus/set/autotrace[`autotrace`] ☰
  → development/databases/Oracle/SQL-Plus/set/exitcommit[`exitcommit`] ☰
  → development/databases/Oracle/SQL-Plus/set/linesize[`linesize`] ☰
  → development/databases/Oracle/SQL-Plus/set/lobprefetch[`lobprefetch`] ☰
  → development/databases/Oracle/SQL-Plus/set/long[`long`] ☰ Sets the number of bytes for → development/databases/Oracle/SQL/data-types/lob[`blob`, `clob`, `nclob`], `bfile`, → development/databases/Oracle/SQL/data-types/long[`long`] and `xml` values
  → development/databases/Oracle/SQL-Plus/set/numformat-numwidth[`numformat` and `numwidth`] ☰ allow control the format of numbers.
  → development/databases/Oracle/SQL-Plus/set/pagesize[`pagesize`] ☰
  → development/databases/Oracle/SQL-Plus/set/rowprefetch[`rowprefetch`] ☰
  → development/databases/Oracle/SQL-Plus/set/serveroutput[`serveroutput`] ☰
  → development/databases/Oracle/SQL-Plus/set/timing[`timing`] ☰
table }

}
{ Saving the current values

  The currently active values (either the default values or the ones overwritten with a `set` comman) can be saved into a file with
code {
SQL> → development/databases/Oracle/SQL-Plus/store set set-values.sql
code }

  Later, this file can be sourced in order to have the same settings again:
code {
SQL> → development/databases/Oracle/SQL-Plus/start[@] set-values.sql
code }

}

sa:

  → development/databases/Oracle/SQL-Plus
