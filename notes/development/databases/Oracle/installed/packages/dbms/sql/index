$ dbms_sql

`dbms_sql` allows to execute dynamic → development/databases/Oracle/SQL/statement[SQL statements] in → development/databases/Oracle/PL-SQL. Compare with
→ development/databases/Oracle/PL-SQL/execute-immediate[`execute immediate`].

{ Methods

  table { ll

    `open_cursor` ☰ create a cursor for SQL statement
    `parse` ☰
    → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`describe_columns`] ☰ Used to get get information about the returned columns in a → development/databases/Oracle/SQL/select[`select` statement].
    `bind_variable` ☰
    `bind_array` ☰
    `define_columns` ☰ Needed in queries (`select` statements) for each selected column. (Use → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`describe_columns`] to determine column pecularities)
    `execute` ☰ Execute statement
    `fetch_rows` ☰ Repeatedly called in queries in order to get records from statement.
    `column_value` ☰ Used after calling `fetch_rows` to get the values of the columns in of the records that were fetched.
    `variable_value` ☰ Gets the value of an `out` parameters in a PL/SQL block. (Is `variable_value` also used in `select` statements?)
    `close_cursor` ☰ Close cursor that was opened with `open_cursor`
    `execute_and_fetch` ☰
    `last_row_count` ☰
    `last_row_id` ☰
    `is_open` ☰
    `last_error_position` ☰
    `last_sql_function_code` ☰
    `return_result` ☰
    `get_next_result` ☰
    `to_cursor_number` ☰
    `to_refcursor` ☰

  table }

}

sa:

  → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`dmbs_sql.describe_columns`]

  → development/databases/Oracle/SQL/data-types[Data types in Oracle] and the list of
  → development/databases/Oracle/SQL/data-types#ora-data-type-codes[`*_type` codes].

  → development/databases/Oracle/installed/packages/dbms
