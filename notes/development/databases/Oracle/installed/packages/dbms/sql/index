$ Oracle: DBMS_SQL
@ dbms_sql

`dbms_sql` allows to execute dynamic → development/databases/Oracle/SQL/statement[SQL statements] in → development/databases/Oracle/PL-SQL. Compare with
→ development/databases/Oracle/PL-SQL/execute-immediate[`execute immediate`].

{ Methods

  table { ll

    → development/databases/Oracle/installed/packages/dbms/sql/open_cursor[`open_cursor`] ☰ create a cursor for an → development/databases/Oracle/SQL/statement[SQL statement]. Must be closed with `close_cursor` when no longer used.
    → development/databases/Oracle/installed/packages/dbms/sql/parse[`parse`] ☰ parses the text of an SQL text. → development/databases/Oracle/SQL/DDL[DDL] statements are also executed.
    → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`describe_columns`] ☰ Used to get get information about the returned columns in a → development/databases/Oracle/SQL/select[`select` statement].
    `bind_variable` ☰
    `bind_array` ☰
    `define_columns` ☰ Needed in queries (`select` statements) for each selected column. (Use → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`describe_columns`] to determine column pecularities)
    `execute` ☰ Execute statement
    `fetch_rows` ☰ Repeatedly called in queries in order to get records from statement.
    `column_value` ☰ Used after calling `fetch_rows` to get the values of the columns in of the records that were fetched.
    `variable_value` ☰ Gets the value of an `out` parameters in a PL/SQL block. (Is `variable_value` also used in `select` statements?)
    `close_cursor` ☰ Close cursor that was opened with `open_cursor`
    `execute_and_fetch` ☰
    `last_row_count` ☰
    `last_row_id` ☰
    `is_open` ☰
    `last_error_position` ☰
    → development/databases/Oracle/installed/packages/dbms/sql/last_sql_function_code[`last_sql_function_code`] ☰ returns an `integer` that identifies the type («function» or «command code») of the SQL statement (`select`, `drop package` etc), see → https://docs.oracle.com/en/database/oracle/oracle-database/21/lnoci/handle-and-descriptor-attributes.html#GUID-A251CF91-EB9F-4DBC-8BB8-FB5EA92C20DE__CACEIFFF[this table].
    `return_result` ☰
    `get_next_result` ☰
    `to_cursor_number` ☰
    `to_refcursor` ☰

  table }

}
{ TODO

  { parse_gt_32k.plsql

    gh|Oracle-Patterns|/Installed/dbms/sql/parse_gt_32k.plsql||

  }
  { plsql_block_with_out_parameters.plsql

    gh|Oracle-Patterns|/Installed/dbms/sql/plsql_block_with_out_parameters.plsql||

  }
  { return_result.sql

    gh|Oracle-Patterns|/Installed/dbms/sql/return_result.sql||

  }
  { select_from_table.sql

    gh|Oracle-Patterns|/Installed/dbms/sql/select_from_table.sql||

  }

}

sa:

  → development/databases/Oracle/installed/packages/dbms/sql/describe_columns[`dmbs_sql.describe_columns`]

  → development/databases/Oracle/SQL/data-types[Data types in Oracle] and the list of
  → development/databases/Oracle/SQL/data-types#ora-data-type-codes[`*_type` codes].

  → development/databases/Oracle/installed/packages/dbms

  → development/databases/Oracle/SQL-Plus/sqlpath/table-dumper[`table-dumper.sql`] is an SQL script that uses `dbms_sql` to create nicely aligned, tabular ASCII results from a select statement.
