$ Oracle: DBMS_LOB.COMPARE

{ Prevent comparison error (ORA-00932, ORA-22848) #dbms_lob-compare-prevent-err

code {
create table tq84_clob (
   id   integer,
   clb  clob
);
 
begin
   delete tq84_clob;
   insert into tq84_clob values (0,  null);
   insert into tq84_clob values (1,  empty_clob());
   insert into tq84_clob values (2, 'hello world');
   commit;
end;
/
code }

  The following statement runs without problems and returns `0`:
code {
select id from tq84_clob where clb is null;
code }

  The following to statements throw
    → development/databases/Oracle/errors/ORA-00932_inconsistent-datatypes#ora-00932-exp-got-clob (without → development/databases/Oracle/Releases-and-versions/23c#ora-23c-err[improved error messages]) or
    → development/databases/Oracle/errors/ORA-22848_cannot-use_type-as-comparison-key[ORA-22848: cannot use CLOB type as comparison key] with improved error messages:
code {
select id from tq84_clob where clb = '';
select id from tq84_clob where clb =  empty_clob();
select id from tq84_clob where clb = 'hello world';
code }

  In order to compare a clob with string, `dbms_lob.compare` can be used:
code {
select id from tq84_clob where dbms_lob.compare(clb, 'hello world') = 0;
select id from tq84_clob where dbms_lob.compare(clb,  empty_clob()) = 0;
code }


  Cleaning up:
code {
drop table tq84_clob;
code }

}
{ TODO

code {
create table tq84_clob_compare (
   i  number primary key,
   c  clob
);

begin
   insert into tq84_clob_compare values ( 1, empty_clob());
   insert into tq84_clob_compare values ( 2, empty_clob());
   insert into tq84_clob_compare values ( 3, empty_clob());
   insert into tq84_clob_compare values ( 4, empty_clob());
   insert into tq84_clob_compare values (20, empty_clob());
   
   insert into tq84_clob_compare values (99, empty_clob());
   insert into tq84_clob_compare values (99, empty_clob());

   commit;
end;
/

declare
  c_ clob;
begin

  for j in 1 .. 4 loop

      select c into c_ from tq84_clob_compare where i = j;    

         if j = 1 then dbms_lob.append(c_, 'one'  ); 
      elsif j = 2 then dbms_lob.append(c_, 'two'  );
      elsif j = 3 then dbms_lob.append(c_, 'three');
      elsif j = 4 then dbms_lob.append(c_, 'four' ); end if;

  end loop;

  select c into c_ from tq84_clob_compare where i = 20;

  dbms_lob.append(c_, 'two');
end;
/

commit;

-- first one smaller than second one returns -1.
-- first one greater than second one returns  1.
-- first one equal to second one returns 0.
select t.i, u.i, dbms_lob.compare(t.c, u.c) 
  from tq84_clob_compare t,
       tq84_clob_compare u;


drop table tq84_clob_compare;
code }

}

sa:
 `→ development/databases/Oracle/installed/packages/dbms/lob`
