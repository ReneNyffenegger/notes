$ Oracle: DBMS_LOB
@ dbms_lob

`dbms_lob` accesses → development/databases/Oracle/SQL/data-types/lob[LOB] data via
→ development/databases/Oracle/SQL/data-types/lob#ora-lob-locator[LOB locators].

{ Functions and procedures

  All functions and procedures in the `dbms_lob` package have a parameter that takes a → development/databases/Oracle/SQL/data-types/lob#ora-lob-locator[LOB locator].
  -
  LOB locaters that are created by either → development/databases/Oracle/SQL/functions/lob#ora-func-empty_xlob[`empty_blob()` or `empty_clob()`] cannot be used for these
  parameters.

  table { ll
   `append` ☰ Append one lob to another. Compare with `writeappend`.
   `clob2file` ☰ Write a clob to a `bfile`.
   `close` ☰ Closes an internal or external LOB.
   `compare` ☰ Compares entire or partial LOBs.
   `converttoblob` ☰ Convert a `clob` or an `nclob` to `blob`, using the given → development/Unicode/character-set.
   `converttoclob` ☰ Opposite of `converttoblob`. Compare with `to_clob()`
   `copy` ☰ Copies portions from one LOB to a range of another LOB.
   `copy_dbfs_link` ☰
   `copy_from_dbfs_link` ☰
   → development/databases/Oracle/installed/packages/dbms/lob/api/temporary[`createtemporary`] ☰
   `dbfs_link_generate_path` ☰
   `erase` ☰ Erases an entire or a part of an *internal* LOB
   `fileclose` ☰ Closes a `bfile`.
   `filecloseall` ☰
   `fileexists` ☰ Checks if the given `bfile` locator points to an existing file on the server's file system.
   `filegetname` ☰
   `fileisopen` ☰
   `fileopen` ☰ Opens a `BFILE` for *read-only* access (The parameter `open_mode` *must* be equal to the default value `file_readonly`, otherwise an error is thrwon)
   `fragment_delete` ☰
   `fragment_insert` ☰
   `fragment_move` ☰
   `fragment_replace` ☰
   → development/databases/Oracle/installed/packages/dbms/lob/api/temporary[`freetemporary`] ☰
   `getchunksize` ☰
   `getcontenttype` ☰
   `getlength` ☰ Returns the length of a `blob` in bytes or of a `clob` in characters.
   `getoptions` ☰ Detmine a LOB's compression, deduplication and encryption settings.
   `get_dbfs_link` ☰
   `get_dbfs_link_state` ☰
   `get_deduplicate_regions` ☰
   `get_storage_limit` ☰
   `instr` ☰
   `isopen` ☰
   `isremote` ☰
   `issecurefile` ☰
   `istemporary` ☰
   `loadblobfromfile` ☰
   `loadclobfromfile` ☰
   `loadfromfile` ☰
   `move_to_dbfs_link` ☰
   `open` ☰
   `read` ☰
   `setcontenttype` ☰
   `setoptions` ☰
   `set_dbfs_link` ☰
   → development/databases/Oracle/installed/packages/dbms/lob/substr[`substr`] ☰ For a → development/databases/Oracle/SQL/data-types/lob[`clob`], `substr` returns a substring as → development/databases/Oracle/SQL/data-types/varchar2[`varchar2`], with a given amount of characters, starting at a given position (offset). For a `blob`, it returns the bytes indicated bytes as a → development/databases/Oracle/SQL/data-types/raw[`raw`].
   `trim` ☰ Decreases the length of the lob to a given length in bytes or characters. Do not confuse with the functionality of the SQL function → development/databases/Oracle/SQL/functions/text/ltrim-rtrim-trim[`trim`] which removes white spaces from a `→ development/databases/Oracle/SQL/data-types/varchar2`.
   `write` ☰
   `writeappend` ☰ Compare with `append` and `write`
  table }

}


{ createTemporary #dbms_lob-createTemporary

  Compare with → development/databases/Oracle/SQL/functions/lob#ora-func-empty_xlob[`empty_blob()` and `empty_clob()`]

  See also → development/databases/Oracle/installed/packages/dbms/lob/api/temporary[`createtemporary` and `freetemporary`].

}
{ clob_from_varchars

  gh|Oracle-Patterns|/Installed/dbms/lob/clob_from_varchars.sql||

}
{ compare

  gh|Oracle-Patterns|/Installed/dbms/lob/compare.sql||

}
{ insert_into_with_blob

  gh|Oracle-Patterns|/Installed/dbms/lob/insert_into_with_blob.sql||

}
{ max_length

  gh|Oracle-Patterns|/Installed/dbms/lob/max_length.sql||

}
{ really_long_clob

  gh|Oracle-Patterns|/Installed/dbms/lob/really_long_clob.sql||

}
{ clob_from_long_string

  gh|Oracle-Patterns|/Installed/dbms/lob/clob_from_long_string.sql||

}


sa:

  → development/databases/Oracle/installed/packages/dbms, → development/databases/Oracle/installed/packages/dbms/lobutil[`dbms_lobutil`].
