$ DBMS_CRYPTO

`dbms_crypto` replaces `dbms_obfuscation_toolkit`.

{ PLS-00201: identifier 'DBMS_CRYPTO' must be declared

  In order for a → development/databases/Oracle/users-roles/users[user] to use `dbms_crypto`, the user must be → development/databases/Oracle/SQL/DCL/grant[granted] exection on the package,
  otherwise, the error *PLS-00201: identifier 'DBMS_CRYPTO' must be declared* is thrown.

code {
grant execute on dbms_crypto to rene;
code }

}

{ Procedures and functions

code {
select distinct
   procedure_name
from
   → development/databases/Oracle/installed/data-dictionary/procedures[all_procedures]
where
   object_name = 'DBMS_CRYPTO'
order by
   procedure_name
code }

  table { ll
    `DECRYPT` ☰
    `ENCRYPT` ☰
    → development/databases/Oracle/installed/packages/dbms/crypto/api/hash[`HASH`] ☰ Creates a hash value from a → development/databases/Oracle/SQL/data-types/raw[`raw`], → development/databases/Oracle/SQL/data-types/lob[`blob` or `clob`].
    `MAC` ☰
    `PKDECRYPT` ☰
    `PKENCRYPT` ☰
    `RANDOMBYTES` ☰ Retrns a cryptographically secure pseudo-random sequence of bytes, based on *RSA X9.31 PRNG* algorithm. Compare with → development/databases/Oracle/installed/packages/dbms/random[`dbms_random`] which is not cryptographically secure.
    `RANDOMINTEGER` ☰ Returns a random integral number in the range of the `binary_integer` → development/databases/Oracle/SQL/data-types[data type].
    `RANDOMNUMBER` ☰ Returns a random integral number as → development/databases/Oracle/SQL/data-types/number[`number` data type].
    `SIGN` ☰
    `VERIFY` ☰
  table }

}

sa:
  → development/databases/Oracle/installed/packages/dbms
