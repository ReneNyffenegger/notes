$ dbms_utility

`dbms_utility` contains various utility programlets.

{ compile_schema

  gh|Oracle-Patterns|/Installed/dbms/utility/compile_schema.plsql||

}
{ db_version #dbms_utility-db_version

  Compare with procedures in `→ development/databases/Oracle/installed/packages/dbms/db_version[dbms_db_version].version`, dbms_db_release

  gh|Oracle-Patterns|/Installed/dbms/utility/db_version.plsql||

  When executed, the script might print something like
code {
Version:       18.0.0.0.0
Compatibility: 12.0.0
code }

  See also attribute `instance_role` in → development/databases/Oracle/installed/dynamic-performance-views/instance,
  → development/databases/determine-versions

}
{ exec_ddl_statement

  gh|Oracle-Patterns|/Installed/dbms/utility/exec_ddl_statement.plsql||

}
{ expand_sql_text #dbms_utility-expand_sql_text

  gh|Oracle-Patterns|/Installed/dbms/utility/expand_sql_text.sql||

 `expand_sql_text` is helpful in → development/databases/Oracle/SQL[SQL analysis]: it translates a query that references views into a query with the identical meaning that references only tables.

}
{ name_resolve

  gh|Oracle-Patterns|/Installed/dbms/utility/name_resolve.sql||

  See also → development/databases/Oracle/SQL-Plus/sqlpath/resolve-name

}
{ format_call_stack #dbms_utility-format_call_stack

  gh|Oracle-Patterns|/Installed/dbms/utility/format_call_stack.plsql||

  See also → development/databases/Oracle/installed/packages/utl/call_stack[`utl_call_stack`]

}
{ format_error_stack

  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_stack.plsql||

}
{ format_error_backtrace

  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_backtrace.plsql||

}
{ time

  gh|Oracle-Patterns|/Installed/dbms/utility/time.plsql||

}

sa:
  → development/databases/Oracle/installed/packages/dbms

  → development/databases/Oracle/installed/packages/utl/call_stack
