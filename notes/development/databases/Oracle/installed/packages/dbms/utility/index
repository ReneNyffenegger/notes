$ Oracle: DBMS_UTILITY
@ dbms_utility

`dbms_utility` contains various utility functions.

table { ll
  `active_instances` ☰ 
  `analyze_database` ☰ 
  `analyze_part_object` ☰ *Deprecated* in favor of using → development/databases/Oracle/installed/packages/dbms/stats[`dbms_stats`]
  `analyze_schema` ☰ 
  `canonicalize` ☰ 
  `comma_to_table` ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/compile_schema[`compile_schema`] ☰ 
  `create_alter_type_error_table` ☰ 
  `current_instance` ☰ 
  `data_block_address_block` ☰ 
  `data_block_address_file` ☰ 
  `db_version` ☰ 
  `exec_ddl_statement` ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/expand_sql_text[`expand_sql_text`] ☰ Transforms an SqL statement into another semantically equivalen SQL statement that does not contain any references to synonyms or views.
  → development/databases/Oracle/installed/packages/dbms/utility/format[`format_call_stack`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/format[`format_error_backtrace`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/format[`format_error_stack`] ☰ 
  `get_cpu_time` ☰  
  `get_dependency` ☰ *Deprecated* in favor uf using → development/databases/Oracle/installed/data-dictionary/dependencies[`dba_dependencies`] etc. directly.
  `get_endianness` ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/get/hash_value[`get_hash_value`] ☰ computes a *hash value* for a given string.
  `get_parameter_value` ☰ Queries → development/databases/Oracle/installed/dynamic-performance-views/parameter[`v$parameter`]. *Deprecated*
  → development/databases/Oracle/installed/packages/dbms/utility/api/get_sql_hash[`get_sql_hash`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/get_time[`get_time`] ☰ Returns a value of a counter that is increased 100 times per seconds. The value 0 seems to be somewhat related to the startup time of the → development/databases/Oracle/architecture/instance.
  `get_tz_transitions` ☰ 
  `invalidate` ☰ 
  `is_bit_set` ☰ Checks if a given bit is set in a value whose → development/databases/Oracle/SQL/data-types[data type] is → development/databases/Oracle/SQL/data-types/raw[raw]. Compare with the → development/databases/Oracle/SQL/functions[SQL function] `bitand`.
  `is_cluster_database` ☰ 
  `make_data_block_address` ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/name_resolve[`name_resolve`] ☰ 
  `name_tokenize` ☰ 
  `old_current_schema` ☰ 
  `old_current_user` ☰ 
  `port_string` ☰ Returns a string that uniquely identifies the operating system and the two task protocol version, for example `IBMPC/WIN_NT64-9.1.0`.
  → development/databases/Oracle/installed/packages/dbms/utility/api/sqlid_to_sqlhash[`sqlid_to_sqlhash`] ☰ Converts an → development/databases/Oracle/SQL/statement#ora-sql-stmt-ident-sqlid[SQLID] to the corresponding hash value
  `table_to_comma` ☰ 
  `validate` ☰ 
  `wait_on_pending_dml` ☰ 
table }

{ compile_schema

  gh|Oracle-Patterns|/Installed/dbms/utility/compile_schema.plsql||

}
{ db_version #dbms_utility-db_version

  Compare with procedures in `→ development/databases/Oracle/installed/packages/dbms/db_version[dbms_db_version].version`, dbms_db_release

  gh|Oracle-Patterns|/Installed/dbms/utility/db_version.plsql||

  When executed, the script might print something like
code {
Version:       18.0.0.0.0
Compatibility: 12.0.0
code }

  See also attribute `instance_role` in → development/databases/Oracle/installed/dynamic-performance-views/instance,
  → development/databases/determine-versions

}
{ exec_ddl_statement

  gh|Oracle-Patterns|/Installed/dbms/utility/exec_ddl_statement.plsql||

}
{ expand_sql_text #dbms_utility-expand_sql_text


}

{ format_call_stack #dbms_utility-format_call_stack

  gh|Oracle-Patterns|/Installed/dbms/utility/format_call_stack.plsql||

  See also → development/databases/Oracle/installed/packages/utl/call_stack[`utl_call_stack`]

}
{ format_error_stack

  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_stack.plsql||

code {
Error: ORA-00900: invalid SQL statement
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 4
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 8
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 12
ORA-06512: at "RENE.T
Q84_ERROR_TRACE", line 16
code }

}
{ format_error_backtrace


  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_backtrace.plsql||

code {
ORA-06512: at "RENE.TQ84_BACKTRACE", line 4
ORA-06512: at "RENE.TQ84_BACKTRACE", line 8
ORA-06512: at "RENE.TQ84_BACKTRACE", line 12
ORA-06512: at "RENE.TQ84_BACKTRACE", line 16
RA-06512: at line 2
code }

}
{ time

  gh|Oracle-Patterns|/Installed/dbms/utility/time.plsql||

}

sa:
  → development/databases/Oracle/installed/packages/dbms

  → development/databases/Oracle/installed/packages/utl/call_stack
