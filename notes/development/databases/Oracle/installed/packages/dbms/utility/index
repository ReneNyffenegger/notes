$ Oracle: DBMS_UTILITY
@ dbms_utility

`dbms_utility` contains various utility functions.

table { ll
  `active_instances` ☰ 
  `analyze_database` ☰ 
  `analyze_part_object` ☰ *Deprecated* in favor of using → development/databases/Oracle/installed/packages/dbms/stats[`dbms_stats`]
  `analyze_schema` ☰ 
  `canonicalize` ☰ `a` becomes `A`, `"a"` becomes `a`, `"a".b` becomes `"a"."B"`, `"a".b,c.f` becomes `"a"."B"` (the `c.f` part is ignored).
  → development/databases/Oracle/installed/packages/dbms/utility/api/comma_to_table-table_to_comma[`comma_to_table` and `table_to_comma`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/compile_schema[`compile_schema`] ☰ 
  `create_alter_type_error_table` ☰ 
  `current_instance` ☰ 
  `data_block_address_block` ☰ Gets the block number from a → development/databases/Oracle/architecture/database/logical-structures/data-block#ora-db-block-addr[data block address] (see → development/databases/Oracle/installed/packages/dbms/utility/data-block-address-conversion[conversion between a data block address and a file/block number])
  `data_block_address_file` ☰ Gets the file number from a → development/databases/Oracle/architecture/database/logical-structures/data-block#ora-db-block-addr[data block address] (see → development/databases/Oracle/installed/packages/dbms/utility/data-block-address-conversion[conversion between a data block address and a file/block number])
  `db_version` ☰ 
  `directory_has_symlink` ☰ This function is used in `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/rdbms/admin/utldirsymlink_sql`. This function is not documented in Oracles documentation 18c through → development/databases/Oracle/Releases-and-versions/21c.
  → development/databases/Oracle/installed/packages/dbms/utility/api/exec_ddl_statement[`exec_ddl_statement`] ☰ Executes a → development/databases/Oracle/SQL/DDL[DDL statement]
  → development/databases/Oracle/installed/packages/dbms/utility/api/expand_sql_text[`expand_sql_text`] ☰ Transforms an → development/databases/Oracle/SQL/statement[SQL statement] into another semantically equivalent SQL statement that does not contain any references to → development/databases/Oracle/objects/synonyms[synonyms] or → development/databases/Oracle/objects/views[views].
  → development/databases/Oracle/installed/packages/dbms/utility/api/format/call_stack[`format_call_stack`] ☰  Returns the call stack as a text (where the individual stack items are separated by new lines)
  → development/databases/Oracle/installed/packages/dbms/utility/format[`format_error_backtrace`] ☰ Returns the call stack at the point where an exception was raised, *even* if called from an exception handler in a different scope. 
  → development/databases/Oracle/installed/packages/dbms/utility/format[`format_error_stack`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/get_cpu_time[`get_cpu_time`] ☰ Returns the current CPU time as 100th's of a second from some arbitrary epoch. Compare with → development/databases/Oracle/installed/packages/dbms/utility/api/get_time[`get_time`].
  `get_dependency` ☰ *Deprecated* in favor uf using → development/databases/Oracle/installed/data-dictionary/dependencies[`dba_dependencies`] etc. directly.
  `get_endianness` ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/get/hash_value[`get_hash_value`] ☰ Computes a *hash value* for a given string.
  `get_parameter_value` ☰ Queries → development/databases/Oracle/installed/dynamic-performance-views/parameter[`v$parameter`]. *Deprecated*
  → development/databases/Oracle/installed/packages/dbms/utility/api/get_sql_hash[`get_sql_hash`] ☰ 
  → development/databases/Oracle/installed/packages/dbms/utility/api/get_time[`get_time`] ☰ Returns a value of a counter that is increased 100 times per seconds. The value 0 seems to be somewhat related to the startup time of the → development/databases/Oracle/architecture/instance. Compare with → development/databases/Oracle/installed/packages/dbms/utility/api/get_cpu_time[`get_cpu_time`].
  `get_tz_transitions` ☰ 
  `invalidate` ☰ 
  `is_bit_set` ☰ Checks if a given bit is set in a value whose → development/databases/Oracle/SQL/data-types[data type] is → development/databases/Oracle/SQL/data-types/raw[raw]. Compare with the → development/databases/Oracle/SQL/functions[SQL function] `bitand`.
  `is_cluster_database` ☰ 
  `make_data_block_address` ☰ Gets the → development/databases/Oracle/architecture/database/logical-structures/data-block#ora-db-block-addr[data block address] from the block's file and block number (see → development/databases/Oracle/installed/packages/dbms/utility/data-block-address-conversion)
  → development/databases/Oracle/installed/packages/dbms/utility/name_resolve[`name_resolve`] ☰ 
  `name_tokenize` ☰ 
  `old_current_schema` ☰ 
  `old_current_user` ☰ 
  `port_string` ☰ Returns a string that uniquely identifies the operating system and the two task protocol version, for example `IBMPC/WIN_NT64-9.1.0`.
  → development/databases/Oracle/installed/packages/dbms/utility/api/sqlid_to_sqlhash[`sqlid_to_sqlhash`] ☰ Converts an → development/databases/Oracle/SQL/statement#ora-sql-stmt-ident-sqlid[SQLID] to the corresponding hash value
  `validate` ☰ 
  `wait_on_pending_dml` ☰ 
table }

{ COMPILE_SCHEMA

  gh|Oracle-Patterns|/Installed/dbms/utility/compile_schema.plsql||

}
{ DB_VERSION #dbms_utility-db_version

code {
declare
   v   varchar2(100);
   c   varchar2(100);
begin
   dbms_utility.db_version(v, c);
   → development/databases/Oracle/installed/packages/dbms/output/api/put_line[dbms_output.put_line](v);
   → development/databases/Oracle/installed/packages/dbms/output/api/put_line[dbms_output.put_line](c);
end;
/
--
-- Version:       18.0.0.0.0
-- Compatibility: 12.0.0
code }

  Compare with procedures in → development/databases/Oracle/installed/packages/dbms/db_version#dbms_version-version-release[`dbms_db_version.version`].

  See also attribute `instance_role` in `→ development/databases/Oracle/installed/dynamic-performance-views/instance`,
  → development/databases/determine-versions

}
{ FORMAT_ERROR_STACK

  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_stack.plsql||

code {
Error: → development/databases/Oracle/errors/ORA-00900_invalid-SQL-statement
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 4
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 8
ORA-06512: at "RENE.TQ84_ERROR_TRACE", line 12
ORA-06512: at "RENE.T
Q84_ERROR_TRACE", line 16
code }

}
{ FORMAT_ERROR_BACKTRACE

  gh|Oracle-Patterns|/Installed/dbms/utility/format_error_backtrace.plsql||

code {
ORA-06512: at "RENE.TQ84_BACKTRACE", line 4
ORA-06512: at "RENE.TQ84_BACKTRACE", line 8
ORA-06512: at "RENE.TQ84_BACKTRACE", line 12
ORA-06512: at "RENE.TQ84_BACKTRACE", line 16
RA-06512: at line 2
code }

}
{ TIME

  gh|Oracle-Patterns|/Installed/dbms/utility/time.plsql||

}

sa:
  → development/databases/Oracle/installed/packages/dbms

  → development/databases/Oracle/installed/packages/utl/call_stack
