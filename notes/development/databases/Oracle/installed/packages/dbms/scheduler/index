$ Oracle: DBMS_SCHEDULER
@ dbms_scheduler

`dbms_scheduler` is used to manage the → development/databases/Oracle/adminstration/scheduler.

{ Procedures and functions

  table { ll

   `add_event_queue_subscriber` ☰
   `add_group_member` ☰
   `add_job_email_notification` ☰
   `add_to_incompatibility` ☰
   `add_window_group_member` ☰
   `alter_chain` ☰
   `alter_running_chain` ☰
   `analyze_chain` ☰
   `auto_purge` ☰ Purge from the logs, based on class and global log_history. (Undocumented)
   `check_aq_cbk_privs` ☰
   `check_credential` ☰
   `check_sys_privs` ☰
   `close_window` ☰
   `copy_job` ☰
   `create_calendar_string` ☰
   `create_chain` ☰ Creates a chain.
   `create_credential` ☰ *Deprecated* with Oracle 12c in favor of → development/databases/Oracle/installed/packages/dbms/credential/api/create_credential[`dbms_credential.create_credential`].
   `create_database_destination` ☰
   `create_event_schedule` ☰ TODO: → development/databases/Oracle/adminstration/scheduler/event[Scheduler events]
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/file_watcher/create` ☰ Creates a → development/databases/Oracle/objects/file/watchers object
   `create_group` ☰ Creates a *window group*, a *database destination group* or an *external destination group*.
   `create_incompatibility` ☰
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/job/create` ☰ Creates a → development/databases/Oracle/objects/jobs
   `create_jobs` ☰ Creates multiple jobs in a single → development/databases/Oracle/architecture/transaction.
   `create_job_class` ☰
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/program/create` ☰ Creates a → development/databases/Oracle/objects/programs.
   `create_resource` ☰
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/schedule/create` ☰
   `create_window` ☰
   `create_window_group` ☰
   `define_anydata_argument` ☰
   `define_chain_event_step` ☰ Compare with `define_chain_step`
   `define_chain_rule` ☰
   `define_chain_step` ☰ Compare with `define_chain_event_step`
   `define_metadata_argument` ☰
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/argument/define_program` ☰
   `delete_file` ☰
   `disable` ☰ Disables a given program, → development/databases/Oracle/objects/jobs, chain, window, database destination, external destination, file watcher, group or incompatibility.
   `disable1_calendar_check` ☰
   `drop_agent_destination` ☰
   `drop_chain` ☰
   `drop_chain_rule` ☰
   `drop_chain_step` ☰
   `drop_credential` ☰ *Deprecated* with Oracle 12c
   `drop_database_destination` ☰
   `drop_file_watcher` ☰
   `drop_group` ☰
   `drop_incompatibility` ☰
   `drop_job` ☰
   `drop_job_class` ☰
   `drop_program` ☰
   `drop_program_argument` ☰
   `drop_resource` ☰
   `drop_schedule` ☰
   `drop_window` ☰
   `drop_window_group` ☰
   `enable` ☰
   `end_detached_job_run` ☰
   → development/databases/Oracle/installed/packages/dbms/scheduler/api/evaluate/calendar_string[`evaluate_calendar_string`] ☰ Evaluate the next run-date for a → development/databases/Oracle/adminstration/scheduler/calendaring-syntax[calendar string] (which is used in the parameter `repeat_interval` of `dbms_scheduler.create_schedule`)
   `evaluate_running_chain` ☰
   `file_watch_filter` ☰
   `generate_event_list` ☰
   `generate_job_name` ☰
   `get_agent_info` ☰ Returns the same information as → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin/schagent[`schagent -status`].
   `get_agent_version` ☰
   `get_attribute` ☰
   `get_chain_rule_action` ☰
   `get_chain_rule_condition` ☰
   `get_default_value` ☰
   → development/databases/Oracle/installed/packages/dbms/scheduler/api/file/get[`get_file`], `put_file` ☰ Retrieves/stores a file from/on a host, compare with `dbms_file_transfer.get_file` and → development/databases/Oracle/installed/packages/utl/file[`utl_file`]. `get_file` and `put_file` differ from the equivalent `utl_file` procedures in that they use → development/databases/Oracle/objects/credentials[credentials] and can operate on hosts where only a *scheduler agent* is installed.
   `get_job_step_cf` ☰
   `get_scheduler_attribute` ☰
   `get_sys_time_zone_name` ☰
   `get_varchar2_value` ☰
   `is_scheduler_created_agent` ☰
   `open_window` ☰ Opens a window prematurely.
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/purge_log` ☰
   `remove_event_queue_subscriber` ☰
   `remove_from_incompatibility` ☰
   `remove_group_member` ☰
   `remove_job_email_notification` ☰
   `remove_window_group_member` ☰
   `reset_job_argument_value` ☰
   `reset_job_argument_value` ☰
   `resolve_calendar_string` ☰
   `resolve_name` ☰
   `run_chain` ☰ Immediately runs a → development/databases/Oracle/objects/chains by creating a *run-once* → development/databases/Oracle/objects/jobs.
   `run_job` ☰ Runs a job outside of its schedule (for example to test the job).
   `set_agent_registration_pass` ☰
   `→ development/databases/Oracle/installed/packages/dbms/scheduler/api/attribute/set` ☰ Sets or modifes a → development/databases/Oracle/adminstration/scheduler/objects[scheduler's object's] attribute. Compare with `set_scheduler_attribute`.
   `set_attribute_null` ☰
   `set_job_anydata_value` ☰
   `set_job_argument_value` ☰
   `set_job_attributes` ☰
   `set_resource_constraint` ☰
   `set_scheduler_attribute` ☰ Compare with `set_attribute`.
   `show_errors` ☰
   `stime` ☰
   `stop_job` ☰
   `submit_remote_external_job` ☰
  table }

}
{ Creating a program, a schedule and a job

  gh|Oracle-Patterns|/Installed/dbms/scheduler/program_schedule_job/table.sql||

  gh|Oracle-Patterns|/Installed/dbms/scheduler/program_schedule_job/package.plsql||

  gh|Oracle-Patterns|/Installed/dbms/scheduler/program_schedule_job/create.plsql||

  gh|Oracle-Patterns|/Installed/dbms/scheduler/program_schedule_job/clean_up.plsql||

}
{ Object/table types

  table { lll
      ~Object type~ ☰ ~Description~ ☰ ~Table type~
    `jobarg` ☰ Represents an argument in a batch of job arguments. ☰ `jobarg_array`
    `job_definition` ☰ Represents a job in a batch of jobs, used by the `dbms_scheduler.create_job` procedure ☰ `job_definition_array`
    `jobattr` ☰ Represents a job attribute in a batch of job attributes. ☰ `jobattr_array`
    `scheduler$_step_type` ☰ Used by `dbms_scheduler.run_chain` ☰ `scheduler$_step_type_list`
    `scheduler$_event_info` ☰ The datatype of the Scheduler event queue `sys.scheduler$_event_queue` ☰
    `scheduler_filewatcher_result` ☰ ☰
    `scheduler_filewatcher_request` ☰ ☰

  table }

}
{ Logging levels

? Logging levels can be assigned to → development/databases/Oracle/objects/job-classes[job classes].

  table { ll
    `dbms_scheduler.logging_off` ☰ Nothing is logged for the → development/databases/Oracle/objects/jobs[jobs] in the job class
    `dbms_scheduler.logging_runs` ☰ The default: logs information about runs
    `dbms_scheduler.logging_failed_runs` ☰ Logs only failed runs
    `dbms_scheduler.logging_full` ☰ Logs all operations (including creation, deletaion, alteration, disabling and stopping jobs).
  table }

}

sa:

 `dbms_scheduler` has superseded `→ development/databases/Oracle/installed/packages/dbms/job` and offers more possibilities (for example executing shell scripts/cmd.exe batch files).
  -
  → development/databases/Oracle/adminstration/init-parameters/event/list[Event] 10992 enables `dbms_job` instead of `dbms_scheduler`.

  Scheduler related → development/databases/Oracle/installed/data-dictionary/base-tables/scheduler[base tables]

  The specification for `dbms_scheduler` is in `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/rdbms/admin/dbmssch_sql`

 `dbms_scheduler` calls `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin/jssu` when credentials are used.

  → development/databases/Oracle/installed/packages/dbms

links:
  → http://pafumi.net/Scheduler_DBMS_SCHEDULER.html[This link] was helpful.
