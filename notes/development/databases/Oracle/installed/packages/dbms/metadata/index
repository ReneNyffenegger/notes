$ dbms_metadata

`dbms_metadata` exposes the *Metadata API* which allows to extract definitions of → development/databases/Oracle/objects[objects] as → development/databases/Oracle/SQL/DDL[DDL statements] or → development/XML documents.

code {
create table table_heap (
   a number,
   b varchar2(10)
);

create global temporary table table_ggt (
   a number,
   b varchar2(10)
);

select dbms_metadata.get_ddl('TABLE', 'TABLE_HEAP') from dual;
select dbms_metadata.get_ddl('TABLE', 'TABLE_GGT' ) from dual;
code }

{ Using in SQL*Plus with spool

  `dbms_metadata.get_ddl` might be used in → development/databases/Oracle/SQL-Plus and the
  → development/databases/Oracle/SQL-Plus/spool[`spool`] command to extract the definition of an object
  into a file that then can be used to re-create the table:
code {
→ development/databases/Oracle/SQL-Plus/set long 10000
spool /tmp/table-def.sql
select dbms_metadata.get_ddl('TABLE','JUST_A_TABLE') from dual;
spool off
code }

}


{ Procedures and functions

code {
select distinct
   procedure_name
from
   all_procedures
where
   object_name = 'DBMS_METADATA'
order by
   procedure_name
code }

  table { ll
    ADD_TRANSFORM ☰
    CHECK_CONSTRAINT ☰
    CHECK_MATCH_TEMPLATE ☰
    CHECK_MATCH_TEMPLATE_LOB ☰
    CHECK_MATCH_TEMPLATE_PAR ☰
    CHECK_TYPE ☰
    CLOSE ☰
    CONVERT ☰
    CONVERT_TO_CANONICAL ☰
    FETCH_CLOB ☰
    FETCH_DDL ☰
    FETCH_DDL_TEXT ☰
    FETCH_OBJNUMS ☰
    FETCH_OBJNUMS_NAMES ☰
    FETCH_SORTED_OBJNUMS ☰
    FETCH_VAT_OBJNUMS ☰
    FETCH_XML ☰
    FETCH_XML_CLOB ☰
    FREE_CONTEXT_ENTRY ☰
    GET_ACTION_INSTANCE ☰
    GET_ACTION_SCHEMA ☰
    GET_ACTION_SYS ☰
    GET_CANONICAL_VSN ☰
    GET_CHECK_CONSTRAINT_NAME ☰
    GET_DDL ☰
    GET_DEPENDENT_DDL ☰
    GET_DEPENDENT_SXML ☰
    GET_DEPENDENT_XML ☰
    GET_DOMIDX_METADATA ☰
    GET_DPSTRM_MD ☰
    GET_EDITION ☰
    GET_EDITION_ID ☰
    GET_FK_CONSTRAINT_NAME ☰
    GET_GRANTED_DDL ☰
    GET_GRANTED_XML ☰
    GET_HASHCODE ☰
    GET_INDEX_INTCOL ☰
    GET_INDPART_TS ☰
    GET_JAVA_METADATA ☰
    GET_PARTN ☰
    GET_PLSQL_OPTIMIZE_LEVEL ☰
    GET_PLUGTS_BLK ☰
    GET_PREPOST_TABLE_ACT ☰
    GET_PROCOBJ ☰
    GET_PROCOBJ_GRANT ☰
    GET_QUERY ☰
    GET_STAT_COLNAME ☰
    GET_STAT_INDNAME ☰
    GET_SXML ☰
    GET_SXML_DDL ☰
    GET_SYSPRIVS ☰
    GET_VERSION ☰
    GET_XML ☰
    IN_TSNUM ☰
    IN_TSNUM_2 ☰
    IS_ACTIVE_REGISTRATION ☰
    IS_ATTR_VALID_ON_10 ☰
    IS_XDB_TRANS ☰
    NETWORK_CALLOUTS ☰
    NETWORK_FETCH_CLOB ☰
    NETWORK_FETCH_ERRORS ☰
    NETWORK_FETCH_PARSE ☰
    NETWORK_OPEN ☰
    NET_SET_DEBUG ☰
    OKTOEXP_2NDARY_TABLE ☰
    OPEN ☰
    OPENW ☰
    OPEN_GET_FK_CONSTRAINT_NAME ☰
    PARSE_CONDITION ☰
    PARSE_DEFAULT ☰
    PARSE_QUERY ☰
    PATCH_TYPEID ☰
    PUT ☰
    SET_COUNT ☰ Sets the maximum number of objects to be retrieved with calls to `FETCH_…`
    SET_DEBUG ☰
    SET_FILTER ☰
    SET_FK_CONSTRAINT_COL_PAIR ☰
    SET_PARAMETER ☰
    SET_PARSE_ITEM ☰ Call `SET_PARSE_ITEM` to that `FETCH_DDL` and `FETCH_XML_CLOB` return attributes of the object's metadata or the DDL statement in a `sys.ku$_parsed_items` *nested table*.
    → development/databases/Oracle/installed/packages/dbms/metadata/api/set_transform_param[SET_REMAP_PARAM] ☰
    SET_TRANSFORM_PARAM ☰
    SET_XMLFORMAT ☰
    TRANSFORM_STRM    ☰
  table }

}

sa:

  In order to extract definitions from another schema, the → development/databases/Oracle/security/roles/oracle-maintained/select_catalog_role[`SELECT_CATALOG_ROLE`]
  → development/databases/Oracle/security/privileges[privilege].

  → development/databases/Oracle/installed/packages/dbms

links:
  → https://github.com/alexeyvo/oracle_oci_examples/blob/master/mddemo.sql[`mddemo.sql`] (supposedly located under `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/rdbms[$ORACLE_HOME/rdbms]/demo`) demonstrates
  the `dbms_metadata` API.
