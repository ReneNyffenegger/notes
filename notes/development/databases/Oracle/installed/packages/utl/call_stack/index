$ utl_call_stack

`utl_call_stack` provides functions to determine the current call stack in an PL/SQL program. Its functionality is similar to that of 
  → development/databases/Oracle/installed/packages/dbms/utility#dbms_utility-format_call_stack[`dbms_utility.format_call_stack`].

{ dynamic_depth / error_depth

 `dynamic_depth` and `error_depth` return a `pls_integer` that indicates the *number of subprograms* on the call stack and *number of errors* on the error stack, respectively.

  Compare with `backtrace_depth`.

}

{ Procedures that take dynamic_depth as argument

  table { ll
   `lexical_depth` ☰
   `subprogram` ☰
   `owner` ☰
   `unit_line` ☰
   `unit_type` ☰
   `actual_edition` ☰
   `current_edition` ☰ *deprecated*
  table }

}
{ Procedures that take error_depth as argument

  table { ll
    `error_number` ☰
    `error_msg` ☰
  table }

}
{ Procedures that take a backtrace_depth as argument

  table { ll
    `backtrace_unit` ☰
    `backtrace_line` ☰
  table }
}
{ Other functions

  table { ll
   `concatenate_subprogram` ☰
  table }


}
{ Simple example

  gh|Oracle-Patterns|/Installed/utl/call_stack/example-01.sql||

}
{ Slightly more complicated example

  gh|Oracle-Patterns|/Installed/utl/call_stack/nested.sql||

  When executed in → development/databases/Oracle/SQL-Plus, this script prints
code {
Current stack for  SQL*Plus
  dynamic depth:   2
  error depth:     0
  backtrace depth: 0

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

Current stack for  run
  dynamic depth:   3
  error depth:     0
  backtrace depth: 0

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                70 UTL_CALL_STACK_TEST.RUN
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

Current stack for  PROC
  dynamic depth:   4
  error depth:     0
  backtrace depth: 0

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                65 UTL_CALL_STACK_TEST.PROC
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                71 UTL_CALL_STACK_TEST.RUN
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

Current stack for  NESTED_PPROC
  dynamic depth:   5
  error depth:     0
  backtrace depth: 0

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  2 PACKAGE BODY                   UTL_CALL_STACK_TEST                56 UTL_CALL_STACK_TEST.PROC.NESTED_PROC
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                66 UTL_CALL_STACK_TEST.PROC
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                71 UTL_CALL_STACK_TEST.RUN
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

Current stack for  Exception PROC
  dynamic depth:   5
  error depth:     1
  backtrace depth: 1

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  2 PACKAGE BODY                   UTL_CALL_STACK_TEST                61 UTL_CALL_STACK_TEST.PROC.NESTED_PROC
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                66 UTL_CALL_STACK_TEST.PROC
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                71 UTL_CALL_STACK_TEST.RUN
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

   divisor is equal to zero                                                                               1476

   DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST                            58

Current stack for  exception run
  dynamic depth:   3
  error depth:     4
  backtrace depth: 4

  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                13 UTL_CALL_STACK_TEST.SHOWSTACK
  1 PACKAGE BODY                   UTL_CALL_STACK_TEST                73 UTL_CALL_STACK_TEST.RUN
  0 ANONYMOUS BLOCK                __anonymous_block                   1 __anonymous_block

   divisor is equal to zero                                                                               1476
   at "DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST", line 62                                                   6512
   at "DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST", line 58                                                   6512
   at "DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST", line 66                                                   6512

   DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST                            62
   DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST                            58
   DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST                            66
   DWH_DM_RISKFINANCE.UTL_CALL_STACK_TEST                            71
code }

}

sa:

  → development/databases/Oracle/installed/packages/utl

