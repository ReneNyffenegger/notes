$ Oracle: DBA_PLSQL_OBJECT_SETTINGS
@ dba_plsql_object_settings

`dba_plsql_object_settings` shows compiler settings that were in force when a → development/databases/Oracle/PL-SQL object (stored procedure, function, package etc.) was compiled.
-
Such settings include, for example those that relate to → development/databases/Oracle/PL-SQL/compilation/conditional[conditional compilation].

`dba_plsql_object_settings` comes in all four variants: `user_plsql_object_settings`, `all_plsql_object_settings`, `dba_plsql_object_settings` and
`cdb_plsql_object_settings`.

{ Columns

  The columns `owner`, `name` and `type` uniqly identify the PL/SQL object for which information is shown.

  table { ll
  ~Column name~ ☰ ~Value of what at compilation time~
   `plsql_optimize_level` ☰
   `plsql_code_type` ☰
   `plsql_debug` ☰
   `plsql_warnings` ☰ Init parameter `→ development/databases/Oracle/adminstration/init-parameters/plsql_warnings`.
   `nls_length_semantics` ☰ Init parameter → development/databases/Oracle/adminstration/init-parameters/nls#ora-nls_length_semantics[`nls_length_semantics`]
   `plsql_ccflags` ☰ Init parameter `→ development/databases/Oracle/adminstration/init-parameters/plsql/ccflags[plsql_ccflags]`
   `plscope_settings` ☰ Init paramter `→ development/databases/Oracle/adminstration/init-parameters/plscope_settings`:
  table }

}
{ Select settings of a given object

code {
select
   plsql_optimize_level,
   plsql_code_type,
   plsql_debug,
   plsql_warnings,
   plsql_ccflags,
   → development/databases/Oracle/adminstration/init-parameters/plscope_settings[plscope_settings],
   nls_length_semantics,
   origin_con_id
from
   dba_plsql_object_settings
where
   owner =  user           and
   name  = 'XYZ'           and
   type  = 'PACKAGE BODY';
code }

}

{ Example 1

  gh|Oracle-Patterns|/Installed/data-dictionary/plsql_object_settings/example-01.sql||

}

sa:

  → development/databases/Oracle/PL-SQL/errors-warnings
