$ Set action, client_identifier, client_info and module in v$session with ADO.NET (C#)

The → development/databases/Oracle/ODP_NET class → Microsoft/dot-net/namespaces-classes/Oracle/DataAccess/Client/OracleConnection[`Oracle.DataAccess.Client.OracleConnection`] has a few properties whose values
will be shown in some columns → development/databases/Oracle/installed/dynamic-performance-views/session[`v$session`] of the session that assigned the values:
table { ll
  ~Property name~ ☰ ~Column name~
  `ActionName` ☰ `action`
  `ClientId`   ☰ `client_identifier`
  `ClientInfo` ☰ `client_info`
  `ModuleName` ☰ `module`
table }

The following simple → development/languages/C-Sharp[C#] program tries to demonstrate that:
gh|Oracle-Patterns|/Installed/dynamic-performance-views/session/set-action-etc.cs||

{ Compling

  I was able to compile the code on the command line (→ Windows/dirs/Windows/System32/cmdkey_exe[`cmd.exe`]) with the following sequence of commands *after* setting
  → Windows/development/Visual-Studio/environment-variables[the necessary environment variable of Visual Studio]:

code {
set ORACLE_HOME=→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n[c:\oracle\18c]
csc → development/languages/C-Sharp/compiler/options/debug[-debug] → development/languages/C-Sharp/compiler/options/reference[-reference]:→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/ODP_NET/bin/v/Oracle_DataAccess_dll[%oracle_home%\ODP.NET\bin\4\Oracle.DataAccess.dll] set-action-etc.cs
code }

}
{ Executing the program

  In order to execute the program, I had to copy the → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/ODP_NET/bin/v/Oracle_DataAccess_dll[`Oracle.DataAccess.dll`] into the current directory.

}
sa:
  development/databases/Oracle/installed/packages/dbms/application_info
