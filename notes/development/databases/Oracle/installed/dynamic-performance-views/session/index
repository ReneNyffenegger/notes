$ Oracle: V$SESSION
@ v$session

Each record in `v$session` shows information about a «current» → development/databases/Oracle/architecture/session.

{ Search for session by operating system user and/or program name

 `v$sessions` records the operating system user name and the program name with which he/she connects to → development/databases/Oracle in the columns `username` and `program`.

  The Oracle user name (schema) with which a user connected to Oracle is recorded in `username`.

  With this information, it is possible to find an «interesting» session:
  gh|oracle-patterns|/Installed/dynamic-performance-views/session/find-my-interesting-sessions.sql||

}
{ Blocking sessions

  If a sesssion cannot continue with the current execution because it is blocked by another session, the blocked session records the
  instance and session id of the blocking session in the columns `blocking_instance` and `blocking_session`.

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/blocked-blocking.sql||

}
{ audsid #vSession-audsid

  The column audsid can be joined with `→ development/databases/Oracle/SQL/functions/sys_context[sys_context]('userenv','SESSIONID')` to find out which session is the "own one".

  Alternatively, → development/databases/Oracle/installed/packages/dbms/support#dbms_support-mysid[`dbms_support.mysid`] can be used: `where sid = sys.dbms_support.mysid`.

  → development/databases/Oracle/installed/dynamic-performance-views/session/identify-own-session[Identifying one's own session]

}
{ module, action

  The values of the columns `module` and `action` of `v$session` can be set with `→ development/databases/Oracle/installed/packages/dbms/application_info[dbms_application_info].set_module`.
  (See → development/databases/Oracle/installed/dynamic-performance-views/session/longops[`v$session_longops`] for an example).

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/module-action.sql||

  See also → development/databases/Oracle/installed/dynamic-performance-views/session/C-Sharp_set-action-client_identifier_info-module

}
{ module_hash #ora-v-session-module_hash

  It turns out that the value of `module_hash` is equal to
  → development/databases/Oracle/SQL/functions/ora/hash[`ora_hash(module)`]. Thus, the following → development/databases/Oracle/SQL/select[`select` statement] does not return a record:
  gh|oracle-patterns|/Installed/dynamic-performance-views/session/module_hash.sql||

}
{ client_info

  The field client_info can be set with dbms_application_info.set_client_info

  RMAN sets it to something that can be queried with `client_info like '%rman%'`

}
{ sql_exec_id

  As → https://tanelpoder.com/2011/10/24/what-the-heck-is-the-sql-execution-id-sql_exec_id[Tanel Poder] points out, the value of `sql_exec_id` seems to start with 2²⁴ for every `sql_id` when
  Oracle is started.

 `sql_exec_id` is also found in → development/databases/Oracle/installed/dynamic-performance-views/active/session_history[`v$active_session_history`] and
  → development/databases/Oracle/installed/dynamic-performance-views/open_cursor[`v$open_cursor`].

}
{ Joins

  Some → development/databases/Oracle/installed/dynamic-performance-views[v$ views] that can be joined to include:
    • → development/databases/Oracle/installed/dynamic-performance-views/process[`v$process`]
    • → development/databases/Oracle/installed/dynamic-performance-views/transaction[`v$transaction`]
    • → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`]
    • → development/databases/Oracle/installed/dynamic-performance-views/sql/command[`v$sql_command`]
    • → development/databases/Oracle/installed/dynamic-performance-views/px/session[`v$px_session`]

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/joins.sql||

  An attempt to find views that can be joined to `v$session` with a → development/databases/Oracle/SQL/select[select statement]
  is → development/databases/Oracle/installed/dynamic-performance-views/session/joinable[here].

}
{ sid

  Join sid with v$sesstat to get some statistical information for a particular sesssion. 

}
{ sid, serial #vSsession-sid-serial

 `sid` and `serial#` can be used in a statement to to → development/databases/Oracle/SQL/statement/nouns/system/alter#ora-alter-system-end-session[kill a session].

}
{ type

  The value of `type` can be used to identify → development/databases/Oracle/architecture/processes/background[background] (`type='BACKGROUND'`) and foreground (`type='USER'`)
  → development/databases/Oracle/architecture/processes[processes].

}
{ Waiting sessions

  What a session is waiting for can be queried with → development/databases/Oracle/installed/dynamic-performance-views/session/wait

}
{ SADDR

  The value of `saddr` (the session address) might be joined to
    • → development/databases/Oracle/installed/data-dictionary/kgllock[`dba_kgllock`]
    • … ?

}
{ Columns

  table { ll
   `SADDR`                                               ☰ The session address (`RAW`)
   `SID`                                                 ☰ Session ID (unique number for a given point in time)
   `SERIAL#`                                             ☰ The combination of `SERIAL#` and `SID` is unique accross time
   `AUDSID`                                              ☰ The Session ID of session that audits a session
   `PADDR`                                               ☰ Address of the process (`RAW`), can be used to join with → development/databases/Oracle/installed/dynamic-performance-views/process[`v$process`]
   `USER#`                                               ☰ ID of the user who is connected to the session
   `USERNAME`                                            ☰ Name of the user
   `COMMAND`                                             ☰ Type of command (`select command_name from → development/databases/Oracle/installed/dynamic-performance-views/sql/command[v$sqlcommand] where command_type = command`)
   `OWNERID`                                             ☰ ID of the user who owns the migratable session.
   `TADDR`                                               ☰ Address (`RAW`) of the transaction, join with `v$transaction`.
   `LOCKWAIT`                                            ☰ Address of the lock that the session is waiting for, `NULL` if not waiting.
   `STATUS`                                              ☰ `ACTIVE`, `INACTIVE`, `KILLED`, `CACHED` or `SNIPED`
   `SERVER`                                              ☰ `DEDICATED`, `SHARED`, `PSEUDO`, `POOLED` or `NONE`
   `SCHEMA#`                                             ☰ 
   `SCHEMANAME`                                          ☰ 
   `OSUSER`                                              ☰ Name of operating system user who is connected to session
   `PROCESS`                                             ☰ Operating system process id (PID)
   `MACHINE`                                             ☰
   `PORT`                                                ☰
   `TERMINAL`                                            ☰
   `PROGRAM`                                             ☰
   `TYPE`                                                ☰
   `SQL_ADDRESS`, `SQL_HASH_VALUE`                        ☰ `SQL_ADDRESS` and `SQL_HASH_VALUE` identify the SQL statement that is currently executed by the session (join with `v$sql`)
   `SQL_ID`                                              ☰
   `SQL_CHILD_NUMBER`                                    ☰
   `SQL_EXEC_START`                                      ☰
   `SQL_EXEC_ID`                                         ☰
   `PREV_SQL_ADDR`                                       ☰
   `PREV_HASH_VALUE`                                     ☰
   `PREV_SQL_ID`                                         ☰
   `PREV_CHILD_NUMBER`                                   ☰
   `PREV_EXEC_START`                                     ☰
   `PREV_EXEC_ID`                                        ☰
   `PLSQL_ENTRY_OBJECT_ID`                               ☰
   `PLSQL_ENTRY_SUBPROGRAM_ID`                           ☰
   `PLSQL_OBJECT_ID`                                     ☰
   `PLSQL_SUBPROGRAM_ID`                                 ☰
   `MODULE`                                              ☰
   `MODULE_HASH`                                         ☰
   `ACTION`                                              ☰
   `ACTION_HASH`                                         ☰
   `CLIENT_INFO`                                         ☰
   `FIXED_TABLE_SEQUENCE`                                ☰
   `ROW_WAIT_OBJ#`                                       ☰
   `ROW_WAIT_FILE#`                                      ☰
   `ROW_WAIT_BLOCK#`                                     ☰
   `ROW_WAIT_ROW#`                                       ☰
   `TOP_LEVEL_CALL#`                                     ☰
   `LOGON_TIME`                                          ☰
   `LAST_CALL_ET`                                        ☰
   `PDML_ENABLED`                                        ☰  Replaced by `PDML_STATUS`
   `FAILOVER_TYPE`                                       ☰ `NONE`, `SESSION`, `SELECT`, `TRANSACTION` or `AUTO`
   `FAILOVER_METHOD`                                     ☰
   `FAILED_OVER`                                         ☰
   `RESOURCE_CONSUMER_GROUP`                             ☰
   `PDML_STATUS`,                                        ☰ `ENABLED`, `DISABLED` or `FORCED`. PDML = Parallel → development/databases/Oracle/SQL/DML[DML]. Replaces `PDML_ENABLED`
   `PDDL_STATUS`                                         ☰ `ENABLED`, `DISABLED` or `FORCED`. PDDL = Parallel → development/databases/Oracle/SQL/DDL[DDL]
   `PQ_STATUS`                                           ☰ `ENABLED`, `DISABLED` or `FORCED`. PQ = Parallel → development/databases/Oracle/SQL/select[Query].
   `CURRENT_QUEUE_DURATION`                              ☰
   `CLIENT_IDENTIFIER`                                   ☰
   `BLOCKING_SESSION_STATUS`                             ☰
   `BLOCKING_INSTANCE`                                   ☰
   `BLOCKING_SESSION`                                    ☰
   `FINAL_BLOCKING_SESSION_STATUS`                       ☰
   `FINAL_BLOCKING_INSTANCE`                             ☰
   `FINAL_BLOCKING_SESSION`                              ☰
   `SEQ#`                                                ☰
   `EVENT#`                                              ☰
   `EVENT`                                               ☰
   `P1TEXT`                                              ☰
   `P1`                                                  ☰
   `P1RAW`                                               ☰
   `P2TEXT`                                              ☰
   `P2`                                                  ☰
   `P2RAW`                                               ☰
   `P3TEXT`                                              ☰
   `P3`                                                  ☰
   `P3RAW`                                               ☰
   `WAIT_CLASS_ID`                                       ☰
   `WAIT_CLASS#`                                         ☰
   `WAIT_CLASS`                                          ☰
   `WAIT_TIME`                                           ☰
   `SECONDS_IN_WAIT`                                     ☰
   `STATE`                                               ☰
   `WAIT_TIME_MICRO`                                     ☰
   `TIME_REMAINING_MICRO`                                ☰
   `TIME_SINCE_LAST_WAIT_MICRO`                          ☰
   `SERVICE_NAME`                                        ☰
   `SQL_TRACE`                                           ☰
   `SQL_TRACE_WAITS`                                     ☰
   `SQL_TRACE_BINDS`                                     ☰
   `SQL_TRACE_PLAN_STATS`                                ☰
   `SESSION_EDITION_ID`                                  ☰
   `CREATOR_ADDR`                                        ☰
   `CREATOR_SERIAL#`                                     ☰
   `ECID`                                                ☰
   `SQL_TRANSLATION_PROFILE_ID`                          ☰
   `PGA_TUNABLE_MEM`                                     ☰ The amount of *tunable* → development/databases/Oracle/architecture/instance/PGA memory, in bytes. `v$process.pga_alloc_mem` minus `v$session.pga_tunable_mem` is the amount of untunable memory.
   `SHARD_DDL_STATUS`                                    ☰
   `CON_ID`                                              ☰
   `EXTERNAL_NAME`                                       ☰
   `PLSQL_DEBUGGER_CONNECTED`                            ☰
  table }

}
{ TODO

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/distinct_values.sql||

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/pdml-pddl-pq_status.sql||

  { Some programs that might be seen connected to Oracle

    gh|oracle-patterns|/Installed/dynamic-performance-views/session/programs.sql||

  }

}
 
sa:

  → development/databases/Oracle/installed/dynamic-performance-views[Oracle Dynamic Performance Views]

  → development/databases/Oracle/SQL-Plus/sqlpath/ses[`ses.sql`] is a small SQL script, intended to be stored at a location that
  → development/databases/Oracle/SQL-Plus/sqlpath[`$SQLPATH`] points at, that displays some rudimentary information about sessions.

  → http://www.adp-gmbh.ch/ora/concepts/session.html

  Joining `v$session` with → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`] to get the
  most recently → development/databases/Oracle/SQL/statement/execution[executed SQL statement].

  → development/databases/Oracle/architecture/processes/background/MMNL
