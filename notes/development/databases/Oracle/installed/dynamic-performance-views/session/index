$ Oracle: V$SESSION
@ v$session

Each record in `v$session` shows information about a «current» → development/databases/Oracle/architecture/session.

{ Search for session by operating system user and/or program name

 `v$sessions` records the operating system user name and the program name with which he/she connects to → development/databases/Oracle in the columns `username` and `program`.

  The Oracle user name (schema) with which a user connected to Oracle is recorded in `username`.

  With this information, it is possible to find an «interesting» session:
  gh|oracle-patterns|/Installed/dynamic-performance-views/session/find-my-interesting-sessions.sql||

}
{ Blocking sessions

  If a sesssion cannot continue with the current execution because it is blocked by another session, the blocked session records the
  instance and session id of the blocking session in the columns `blocking_instance` and `blocking_session`.

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/blocked-blocking.sql||

}
{ audsid #vSession-audsid

  The column audsid can be joined with `→ development/databases/Oracle/SQL/functions/sys_context[sys_context]('userenv','SESSIONID')` to find out which session is the "own one".

  Alternatively, → development/databases/Oracle/installed/packages/dbms/support#dbms_support-mysid[`dbms_support.mysid`] can be used: `where sid = sys.dbms_support.mysid`.

  → development/databases/Oracle/installed/dynamic-performance-views/session/identify-own-session[Identifying one's own session]

}
{ module, action

  The values of the columns `module` and `action` of `v$session` can be set with `→ development/databases/Oracle/installed/packages/dbms/application_info[dbms_application_info].set_module`.
  (See → development/databases/Oracle/installed/dynamic-performance-views/session/longops[`v$session_longops`] for an example).

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/module-action.sql||

  See also → development/databases/Oracle/installed/dynamic-performance-views/session/C-Sharp_set-action-client_identifier_info-module

}
{ module_hash #ora-v-session-module_hash

  It turns out that the value of `module_hash` is equal to
  → development/databases/Oracle/SQL/functions/ora/hash[`ora_hash(module)`]. Thus, the following → development/databases/Oracle/SQL/select[`select` statement] does not return a record:
  gh|oracle-patterns|/Installed/dynamic-performance-views/session/module_hash.sql||

}
{ client_info

  The field client_info can be set with dbms_application_info.set_client_info

  RMAN sets it to something that can be queried with `client_info like '%rman%'`

}
{ sql_exec_id

  As → https://tanelpoder.com/2011/10/24/what-the-heck-is-the-sql-execution-id-sql_exec_id[Tanel Poder] points out, the value of `sql_exec_id` seems to start with 2²⁴ for every `sql_id` when
  Oracle is started.

 `sql_exec_id` is also found in → development/databases/Oracle/installed/dynamic-performance-views/active/session_history[`v$active_session_history`] and
  → development/databases/Oracle/installed/dynamic-performance-views/open_cursor[`v$open_cursor`].

}
{ Joins

  Some → development/databases/Oracle/installed/dynamic-performance-views[v$ views] that can be joined to include:
    • → development/databases/Oracle/installed/dynamic-performance-views/process[`v$process`]
    • → development/databases/Oracle/installed/dynamic-performance-views/transaction[`v$transaction`]
    • → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`]
    • → development/databases/Oracle/installed/dynamic-performance-views/sql/command[`v$sql_command`]
    • → development/databases/Oracle/installed/dynamic-performance-views/px/session[`v$px_session`]

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/joins.sql||

  An attempt to find views that can be joined to `v$session` with a → development/databases/Oracle/SQL/select[select statement]
  is → development/databases/Oracle/installed/dynamic-performance-views/session/joinable[here].

}
{ sid

  Join sid with v$sesstat to get some statistical information for a particular sesssion. 

}
{ sid, serial #vSsession-sid-serial

 `sid` and `serial#` can be used in a statement to to → development/databases/Oracle/SQL/statement/nouns/system/alter#ora-alter-system-end-session[kill a session].

}
{ type

  The value of `type` can be used to identify → development/databases/Oracle/architecture/processes/background[background] (`type='BACKGROUND'`) and foreground (`type='USER'`)
  → development/databases/Oracle/architecture/processes[processes].

}
{ Waiting sessions

  What a session is waiting for can be queried with → development/databases/Oracle/installed/dynamic-performance-views/session/wait

}
{ SADDR

  The value of `saddr` (the session address) might be joined to
    • → development/databases/Oracle/installed/data-dictionary/kgllock[`dba_kgllock`]
    • … ?

}
{ TODO

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/distinct_values.sql||

  gh|oracle-patterns|/Installed/dynamic-performance-views/session/pdml-pddl-pq_status.sql||

  { Some programs that might be seen connected to Oracle

    gh|oracle-patterns|/Installed/dynamic-performance-views/session/programs.sql||

  }

}
 
sa:

  → development/databases/Oracle/installed/dynamic-performance-views[Oracle Dynamic Performance Views]

  → development/databases/Oracle/SQL-Plus/sqlpath/ses[`ses.sql`] is a small SQL script, intended to be stored at a location that
  → development/databases/Oracle/SQL-Plus/sqlpath[`$SQLPATH`] points at, that displays some rudimentary information about sessions.

  → http://www.adp-gmbh.ch/ora/concepts/session.html

  → development/databases/Oracle/architecture/processes/background/MMNL
