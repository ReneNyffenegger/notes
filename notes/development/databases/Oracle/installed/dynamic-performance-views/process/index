$ Oracle: V$PROCESS
@ v$process

code {
select
   prc.*
from
   v$session  ses                          join
   v$process  prc on ses.paddr = prc.addr
where
   ses.sid = sys_context('userenv', 'sid') 
;
code }

gh|oracle-patterns|/Installed/dynamic-performance-views/process/joins.sql||

{ Columns

  table { ll
    `ADDR` ☰
    `PID` ☰
    `SOSID` ☰ OS process or thread identifier. Unique
    `SPID` ☰ OS process identifier 
    `STID` ☰ OS thread identifier (unique on Linux and aix, not unique on Solaris)
    `EXECUTION_TYPE` ☰
    `PNAME` ☰
    `USERNAME` ☰
    `SERIAL#` ☰
    `TERMINAL` ☰
    `PROGRAM` ☰
    → #vProcess-traceid[`TRACEID`] ☰
    `TRACEFILE` ☰
    `BACKGROUND` ☰
    `LATCHWAIT` ☰
    `LATCHSPIN` ☰ Obsolete
    `PGA_USED_MEM` ☰ → development/databases/Oracle/architecture/instance/PGA memory currently used by the process (unit is *bytes*)
    `PGA_ALLOC_MEM` ☰ Allocated PGA memory
    `PGA_FREEABLE_MEM` ☰ Allocated PGA memory that can be freed.
    `PGA_MAX_MEM` ☰ Maximum amount of memory that was used.
    `NUMA_DEFAULT` ☰
    `NUMA_CURR` ☰
    `CPU_USED` ☰
    `CON_ID` ☰
  table }

}

{ traceid #vProcess-traceid

  The column `traceid` is equal to the value used in
code {
→ development/databases/Oracle/SQL/statement/nouns/session#ora-alter-session-set[alter session set] → development/databases/Oracle/adminstration/init-parameters/tracefile_identifier = 'findMe';
code }

}

sa:
  → development/databases/Oracle/installed/dynamic-performance-views/process/memory/detail[`v$process_memory_detail`]

  → development/databases/Oracle/installed/dynamic-performance-views[Oracle Dynamic Performance Views]
