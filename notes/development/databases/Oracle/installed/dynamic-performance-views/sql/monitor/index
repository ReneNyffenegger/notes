$ v$sql_monitor

`v$sql_monitor` provides a subset of the performance statistics (such as elapsed and CPU time, number of IO reads and writes, wait times etc.) that are also recorded in → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`].
Unlike → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`], which accumulates those statistics over the time that an SQL statement is in the library cache, a record in `v$sql_monitor` contains the figures of
*one* → development/databases/Oracle/SQL/statement/execution[execution of an SQL statement].

In order to gather statistics for SQL statements whose execution duration is less than five seconds, the → development/databases/Oracle/SQL/hints[`/*+ monitor */`] hint must be used.

gh|oracle-patterns|/Installed/dynamic-performance-views/sql/monitor/select.sql||

{ «primary key» #sql_monitor-key

  The column `key` is like a «virtual» → development/databases/Oracle/objects/tables/constraints/primary-key[primary key], that is, it identifies a record in `v$sql_monitor`.

  The value of `key` can be used to select the monitored statistics of the execution of an SQL statement from → development/databases/Oracle/installed/dynamic-performance-views/sql/plan/monitor[`v$sql_plan_monitor`].

code {
select
   count(*),
   count(distinct key)
from
   v$sql_monitor;
code }

}

sa:

  → development/databases/Oracle/installed/dynamic-performance-views/sql/plan/monitor[`v$sql_plan_monitor`]

  → development/databases/Oracle/installed/dynamic-performance-views/statistics_level[`v$statistics_level`]

  → development/databases/Oracle/installed/dynamic-performance-views[Oracle Dynamic Performance Views]
