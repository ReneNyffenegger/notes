$ v$active_session_history


{ Join with v$session and v$sql

  This statement joins `v$active_session_history` with → development/databases/Oracle/installed/dynamic-performance-views/session[`v$session`] and
  → development/databases/Oracle/installed/dynamic-performance-views/sql[`v$sql`] in order to display the sampled SQL statements of a given session:

  gh|oracle-patterns|/Installed/dynamic-performance-views/active/session_history/join-session-sql.sql||

}
{ Did given user execute given SQL statement

  The following → development/databases/Oracle/SQL/select[select statement] determins if a given user executed a given → development/databases/Oracle/SQL[SQL statement] within
  the period that is covered by the → development/databases/Oracle/Active-Session-History.

  gh|oracle-patterns|/Installed/dynamic-performance-views/active/session_history/did-user-exec.sql||

}
{ session_state

  The value of `session_state` is either
    • `WAITING` or
    • `ON CPU`

  gh|oracle-patterns|/Installed/dynamic-performance-views/active/session_history/session_states.sql||

}
{ Show covered period

  This query returns the time period that is covered by the Active Session History.

  gh|oracle-patterns|/Installed/dynamic-performance-views/active/session_history/minutes_covered.sql||

}
{ TODO

  { Trace session

    This SQL statement was an attempt to combine long running SQL statements into a single result-row. However, the results seem fishy and I need to go over this
    SQL statement again:

    gh|oracle-patterns|/Installed/dynamic-performance-views/active/session_history/trace-session.sql||

  }
}
sa:
  → development/databases/Oracle/installed/dynamic-performance-views[Oracle Dynamic Performance Views]
