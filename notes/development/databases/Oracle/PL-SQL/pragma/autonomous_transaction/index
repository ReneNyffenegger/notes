$ Oracle PL/SQL: PRAGMA AUTONOMOUS_TRANSACTION

A → development/databases/Oracle/PL-SQL/block that is declared with `pragma autonomous_transaction` executes in its own
→ development/databases/Oracle/architecture/transaction.

The pragma can appear anyware in a procedure's or function's *declarative section* (between the `is` or `declare` and `begin`):
code {
create or replace procedure proc_or_func_name
is
   PRAGMA AUTONOMOUS_TRANSACTION;
begin
   null;
end;
/
code }

Nested blocks cannot have this pragma.

If a block that is declared with `autonomous_transaction` starts a transaction and is left without explicitely commiting or rolling back the transaction, Oracle
throws the error *ORA-06519: active autonomous transaction detected and rolled back*.

sa:

  → development/databases/Oracle/PL-SQL/pragma/autonomous_transaction/uncommited[Uncommited transaction with `PRAGMA AUTONOMOUS_TRANSACTION`]

  → development/databases/SQL/table/trigger[Triggers] must be autonomous to execute DDL or TCL statements.

  → development/databases/Oracle/PL-SQL/pragma/autonomous_transaction/logger[Logger function using `pragma autonomous_transaction`]
