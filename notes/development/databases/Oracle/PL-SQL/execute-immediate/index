$ Oracle PL/SQL: execute immediate
@ execute immediate

`execute immediate` can be used to dynamically execute an → development/databases/Oracle/SQL/statement[SQL statement] that is stored in a variable or a string.

{ into

  The `into` clause → development/databases/Oracle/SQL/select[selects] values *into* variables:

  gh|Oracle-Patterns|/PL-SQL/execute_immediate/into.plsql||

}
{ using out

  `using out` transfers data that is evaluated in an execute immediate statement out to variables:

  Example 1:
  gh|Oracle-Patterns|/PL-SQL/execute_immediate/using_out.plsql||

  Example 2:
  gh|Oracle-Patterns|/PL-SQL/execute_immediate/using_out_2.plsql||

}
{ into rowtype

  Instead of listing each individual variable separatly, the `%rowtype` idiom can be used to select all values of a row:

  gh|Oracle-Patterns|/PL-SQL/execute_immediate/into_rowtype.plsql||

}
{ using in out

  With `using in out`, it is possible to transfer values into and out from an `execute immediate` statement. Thus, it combines `into` and `using out`.

  gh|Oracle-Patterns|/PL-SQL/execute_immediate/using_in_out.plsql||

}
{ using in out nested type extend

  gh|Oracle-Patterns|/PL-SQL/execute_immediate/using_in_out_nested_type_extend.plsql||

}
{ using out (nesteed type)

  gh|Oracle-Patterns|/PL-SQL/execute_immediate/using_out_nested_type.plsql||

}

sa:
  → development/databases/Oracle/PL-SQL

  The → development/databases/SQL-Server[SQL Server] equivalent of `execute immediate` is → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_executesql[`sp_executesql`].
