$ Oracle: PL/SQL package TXT for string (text) related functionality

{ Functions

  table { ll
    `grep_re` ☰ Greps (extracts) substrings that are identified by a → development/regular-expressions[regular expression] from a string. Test case is → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/grep_re[here].
    `is_number` ☰ Checks if a text is a number. Test case is → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/is_number[here]. Consider using → development/databases/Oracle/SQL/functions/type-conversion/validate_conversion[`validate_conversion(expr as number)`] instead of `is_number`
    `is_number_sql` ☰ Same as `is_number`, but returns `1` or `0` rather than a boolean, so that it can be used in → development/databases/Oracle/SQL/statement[SQL statements]. Consider using → development/databases/Oracle/SQL/functions/type-conversion/validate_conversion[`validate_conversion`] instead of `is_number_sql`
    `from_b` ☰ Converts a → development/databases/Oracle/SQL/data-types/boolean[`boolean`] to its textual representation `true`, `false` or `null`.
    `replace_entire_words` ☰ Replaces entire words, but not substrings. Test case is → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/replace_entire_words[here].
    `sprintf` ☰ Test case is → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/sprintf[here].
    `strtok` ☰ Test case is → development/databases/Oracle/PL-SQL/libs/personal/txt/_test/strtok[here].
  table }

}

{ Source code

  { Required types

    gh|PL-SQL-pkg-txt|/types.sql||

  }
  { Specification

    gh|PL-SQL-pkg-txt|/spec.sql||

  }
  { Body

    gh|PL-SQL-pkg-txt|/body.sql||

  }

}
sa:
  Other → development/databases/Oracle/PL-SQL/libs/personal[simple PL/SQL packages] I've written over time.
