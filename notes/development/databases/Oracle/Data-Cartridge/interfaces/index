$ Oracle Data Cartridge Interfaces

{ ODCI Table interface (Pipelined and parallel table functions)

  table { ll
    `ODCITableDescribe` ☰ Optional: used when structure of returned table is dynamic (i. e. table function returns a → development/databases/Oracle/installed/types/any#sys-anyDataSet[`sys.anyDataSet`]). Invoked at SQL statement compile time.
    `ODCITablePrepare` ☰ Optional: used to initialize *scan context parameter* («shared context»?) and additional table function info. This method is passed an instance of an `odciTabFuncInfo` object whose member `retType` is an `anytype` object that seems to have been constructed in `ODCITableDescribe`.
    `ODCITableStart` ☰ Begin retrieving rows. Initializes the *scan context parameters* if (optional) `ODCITablePrepare` is not implemented.
    `ODCITableFetch` ☰ Repeatedly called until desired result set is returned
    `ODCITableClose` ☰ Clean up resources
  table }

  { Scan context

    The *scan context* is the information that is required to be kept between calls of `ODCITableFetch` and
    passed as paramenter to `ODCITableFetch()`

  }
  { Examples

    A simple example for an implementation of the *table interface* is → development/databases/Oracle/Data-Cartridge/interfaces/table[here (multiplication table)].

   *Jon Heller's* github repository → https://github.com/method5/method4[method4].

  }

}
{ Extensible Indexing Interface

  table { ll
   `ODCIGetInterfaces` ☰ Returns the list of names of the interfaces implemented by the type
   `ODCIIndexAlter` ☰
   `ODCIIndexClose` ☰
   `ODCIIndexCreate` ☰ Creates the table to store the index data. The type of the first argument is `ODCIIndexInfo` and stores the index name, owner etc. See also `ODCIIndexDrop`.
   `ODCIIndexDelete` ☰
   `ODCIIndexDrop` ☰ Drops the table that was crated when `ODCIIndexCreate` was invoked.
   `ODCIIndexExchangePartition` ☰
   `ODCIIndexFetch` ☰ Returns a batch of ROWIDs of rows (parameter `ODCIRidList`) that match the operator predicate.
   `ODCIIndexGetMetadata` ☰ Optional, used for the export utility.
   `ODCIIndexInsert` ☰
   `ODCIIndexStart` ☰ Two definitions.
   `ODCIIndexUpdate` ☰
   `ODCIIndexUpdPartMetadata` ☰
   `ODCIIndexUtilCleanup` ☰
   `ODCIIndexUtilGetTableNames` ☰
  table }

}
{ User-Defined Aggregate Functions Interface #odci-intf-aggr

   table { ll
    `ODCIAggregateInitialize` ☰ Initialize the aggregate-context. Called for each aggregation-group to create an instance of the implementation type, returned via an `out` parameter.
    `ODCIAggregateIterate` ☰ Called for each non-`null` input-row.
    `ODCIAggregateMerge` ☰ Merges two aggreagation contexts into a single one (serial or parallel evaluation)
    `ODCIAggregateTerminate` ☰ Clean up and return aggregated value for group.
    `ODCIAggregateWrapContext` ☰
    `ODCIAggregateDelete` ☰ Remove an input-value from the *current group*.
  table }

  See also → development/databases/Oracle/Data-Cartridge/interfaces/aggregation

}
{ User defined ODCI stats function

  table { ll
    `ODCIGetInterfaces` ☰
    `ODCIStatsCollect` ☰
    `ODCIStatsDelete` ☰
    `ODCIStatsFunctionCost` ☰
    `ODCIStatsExchangePartition` ☰
    `ODCIStatsIndexCost` ☰
    `ODCIStatsSelectivity` ☰
    `ODCIStatsTableFunction` ☰
    `ODCIStatsUpdPartStatistics` ☰

  table }

}
{ ODCI Objects

code {
select
   object_type,
   object_name
from
   dba_objects
where
   object_name like 'ODCI%'
order by
   object_type,
   object_name;
code }

  { Types

    table { ll
     `ODCIARGDESC` ☰
     `ODCIARGDESCLIST` ☰
     `ODCIBFILELIST` ☰
     `ODCICOLARRAYVALLIST` ☰
     `ODCICOLINFO` ☰
     `ODCICOLINFOLIST` ☰
     `ODCICOLINFOLIST2` ☰
     `ODCICOLVALLIST` ☰
     `ODCICOMPQUERYINFO` ☰
     `ODCICOST` ☰
     `ODCIDATELIST` ☰
     `ODCIENV` ☰
     `ODCIEXTTABLEINFO` ☰
     `ODCIEXTTABLEQCINFO` ☰
     `ODCIFILTERINFO` ☰
     `ODCIFILTERINFOLIST` ☰
     `ODCIFUNCCALLINFO` ☰
     `ODCIFUNCINFO` ☰
     `ODCIGRANULELIST` ☰
     `ODCIINDEXCTX` ☰
     `ODCIINDEXINFO` ☰
     `ODCINUMBERLIST` ☰
     `ODCINUMBERLIST2` ☰
     `ODCIOBJECT` ☰
     `ODCIOBJECTLIST` ☰
     `ODCIORDERBYINFO` ☰
     `ODCIORDERBYINFOLIST` ☰
     `ODCIPARTINFO` ☰
     `ODCIPARTINFOLIST` ☰
     `ODCIPREDINFO` ☰
     `ODCIQUERYINFO` ☰
     `ODCIRAWLIST` ☰
     `ODCIRIDLIST` ☰
     `ODCISECOBJ` ☰
     `ODCISECOBJTABLE` ☰
     `ODCISTATSOPTIONS` ☰
     `ODCITABFUNCINFO` ☰
     `ODCITABFUNCSTATS` ☰
     `ODCIVARCHAR2LIST` ☰
    table }

  }
  { Packages

    table { ll
      `ODCICONST` ☰
    table }

  }
  { Procedures

    table { ll
      `ODCIANYDATADUMP` ☰
      `ODCICOLINFODUMP` ☰
      `ODCICOLINFOFLAGSDUMP` ☰
      `ODCIENVDUMP` ☰
      `ODCIINDEXALTEROPTIONDUMP` ☰
      `ODCIINDEXCALLPROPERTYDUMP` ☰
      `ODCIINDEXINFODUMP` ☰
      `ODCIINDEXINFOFLAGSDUMP` ☰
      `ODCIPARTINFODUMP` ☰
      `ODCIPARTINFOLISTDUMP` ☰
      `ODCIPREDINFODUMP` ☰
      `ODCIQUERYINFODUMP` ☰
      `ODCISTATSOPTIONSDUMP` ☰
      `ODCITABFUNCINFODUMP` ☰
    table }

  }
  { Tables

    table { ll
      `ODCI_PMO_ROWIDS$` ☰
      `ODCI_SECOBJ$` ☰
      `ODCI_WARNINGS$` ☰
    table }

  }

  { Libraries

    table { ll
       `ODCI_EXTOPT_LIB` ☰
       `ODCI_INDEX_LIB` ☰
       `ODCI_OBJ_LIB` ☰
    table }

  }
  { Synonyms

    table { ll
     `ODCICONST` ☰
    table }

  }

}
