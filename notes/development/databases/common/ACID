
ACID = Atomicity, Consistency, Isolation, Durability
-
(As per other sources, the A stands for Accuracy, the C for Completeness)

A → development/databases/SQL/transaction[transaction] is a sequence of »unit of works« whose sum represents an »indivisible logical unit of work«.
Transactions are fundamental to (distributed) applications.

~Atomicity~: all »units of work« or none.

~Consistency~: a transaction brings the system from one consistent (non contractional) state to another.

~Isolation~: Effects of »unit of work« are not visible outside the transaction until transaction is completed successfully (see also → development/databases/SQL/transaction/isolation-level[isolation level)

~Durability~: After completion, the transaction will survive system failures.

{ No track of data history

  Note: The ACID properties have no notion of *keeping track of data history*.

  However, such a history is often a requirement for
  → development/Data/warehousing[DWHs]: *What was a customer's amount of open orders on the 7th of May 2014?*.

  Also, similar requirements for auditing: *who deleted/updated which record.*

  Such requirements might be met with → development/databases/SQL/temporal-data[support for temporal data] which entered the
  → misc/ISO/9075#sql-2011[SQL standard in 2011].

}
