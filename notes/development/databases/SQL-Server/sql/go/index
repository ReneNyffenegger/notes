$ SQL Server: go
@ go

`go` is neither an → development/databases/SQL-Server/sql[SQL] nor a → development/databases/SQL-Server/T-SQL[T-SQL] statement.
- `go` is the default → development/databases/SQL-Server/sql/batch[SQL batch] terminator in → development/databases/SQL-Server/tools-utilities/sqlcmd, osql or in
→ development/databases/SQL-Server/Management-Studio.

When one of these tools recognize a `go`, they send the *current → development/databases/SQL-Server/sql/batch[batch]* of
→ development/databases/SQL-Server/sql[SQL] and → development/databases/SQL-Server/T-SQL/statements[T-SQL statements] to the SQL Server for execution.


In → development/databases/SQL-Server/tools-utilities/sqlcmd[sqlcmd], the batch terminator can be changed with the → development/databases/SQL-Server/tools-utilities/sqlcmd#sqlcmd-c[-c option].

The → development/databases/SQL-Server/T-SQL/variables/declare#ms-sql-variable-scope[scope] of → development/databases/SQL-Server/T-SQL/variables[variables] ends with a `go`.


{ No effect on transactions #mssql-go-trx

  The following snippet demonstrates that `go` has no effect on → development/databases/SQL-Server/architecture/transaction[transactions].

  gh|about-MSSQL|/sql/go/transaction.sql||

}
{ Executing a batch multiple times

  `go` can be used with an optional number that specifies how often a batch should be executed:
code {
print 'this is printed 10 times';
go 10
code }


}
