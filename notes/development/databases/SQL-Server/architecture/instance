$ SQL Server instance
@ instance

A computer (or generally an → development/databases/SQL-Server installation) can have zero, one or more *instances* of → development/databases/SQL-Server[SQL Server] installed.
-
An instance consists of one or more → development/databases/SQL-Server/administration/database[databases].
-
A database contains one or more *logical file groups*.
-
Each file group has one or more → development/databases/SQL-Server/administration/database/files/data[data files].
-
The data files physically store the → development/Data that is in entrusted to SQL Server.

{ Components

  An instance consists of one or more components:
   • Database Engine Server
   • → development/databases/SQL-Server/Analysis-Services server
   • → development/databases/SQL-Server/Reporting-Services server
  
 It seems that with SQL Server 2017, Reporting Services has become an SQL Server independent component.

 { Database Engine Server

  A *Database Engine Server* consists of one or more → development/databases/SQL-Server/administration/database[databases] where the actual data is stored.

  System level information about an instance is recorded in the *master* → development/databases/SQL-Server/administration/system-databases[system database].

  Each instance is a → Windows/services[Windows service] that runs (a seperate copy) of → Windows/dirs/Program-Files/Microsoft-SQL-Server/MSSQLnn_INSTANCENAME/MSSQL/Binn/sqlservr_exe[`sqlservr.exe`]
  (See also → development/databases/SQL-Server/architecture/services[SQL Server services]).

 }

}
{ Instance names

  At most one of the installed instances is a ~default instance~. The other instances are identified by an ~instance name~. 

  When a client tries to connect to a computer without specifying an instance name, it will be connected to the default instance.

}
{ Instance IDs #mssql-instance-id

 *Instance IDs* are required to locate instance-dependent data in the → Windows/registry and the → Windows/file-system[file system]. These Instance IDs are created
  for each *component* (Database Engine Server, Analysis Services, …) when a new instance is created with *SQL Server Setup* (→ Windows/dirs/Program-Files/Microsoft-SQL-Server/version/Setup-Bootstrap/SQLyyyy#sql-server-bootstrap-setup_exe[`setup.exe`]).

  The (default) instance ID consists of 
    • *ID Prefix* (that identifies the component),
    • a two digit → development/databases/SQL-Server/versions[version] code,
    • an optional underscore and minor version,
    • a dot (`.`)
    • an instance name (which is `MSSQLSERVER` for default instances).

  SQL Server 2016, for example, comes with the following three component prefixes:
  table { ll
    ~Component~ ☰ ~ID Prefix~
    Database Engine ☰ `MSSQL`
    Analysis Services ☰ `MSAS`
    Reporting Services ☰ `MSRS`
  table }

  Examples IDs:
    • `MSSQL14.MSSQLSERVER` is the default instance id of unnamed SQL Server 2017 instance
    • `MSSQL14.TQ84` is the instance id of SQL Server 2017 Database Engine whose instance name is `TQ84`
    • `MSAS14.TQ84` is the instance id of → development/databases/SQL-Server/Analysis-Services 2017 whose instance name is `TQ84`

  The name of an instance id appears in an SQL Server's directory structure under
  → Windows/dirs/Program-Files/Microsoft-SQL-Server/instance-id[`%programfiles%\Microsoft SQL Server\instance-id`].

  This name also appears in the → Windows/registry under the → Windows/registry/tree-structure/key[key]
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Microsoft-SQL-Server/INSTANCE_ID[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server\INSTANCE_ID`].

  Instance names are also recorded in the value of → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Microsoft-SQL-Server#reg-ms-sql-server_InstalledInstances[`InstalledInstances`] under
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Microsoft-SQL-Server[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server`].

  The → Windows/registry/tree-structure/key[sub keys] of → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Microsoft-SQL-Server/Instance-Names[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names`] maintain
  a mapping from *instance names* to instance IDs.

  Setttings that belong to an instance  are stored in the → Windows/registry under
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Microsoft-SQL-Server/_instance-name_[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server\instance name`].

  The instance name of a named instance is returned by → development/databases/SQL-Server/T-SQL/functions/serverproperty[`serverproperty('instancename')`].

  { TODO

code {
exec → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_helpserver[sp_helpserver];
select → development/databases/SQL-Server/T-SQL/variables/atat#mssql-atat-servername[@@servername];
select * from sys.sysservers;
select * from sys.servers;
code }

  }

}
{ Service names

  An SQL server instance is tied to a → Windows/services[service].

  An unnamed instance's service name is `MSSQLSERVER`.

  ? A named instance's service name is `MSSQL*instancename`.

  A service name seems to be returned by → development/databases/SQL-Server/T-SQL/variables/atat#mssql-atat-servicename[`@@servicename`].

}
{ Connecting to another instance with sqlcmd

  The `-S` flag of → development/databases/SQL-Server/tools-utilities/sqlcmd allows to specify the instance to which one wants to connect

code {
c:\> → development/databases/SQL-Server/tools-utilities/sqlcmd -S Hostname/InstanceName
code }

  Within a running sqlcmd → development/databases/SQL-Server/architecture/session[session], the → development/databases/SQL-Server/tools-utilities/sqlcmd#connect[`:connect`] command can be used.

}
{ Identifying process of an instance

  The process (`sqlsrvr.exe`) that is related to an instance can be queried with → development/databases/SQL-Server/T-SQL/functions/serverproperty[`serverproperty('ProcessID')`].

}


sa:
  → development/databases/SQL-Server/architecture

  Compare with the → development/databases/Oracle/architecture/instance[Oracle instance].

  The health and state of an instance can be queried with the so-called → development/databases/SQL-Server/administration/dynamic-management-views-and-functions.
