$ SQL Server: CLR Integration
@ CLR Integration

A limitation of the SQLCLR is that only *static methods* can be called.

{ Enabling CLR Integration

code {
→ development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_configure '→ development/databases/SQL-Server/administration/configuration/server-properties/clr-enabled[clr enabled]', 1
→ development/databases/SQL-Server/sql/go

→ development/databases/SQL-Server/T-SQL/statements/reconfigure
→ development/databases/SQL-Server/sql/go
code }

}
{ Levels of trust

  → Microsoft/dot-net/assembly[Assemblies] can be created in one of the following three levels of trust:
    • `safe`
    • `external_access`
    • `unsafe`

code {
create assembly …
WITH PERMISSION_SET = 'EXTERNAL_ACCESS';
code }

}

sa:

  → development/databases/SQL-Server/administration/schemas/sys/objects/views/assemblies[`sys.assemblies`],
  → development/databases/SQL-Server/administration/schemas/sys/objects/views/assembly_files[`sys.assembly_files`],
  → development/databases/SQL-Server/administration/schemas/sys/objects/views/assembly_references[`sys.assembly_references`],
  → development/databases/SQL-Server/administration/schemas/sys/objects/views/trusted_assemblies[`sys.trusted_assemblies`]

  The → development/databases/SQL-Server/administration/configuration/server-properties/clr-strict-security → development/databases/SQL-Server/administration/configuration/server-properties[server property].

  → development/databases/SQL-Server/T-SQL[T-SQL]

  → Microsoft/dot-net/Common-Language-Runtime[Common Language Runtime]
