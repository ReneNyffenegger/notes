$ SQL Server

SQL Server is part of the *Microsoft data platform*.

→ development/databases/SQL-Server/architecture


→ development/databases/SQL-Server/Data-Tools

→ development/databases/SQL-Server/Migration-Assistant

→ development/databases/SQL-Server/Data-Migration-Assistant

{ Management tools

  → development/databases/SQL-Server/Management-Studio[SQL Server Management Studio]

  → Windows/dirs/Windows/SysWOW64/SQLServerManagernn_msc[SQL Server configuration manager]

  Commandline utilities → development/databases/SQL-Server/tools-utilities/sqlcmd and → development/databases/SQL-Server/tools-utilities/bcp.

  → Windows/PowerShell/language/module[PowerShell module] → development/databases/SQL-Server/PowerShell[SqlServer]

  SQL Server Profiler

  Database Tuning Advisor

  The → Microsoft/dot-net/namespaces-classes/Microsoft/SqlServer/Management[`Microsoft.SqlServer.Management`] namespace provides functionality for SQL Server management.

}
{ Server Mode (?)

  • Multidimensional and Data Mining Mode
  • Tabular Mode
  • PowerPivot Mode

}
{ TODO

  How can I query → development/databases/SQL-Server/administration/database options.

  What is the *guest* account.

  Apparently, the SQL-SMO API allows programmers to administer SQL Server in their applications. 

  → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_who[`sp_who`]

  Show definition of a procedure: `exec sp_helptext 'proc_name'`.

  What is the `sysdiagrams` table? Why does it have to be excluded manually when selecting from `information_schema.tables`?

  → Windows/dirs/Program-Files/Microsoft-SQL-Server/version/DTS/Binn/DTSWizard_exe[`DTSWizard.exe`] (The SQL Server Import and Export Wizard).

  How do I loop over a result set in a query (`for r in (select … ) loop`)?

  Setting columns to `not null`:
code {
alter table TAB alter column COL integer not null;
code }

  How do I extend the length of the returned value in → development/databases/SQL-Server/T-SQL/functions/object_definition[`object_definition()`]? The returned string seems truncated at times.

  → development/databases/SQL-Server/administration/schemas/sys/objects/views/_object_views

  → https://docs.microsoft.com/en-us/sql/t-sql/functions/metadata-functions-transact-sql[Metadata functions]

  → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_executesql[`sp_executesql`]

  How do I comment a table or a column? Apparently with `sp_addextendedproperty`:
code {
execute sp_addextendedproperty 'MS_Description', 
   'This is my table comment',
      'user', @CurrentUser, 'table', 'TABLE_1'
      go
code }
And how will I then get the comment from the → development/databases/SQL-Server/administration/schemas/sys[sys] tables?


code {
if object_id('dbo.my_procedure', 'P') is not null
   drop procedure dbo.my_procedure
go
code }


Apparently, in → development/databases/SQL-Server/tools-utilities/sqlcmd/, commands starting with a colon (such as → development/databases/SQL-Server/tools-utilities/sqlcmd#sqlcmd-listvar[`:listvar`], are executed immediatly, rather than
stored in the execution buffer (which is executed with the next `GO`):
code {
select
:listvar
@@servername
go
code }

code {
c:\> → development/databases/SQL-Server/tools-utilities/sqlcmd
:setvar name Rene
:setvar bla  moreBla
exec dbo.my_procedure $(name), $(bla)
go
code }




Equivalent of → development/databases/Oracle/installed/packages/dbms/lock[`dbms_lock.sleep`]: `waitfor`.

`substring` instead of `substr`, `charindex` instead of `instr`, `isnull` instead of `nvl`, `getdate` instead of `sysdate`, `choose` instead of `decode`, `print` instead
of → development/databases/Oracle/installed/packages/dbms/output[`dbms_output.put_line`], → development/databases/SQL-Server/T-SQL/raiserror[`raisError`] instead of `raise_application_error`.

code {
convert(data-type, expression [, format])
code }

Automatic filling of primary key:
code {
create table tq84 (
  id bigint IDENTITY(1, 1),
  …
);
code }

With `ansi_nulls off` -> `null = null` is true.

  { Create database

code {
create database tq84_db;
create database another_db;
go
code }

code {
use tq84_db
go

use another_db
go
code }

Determine current database name:
code {
select → development/databases/SQL-Server/T-SQL/functions#t-sql-db_name[db_name()]
code }

  { Collation

code {
create database tq84_db
       collate SQL_Latin1_General_CP1_CI_AS;
code }

   Determine → development/Unicode/collation[collation] of a database:
code {
select databasepropertyex('tq84_db', 'collation');
code }

  }


  }
  { VB Script

code {
set oServer = createObject("SQLDmo.SqlServer")  

oServer.loginSecure = true  
oServer.connect "(local)"  

…

oServer.disconnect  
set oServer = nothing  
code }

  Apparently obsoleted in next release.

  }
  { Declaring variables

code {
declare  @var_01    bigint
declare  @var_02       int
declare  @var_03       int           = 42
declare  @var_04    decimal  (18, 6);
declare  @var_05    nvarchar ( max ) = 'abc';
declare  @var_true  bit              =  1   ;
declare   cur_ab    → development/databases/SQL-Server/T-SQL/cursors[cursor]   for select foo, bar from tab;
declare  @tab       table (col_nm int, col_dt datetime); insert into @tab values (…); select * from @tab;
code }

  }
  { Assigning values to variables

  An assignment requires `set` (or `select`):
code {
declare @foo int
declare @bar varchar(10)
set    @foo =   42
select @bar = 'baz'
code }

  }
  { Scope of variables

`go` apparently deletes or removes previously declared variables.

  }
  { Concatenation of strings

code {
@string_one + 'string two'
code }

    If one of the concatenated elements is `null`, then the entire resulting string will be `null`, too. (`concat` might help here)

  }
  { Creating an index if it does not exist

code {
if not exists (
  select *
  from sys.indexes
  where
    name=’IX_TQ84_TAB’ AND
    object_id = OBJECT_ID('[dbo].[TQ84_TAB]')
  )
begin
  create nonclustered index IX_TQ84_TAB
    on dbo.TQ84_TAB(COL_1, COL_2)
end
code }

  }
  { date datatype

code {
set dateformat dmy
code }
Use `exec sp_helplanguage` to determine available date formats.
  
  cast as date:
code {
select * from tab
where
  cast(col_dt as date) = '2017-08-28'
code }
Apparently, `where col_dt = '20170828'` works also.

code {
select
  convert(nvarchar(10), getdate(), 112) as iso_date,
  convert(nvarchar(10), getdate(), 108) as hour_minute_second,
  format (@someDate, 'd', 'en-us'         )  date_en_us,
  format (@someDate, 'd', 'de-de'         )  date_de_de,
  format (@someDate, 'yyyy-MM-dd hh:mm:ss') yyyy_MM_dd__hh_mm_ss
  …
code }

  }
  { DBCC

code {
dbcc checkident ('TABLE_NAME', reseed, 0); -- Check current identity value.
code }

  }
  { T-SQL blocks

code {
begin
declare
  @someVar = 42

  …
end
code }

  { if

code {
if @a = @b
   stmt
code }

code {
if @a = @b
begin
   stmtOne
   stmtTwo
   stmtThree
end
code }

  }

code {
begin try
  …
end try
begin catch
  select
    error_number   (),
    error_severity (),
    error_state    (),
    error_procedure(),
    error_line     (),
    error_message  ()
  …
end catch
code }

  }

  { Service accounts

   SQL Server Express 2012 seemed to install or use the following accounts 
table { ll
   → Windows/services[Service] ☰ → Windows/user-account[Account]
   SQL Server Database Engine ☰ NT Service\MSSQL$SQLEXPRESS
   SQL Server Browser ☰ NT AUTHORITY\LOCAL SERVICE
table } 

  }
  { Data Directories

    Data directories apparently can be specified for
      • System database
      • User databases
      • User database logs
      • Temp databases
      • Temp database logs
      • backups

  }
  { SMO - SQL Server Management Objects

    *SQL Server Management Objects* allow to manage an SQL Server programatically. Thus,
    these object complement the functionality of → development/databases/SQL-Server/Management-Studio[Management Studio].

  }
  { Four part naming syntax

code {
server.database.databaseSchema.databaseObject  
code }

  }
  { Schemas

    Schemas can be owned by any *database principal*.
    -
    A principal can own multiple schemas

    By default, objects in a schema are owned by the *security principal* that owns the schema.
    However, ownership can be transferred with `alter authorization …`.

    There are ten predefined schemas. They have the same name as the built-in database users.
    -
    Of these ten predefined schemas, the following four cannot be deleted:
      • `dbo`, the default schema for a newly created → development/databases/SQL-Server/administration/database[database], owned by the `dbo` user.
      • `guest`
      • `sys`
      • → development/databases/SQL-Server/administration/schemas/INFORMATION_SCHEMA[`INFORMATION_SCHEMA`]


  }

  { Security

    Extensible Key Management (EKM) module holds symmetric or asymmetric keys outside of SQL Server.

    *Transparent Data Encryption (TDE)* must use a symmetric key called the *database encryption key* which is protected by either
      • a certificate protected by the database master key of the master database
      • or by an asymmetric key stored in an EKM.

    *Database master keys* are protected by the *Service Master Key*. The *Service Master Key* is created when SQL Server starts up and is encrypted with the *Windows Data Protection API (DPAPI)*.




  }

}
{ Backing up the database

code {
backup database[$(db)] to disk='$(backup_file)'
code }

}
{ XML

code {
:xml on
select …
code }

}
{ Things to get used to

  If both sides of a division are integers, the result is also an integer. That is `select 9/4` results in 2.

  The → development/databases/SQL-Server/sql/select/aggregate[aggregate function] `avg()`, if applied on an
  → development/databases/SQL-Server/T-SQL/data-types/integer[integer] data type → development/databases/SQL-Server/sql/select/aggregate/avg/beware-of-integers[returns an integer].

}
{ R

  → Windows/dirs/Program-Files/Microsoft-SQL-Server/version/R_SERVER/library/RevoScaleR/rxLibs/x64/RegisterRExt_exe#sql-server-enable-r-package-mgmt

  → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_execute_external_script[`sp_execute_external_script`]

}

sa:

  → development/databases/SQL-Server/sql

  → development/databases/SQL-Server/authentication

  → development/databases/SQL-Server/administration

  → development/databases/SQL-Server/T-SQL[T-SQL]: → development/databases/SQL-Server/T-SQL/functions[functions],
  → development/databases/SQL-Server/T-SQL/procedures[stored procedures].

  → development/databases/SQL-Server/helpers[helpers]

  → development/databases/SQL-Server/architecture/transaction[Transactions]

  → Windows/dirs/Windows/System32/cliconfg_exe[`cliconfg.exe`] is a tool for configuring SQL Server aliases.

  → Windows/dirs/Program-Files-x86/Microsoft-SQL-Server/version/Tools/Binn/SQLPS_exe starts a → Windows/PowerShell session with the *SQL Server PowerShell provider*.

  → development/databases/determine-versions

  The → Windows/registry[registry] key → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/MSSQLServer[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSSQLServer`]

  → development/databases/SQL-Server/versions[versions]

  The → development/databases/OLE-DB/provider for SQL Server is *SQLOLEDB*.

  → development/databases/SQL-Server/editions


  Services:
    • → development/databases/SQL-Server/Reporting-Services (SSRS)
    • → development/databases/SQL-Server/Integration-Services (SSIS)
    • → development/databases/SQL-Server/Analysis-Services (SSAS)


  → Microsoft/dot-net/namespaces-classes/System/Data/SqlClient[`System.Data.SqlClient`] is the → Microsoft/dot-net namespace for the Data Provider for → development/databases/SQL-Server.


links:
   Developer edition of → https://www.microsoft.com/en-us/cloud-platform/sql-server-editions-developers[SQL Server 2016]. Free for
   development and testing.
