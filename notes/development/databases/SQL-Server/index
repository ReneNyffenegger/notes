$ SQL Server

→ development/databases/SQL-Server/architecture

→ development/databases/SQL-Server/Reporting-Services

→ development/databases/SQL-Server/Data-Tools

→ development/databases/SQL-Server/Migration-Assistant

→ development/databases/SQL-Server/Data-Migration-Assistant

{ Management tools

  → development/databases/SQL-Server/Management-Studio[SQL Server Management Studio]

  Commandline utilities → development/databases/SQL-Server/tools-utilities/sqlcmd and → development/databases/SQL-Server/tools-utilities/bcp.

  SQL Server → Windows/PowerShell/index provider

  SQL Server Profiler

  Database Tuning Advisor

}
{ Server Mode (?)

  • Multidimensional and Data Mining Mode
  • Tabular Mode
  • PowerPivot Mode

}

{ TODO

  How can I query → development/databases/SQL-Server/administration/database options.

  What is the *guest* account.

  Apparently, the SQL-SMO API allows programmers to administer SQL Server in their applications. 

  `sp_who`

  What is the `sysdiagrams` table? Why does it have to be excluded manually when selecting from `information_schema.tables`?

  What does → development/databases/SQL-Server/sql/functions/db_name[`db_name()`] return?

  How do I loop over a result set in a query (`for r in (select … ) loop`)?

  Apparently, the first part in an object name (`dbo.foo`) refers to the → development/databases/SQL-Server/administration/schemas[schema] name (for example `dbo`).

  How do I extend the length of the returned value in → development/databases/SQL-Server/sql/functions/object_definition[`object_definition()`]? The returned string seems truncated at times.

  → development/databases/SQL-Server/administration/schemas/sys/objects/views/_object_views

  → https://docs.microsoft.com/en-us/sql/t-sql/functions/metadata-functions-transact-sql[Metadata functions]

  `select @@servername` apparently selects the name of the server.

  How do I comment a table or a column? Apparently with `sp_addextendedproperty`:
code {
execute sp_addextendedproperty 'MS_Description', 
   'This is my table comment',
      'user', @CurrentUser, 'table', 'TABLE_1'
      go
code }
And how will I then get the comment from the → development/databases/SQL-Server/administration/schemas/sys[sys] tables?

code {
use database_name
go
code }

code {
if object_id('dbo.my_procedure', 'P') is not null
   drop procedure dbo.my_procedure
go
code }

code {
create procedure dbo.my_procedure (
      @param_one nvarchar(42),
      @param_two nvarchar(20)
)
as
  set nocount on
  
  select …
  where
    field_one = @param_one and
    field_two = @param_two;

  set nocount off
code }

Apparently, in → development/databases/SQL-Server/tools-utilities/sqlcmd/, commands starting with a colon (such as → development/databases/SQL-Server/tools-utilities/sqlcmd#sqlcmd-listvar[`:listvar`], are executed immediatly, rather than
stored in the execution buffer (which is executed with the next `GO`):
code {
select
:listvar
@@servername
go
code }

code {
c:\> → development/databases/SQL-Server/tools-utilities/sqlcmd
:setvar name Rene
:setvar bla  moreBla
exec dbo.my_procedure $(name), $(bla)
go
code }

code {
select top(5)
  col_1,
  col_2,
  col_3
from
  tab;
go
code }

  { Killing a session

code {
c:\> → development/databases/SQL-Server/tools-utilities/sqlcmd -A
select blocked from sys.dm_exec_requests where blocked <> 0;
go
.... some numbers returned ...
kill 42
go
code }

  }
  { VB Script

code {
set oServer = createObject("SQLDmo.SqlServer")  

oServer.loginSecure = true  
oServer.connect "(local)"  

…

oServer.disconnect  
set oServer = nothing  
code }

  Apparently obsoleted in next release.

  }

  { Declaring variables

code {
declare  @var_01    bigint
declare  @var_02       int
declare  @var_03       int           = 42
declare  @var_04    decimal  (18, 6);
declare  @var_05    nvarchar ( max ) = 'abc';
declare  @var_true  bit              =  1   ;
declare   cur_ab    cursor   for select foo, bar from tab;
code }

  }
  { Creating an index if it does not exist

code {
if not exists (
  select *
  from sys.indexes
  where
    name=’IX_TQ84_TAB’ AND
    object_id = OBJECT_ID('[dbo].[TQ84_TAB]')
  )
begin
  create nonclustered index IX_TQ84_TAB
    on dbo.TQ84_TAB(COL_1, COL_2)
end
code }

  }
  { cast as date

code {
select * from tab
where
  cast(col_dt as date) = '2017-08-28';
code }

  }
  { cursors

code {
declare cur_tq84 cursor for select col_1, col_2 from tab;
open cur_tq84;
fetch next from cur_tq84 into @c1, @c2;
while @@fetch_status = 0
  …
  fetch next from cur_tq84 into @c1, @c2;
end
close      cur_tq84;
deallocate cur_tq84;
code }

  }
  { DBCC

code {
dbcc checkident ('TABLE_NAME', reseed, 0); -- Check current identity value.
code }

  }
  { @@options

    Apparently, `@@options` is stores set or unset options in specific bits.
    -
    `@@options & 512` seems to be true if `set nocount` was turned on and false if it was turned off.

  }


}
{ Backing up the database

code {
backup database[$(db)] to disk='$(backup_file)'
code }

}
{ XML

code {
:xml on
select …
code }

}

sa:
  → development/databases/SQL-Server/authentication

  → development/databases/SQL-Server/administration

links:
   Developer edition of → https://www.microsoft.com/en-us/cloud-platform/sql-server-editions-developers[SQL Server 2016]. Free for
   development and testing.
