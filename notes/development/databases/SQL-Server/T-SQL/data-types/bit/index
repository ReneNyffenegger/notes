$ SQL Server: datatype bit (used for boolean like values)

{ Only three values

  The datatype `bit` can only store three values: `0`, `1` and → development/databases/SQL-Server/sql/null[`null`].

  If a variable whose data type is `bit` is assigned value that is different from `0` and is not `null`, the variable's value will be set to `1`.
  This is demonstrated in the following simple → development/databases/SQL-Server/sql/batch[sql batch]:
  gh|about-MSSQL|/t-sql/data-types/bit/range.sql||

  Although the name of this datatype is `bit`, it needs at least two bits to be able to store these three values.

}
{ No boolean data type

  → development/databases/SQL-Server does not have a real → development/databases/SQL/data-types/predefined/boolean[boolean] → development/databases/SQL-Server/T-SQL/data-types[datatype] (which would be named `bool` or `boolean`).
  In order to store boolean like values in SQL Server, usually, developers resort to the `bit` datatype because of the three values it can store.

  Because SQL server does not have a »real« boolean datatype, it also does not have the constant values `true` and `false`.

}
{ bit data type used in an if statement #mssql-bit-if

  It should be noted that SQL server does not allow an expression that evaluates to a `bit` data type in an
  → development/databases/SQL-Server/T-SQL/statements/if[`if` statement]: it causes the error *Msg 4145 …An expression of non-boolean type specified in a context where a condition is expected…*.

  Thus, the expression needs to explicitly be compared to `1` or `0` or `is null`, as shown in the following example:
  gh|about-MSSQL|/t-sql/data-types/bit/if.sql||

}

sa:

  The → development/databases/Oracle/SQL/data-types/boolean[Oracle boolean data type]

  → development/databases/SQL-Server/T-SQL/data-types

  The `bit` data type was removed from the → misc/ISO/9075#sql-2003[SQL standard 2003].
