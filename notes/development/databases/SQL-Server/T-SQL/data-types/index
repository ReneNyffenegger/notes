$ SQL Server: Data types

Some (all?) SQL Server data types
table { llll
  ~Data type~ ☰ → Microsoft/dot-net/implementations/Framework equivalent type ☰ ~Comment~ ☰ Host file data type
  `bigint` ☰ `Int64` ☰ ☰ `SQLBIGINT`
  `binary` ☰ ☰ ☰ `SQLBINARY`
  → development/databases/SQL-Server/T-SQL/data-types/bit[`bit`]  ☰ ☰ which can be used instead of the non existing → development/databases/SQL/data-types/predefined/boolean[boolean datatype] ☰ `SQLBIT`
  `char` ☰ ☰ ☰ `SQLCHAR`
  → development/databases/SQL-Server/T-SQL/cursors[`cursor`] ☰ ☰ ☰
  → development/databases/SQL-Server/T-SQL/data-types/date[`date`] ☰ ☰ ☰
  → development/databases/SQL-Server/T-SQL/data-types/datetime[`datetime`] ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`DateTime`] ☰ ☰ `SQLDATETIME`
  → development/databases/SQL-Server/T-SQL/data-types/datetime2[`datetime2`] ☰ `DateTime` ☰ ☰
  → development/databases/SQL-Server/T-SQL/data-types/datetimeoffset[`datetimeoffset`] ☰ → Microsoft/dot-net/namespaces-classes/System/DateTimeOffset[`DateTimeOffset`] ☰ ☰
  `decimal` ☰ `SqlDecimal` ☰ ☰ `SQLDECIMAL`
  `double precision` ☰ ☰ A synonym for → development/databases/SQL-Server/T-SQL/data-types/float[`float(53)`] ☰
  → development/databases/SQL-Server/T-SQL/data-types/float[`float`] ☰ `Single` / `Double` ☰  ☰ `SQLFLT8`
  `geography` ☰ ☰ ☰
  `geometry` ☰ ☰ ☰
  `hierarchyid` ☰ ☰ ☰
  `image` ☰ ☰ Binary data with a maximal length of 2³⁰-1 bytes. Compare with `ntext` and `text`. ☰ `SQLBINARY`
  → development/databases/SQL-Server/T-SQL/data-types/integer[`integer`] ☰ → Microsoft/dot-net/namespaces-classes/System/Int32[`Int32`] ☰ abbreviated with `int` ☰ `SQLINT`
  `money`, `smallmoney` ☰ → Microsoft/dot-net/namespaces-classes/System/Decimal[`Decimal`] ☰ ☰ `SQLMONEY`, `SQLMONEY4`
  `nchar` ☰ ☰ ☰ `SQLNCHAR`
  `ntext`, `text` ☰ ☰ Variable-length string-data with maximal length of 2³⁰-1 bytes (`ntext`) or characters (`text`). `ntext` is stored as → development/Unicode, `text` in the → Windows/development/code-page[code page] of the Server. Compare with `image`. ☰ `SQLNCHAR`, `SQLCHAR`
  `numeric` ☰ ☰ ☰ `SQLNUMERIC`
  → development/databases/SQL-Server/T-SQL/data-types/nvarchar[`nvarchar`] ☰ ☰ ☰ `SQLNCHAR`
  → development/databases/SQL-Server/T-SQL/data-types/real[`real`] ☰ `Single` ☰ `real` is a synonym for `float(24)` ☰ `SQLFLT4`
  → development/databases/SQL-Server/T-SQL/data-types/rowversion[`rowversion`] ☰ ☰ Not found in → development/databases/SQL-Server/administration/schemas/sys/objects/views/systypes[`sys.systypes`] ☰
  → development/databases/SQL-Server/T-SQL/data-types/smalldatetime[`smalldatetime`] ☰ `DateTime` ☰ ☰ `SQLDATETIM4`
  smallint ☰ `Int16` ☰ ☰ `SQLSMALLINT`
  → development/databases/SQL-Server/T-SQL/data-types/sql_variant ☰ ☰ This type allows to store values of different data types (Same concept as the → development/languages/VBA/language/datatypes/variant[VBA datatype `variant`]). ☰ `SQLVARIANT`
  → development/databases/SQL-Server/T-SQL/data-types/sysname[`sysname`] ☰ ☰ ☰
  → development/databases/SQL-Server/T-SQL/data-types/table[`table`] ☰ ☰ Not found in → development/databases/SQL-Server/administration/schemas/sys/objects/views/systypes[`sys.systypes`] ☰
  → development/databases/SQL-Server/T-SQL/data-types/time[`time`] ☰ `TimeSpan` ☰ ☰
  `timestamp` ☰ ☰ A deprecated synonym for → development/databases/SQL-Server/T-SQL/data-types/rowversion[`rowversion`] ☰ `SQLBINARY`
  `tinyint` ☰ `Byte` ☰ ☰ `SQLTINYINT`
  → development/databases/SQL-Server/T-SQL/data-types/uniqueidentifier[`uniqueidentifier`] ☰ ☰ A 16-bit → development/UUID-GUID[GUID] ☰ `SQLUNIQUEID`
  → development/databases/SQL-Server/T-SQL/data-types/varbinary[`varbinary`] ☰ ☰ ☰ `SQLBINARY`
  → development/databases/SQL-Server/T-SQL/data-types/varchar[`varchar`] ☰ ☰ ☰ `SQLCHAR`
  → development/databases/SQL-Server/T-SQL/data-types/xml[`xml`] ☰ ☰ ☰
table }

Oracle users: especially note that there is no `number` data type.

A → development/databases/SQL-Server/T-SQL/variables[variable] is associated with a data type with the → development/databases/SQL-Server/T-SQL/variables/declare[`declare` statement].

The column *host file data types* maps data types to those that are used in → development/databases/SQL-Server/tools-utilities/import-export/format-file[format files].

{ TODO

   → development/databases/SQL-Server/T-SQL/functions[T-SQL functions]:
     • → development/databases/SQL-Server/T-SQL/functions/type/id[`type_id(…)`] returns the id for a specific type name 
     • `type_name(…)` returns the unqualified type name of a specified type ID.
     • `columnproperty(…)` returns column or parameter information

}

sa:

  → development/databases/SQL-Server/T-SQL/functions/cast[`cast(…)`] converts a value from one data type to another.
  -
  → development/databases/SQL-Server/T-SQL/functions/convert[`convert()`] returns the value of an expression in a different data type.

  → development/databases/SQL-Server/T-SQL/functions/format[`format()`] to format different data types into a string.

  → development/databases/SQL-Server/administration/schemas/INFORMATION_SCHEMA/columns#information_schema-columns-datatypes

  The → development/databases/SQL-Server/administration/schemas/sys[sys] view → development/databases/SQL-Server/administration/schemas/sys/objects/views/systypes[`sys.systypes`].

  → development/databases/SQL-Server/T-SQL

  → development/databases/SQL-Server/T-SQL/data-types/_date-time[Date and/or time related functions]

  → development/databases/SQL/data-types[SQL data types]

  The → Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version/um/sql_h[header file `sql.h`] that defines
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version/um/sql_h#odb-data-type-codes[ODBC data types].
