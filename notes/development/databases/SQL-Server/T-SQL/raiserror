$ SQL Server - T-SQL : raisError
@ raisError

code {
raisError (
  'some text',
   16,        -- severity
    1         -- state
)
code }

{ raisError, not raiseError!

  The function is spelled wrong: raisError rather than raiseError.

  The following causes: *Msg 102, Level 15, State 1… Incorrect syntax near 'raiseError'*:
code {
raiseError('raiseError should be raisError!!!', 16, 1);
code }

}
{ String concatenation

  In `raiserror`, the message string cannot be concatenated with `+`. Instead, a → development/languages/printf[`printf`] approach needs to be used:
  gh|about-MSSQL|/t-sql/functions/raiserror/string-concatenation.sql||

}
{ Use within functions

  `raisError` cannot be used within user defined functions (*Invalid use of a side-effecting operator 'RAISERROR' within a function*).

}
{ Exiting an SQL script #raisError-exit-sql-script

 *If* loged in with the *sysadmin* role (admin), `raisError()` can be used to completely exit an SQL script so that it also skips
  subsequent → development/databases/SQL-Server/sql/batch[SQL batches]. In order for this to work, the severity level needs to be at least 20 and the `with log` option needs to be used.

  In the following example, an SQL script uses → development/databases/SQL-Server/T-SQL/functions#t-sql-db_name[`db_name()`] to verify if it is connected to a
  → development/databases/SQL-Server/administration/database named `TQ84_DB`. If this is not the case, the executing process is terminated (See generated message).
  -
  Note, that also the next batch which would print `I am in another batch` is not executed (because the session is terminated).

  gh|about-MSSQL|/t-sql/functions/raiserror/exit-SQL-script.sql||

  Because this method requires *sysadmin* privileges, another way to achieve a similar result might be
  → development/databases/SQL-Server/T-SQL/statements/set/noexec[`set noexec on`].

  More details in → https://stackoverflow.com/a/804811/180275[this Stackoverflow answer].

}
sa:
  The → development/databases/SQL-Server/T-SQL/statements/throw[`throw`] statement.

    → development/databases/SQL-Server/T-SQL/error-handling[Error handling]
