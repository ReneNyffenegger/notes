$ SQL Server: dbcc
@ dbcc

{ Clone a database #dbcc-clonedatabase

 `dbcc clonedatabase` creates a new → development/databases/SQL-Server/administration/database and then clones the *structure* of an existing database into the new one.

  code {
dbcc clonedatabase( origdb, newdb )
  code }

  The original and new database need to be on the same → development/databases/SQL-Server/architecture/instance. In order to clone a database to another instance,
  → Windows/dirs/Program-Files-x86/Microsoft-SQL-Server/version/DAC/bin/SqlPackage_exe#SqlPackage-clone-db[`SqlPackage.exe`].

}
{ Check a table's current identity value

  code {
dbcc checkident ('TABLE_NAME', reseed, 0);
  code }

}
{ Enable/disable trace flags

  There are three kinds of trace flags:
    • Query
    • Session
    • Global
  
   One or more flags can be set like so: 
code {
dbcc traceon(trace_flag) ;
dbcc traceon(trace_flag_1, trace_flag_2, …, trace_flag_n);
dbcc traceon(trace_flag, -1); -- Enable trace flag globally
code }

   The current state of trace flags can be displayed like so:
code {
dbcc tracestatus(-1);      -- show all trace flags
dbcc tracestatus(flag_id); -- only one trace flag
code }

   Set flags can be disabled:
code {
dbcc traceoff …;
code }

  Trace flags can also be specified with the `-T` command line option. (A lowercase `-t` sets internal trace flags which is only supported for SQL Server support engineers).

}
{ Misc

  Check current identity value:
code {
dbcc checkident ('TABLE_NAME', reseed, 0);
code }

  Collect performance statistics(?):
code {
dbcc sqlperf
code }

}
