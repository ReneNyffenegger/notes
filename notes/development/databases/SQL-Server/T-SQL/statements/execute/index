$ SQL Server: execute
@ execute

`execute` executes
  • command string
  • character string
  • → development/databases/SQL-Server/T-SQL/procedures/system[system stored procedure]
  • → development/databases/SQL-Server/T-SQL/procedures[user defined stored procedure]
  • CLR stored procedure
  • scalar-valued user defined function
  • extended stored procedure

`execute` can be abbreviated with `exec`.

In → development/databases/SQL-Server/sql/batch[SQL batches], `execute` is *not* required to execute a → development/databases/SQL-Server/T-SQL/procedures[stored procedure] *if* it is the *first* statement in the batch.

{ Execute a character string

 `execute (string)` executes the value of a `string` is executed as (or in) a → development/databases/SQL-Server/sql/batch[batch].

  Note: the parantheses are required.


code {
→ development/databases/SQL-Server/T-SQL/variables/declare[declare]
   @db_name     varchar(20) = db_name(),
   @table_name  varchar(20) = 'a_table';

   execute (
      ' use ' + @db_name +
      ' create table ' + @table_name + '(id integer)'
   )
code }

}
{ Execute a stored procedure

  When executing a → development/databases/SQL-Server/T-SQL/procedures[stored procedure], the parameters must not be enclosed in parantheses.
  In fact, there are no parantheses allowed because with paranthesis, SQL Server tries
  to execute a *character string*.

  gh|about-MSSQL|/t-sql/statements/execute/stored-procedure-without-parantheses.sql||

}

sa:

  The → development/databases/SQL-Server/T-SQL/procedures/system[system stored procedure]
  → development/databases/SQL-Server/administration/schemas/sys/objects/stored-procedures/sp_executesql[`sp_executesql`] that allows to execute a dynamically created SQL statement
  with parameters.

  → development/databases/SQL-Server/T-SQL/statements[T-SQL statements]
