$ SQL: null values

The → misc/ISO/9075[SQL standard] defines a special *null* value for every → development/databases/SQL/data-types[data type].
-
This implies that it is impossible to determine the data type of a null value.

The null value is specifically used for *unknown* → development/Data and indicates that either the correct value for a data-item is unknown or not applicaple.

Because the value is unknown, it implies that null is neither equal nor different to any other value, including another null value: Any standard operator comparisons (`=`, `<>` etc.) with `null` values are false.
-
This gives raise to a *three-valued logic*. (Rule number 3 of Codd's *twelve rules*).

In order to check for null values, the special `is null` operator is needed.

The null value might be denoted by the keyword `null`.

Although a null value is different from every other null value, in a → development/databases/SQL/select/group-by[`group by` aggregation], they form *one* group.

→ misc/ISO/9075/F383[SQL Standard feature F383] specifies a *set column `not null` clause* which, if used, prohibits inserting a null value into that column.

{ Two possible interpretation of null #sql-null-interpretation

  Although the SQL standard explicitely defines null as *unknown*, we find that there are at least two possible interpretations of a null value when encountering it. In addition to viewing a null value as *unknown*, it can also be
  regarded as *none*.

  For example, if we don't know the street number of a customer's address, we insert null into the respective field. However, there are addresses that don't have a street number. So, we also insert null.
  -
  In such a case, it's impossible to tell *unknown* from *none*, and additional flags are required in a → development/databases/SQL/table[table].

  Because null can be interpreted differently, we consider null values a major challenge for → development/Data/preparation.

}
{ Misc

  → development/databases/Oracle considers the empty string to be `null`. (See also → development/databases/Oracle/SQL/null[Oracle SQL: null]).

}
sa:
  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/DBNull[`System.DBNull`] is .NET's way to represent a non-existing value.

  → development/databases/SQL-Server/sql/null[null in SQL Server]

  → development/languages/Python has the value `None` to indicate absence of a value.
