$ SQL: INSERT statement

The purpose of the `insert` statement is to add data (that is: create new records) to a → development/databases/SQL/table[table]. 

{ Insert a single record into a table

code {
INSERT INTO target_table                VALUES (1, 'one');
INSERT INTO target_table (col_1, col_2) VALUES (2, 'two');
code }

}

{ Insert multiple records in one go

  The individual records to be inserted can be separated with commas:

code {
INSERT INTO target_table VALUES
('record'    , 'one'   ),
('another'   , 'record'),
 …;
code }

  Note, that this variant does not work with → development/databases/Oracle/SQL[Oracle SQL] (18c).

}
{ Insert the result of a query #sql-insert-query

  The result of a → development/databases/SQL/select[`select`] statement can be inserted into a table:
code {
INSERT INTO target_table
  SELECT …
  FROM   …
;
code }

}
{ INSERT OR IGNORE

code {
create table tq84_t(id integer primary key, val text unique);

insert or ignore into tq84_t (val) values ('foo');
insert or ignore into tq84_t (val) values ('bar');
insert or ignore into tq84_t (val) values ('foo');
insert or ignore into tq84_t (val) values ('baz');

select * from tq84_t;
code }

 `insert or ignore` is equivalent to `insert on conflict ignore`. 

}

sa:

  A → development/databases/SQL/table/trigger allows to specify a sequence of actions to be executed when one or more records are inserted into a → development/databases/SQL/table.

  → development/databases/SQL/DML[DML statements]
