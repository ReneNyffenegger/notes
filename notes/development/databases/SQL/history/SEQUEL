
{ Abstract


  "
  In this paper we present the data manipulation facility for a
  structured *English query* language (SEQUEL) which can be used for accessing
  data in an integrated relational data base. Without resorting to the concepts
  of bound variables and quantifiers SEQUEL identifies a set of simple operations on tabular structures, which can be shown to be of equivalent power to
  the first order predicate calculus. A SEQUEL user is presented with a consistent set of *keyword English templates* which reflect how people use tables to
  obtain information. Moreover, the SEQUEL user is able to compose these basic
  templates in a structured manner in order to form more complex queries.
  SEQUEL is intended as a data base sublanguage for both the professional programmer and the more infrequent data base user. 
  "

  Emphasis mine.

}
{ Quotes

  "
   As computer systems become more advanced we see a gradual evolution
   from procedural to declarative problem specification. There are two major
   reasons for this evolution. First,
   *a means must be found to lower software costs*
   among professional programmers.
   The costs of program creation, maintenance, and modification have been rising very rapidly.
   The concepts of structured programming have been introduced in order to sinplify
   programming and reduce the cost of software. Secondly, there is an increasing
   need to bring the non-professional user into effective communication with
   a formatted data base.
   Much of the success of the computer industry dedepends on  developing a class of users *other than trained computer specialists.*
   -
  [ … ] 
   -
     These rules are intended to *simplify programming for the professional* and to make
     data base interaction *available to a new class of users*.
  [ … ]
    A brief discussion of this new class of users is in order here. There
   are some users whose interaction with a computer is so infrequent or unstructured
   that the user is unwilling to learn a query language. For these users,
   natural language or menu selection  seem to be the most viable alternatives.
   However, there is also a large class of users who, while they are
   not computer specialists, would be willing to learn to interact with a computer
   in a *reasonably high-level, non-procedural query language*.
   Examples of such users are *accountants, engineers, architects, and urban planners*.
   It is for this class of users that SEQUEL is intended.
   For this reason, SEQUEL emphasizes simple dta structures and operations.


  " [ From the *Instruction* ]

}

links:
  → https://researcher.watson.ibm.com/researcher/files/us-dchamber/sequel-1974.pdf[SEQUEL: A Structured English Query Language (pdf)]
