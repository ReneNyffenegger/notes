$ SQL: aggregate functions

Aggregate functions can be used if either
  • all (non analytical) selected columns consist of aggregate functions, or
  • there is a → development/databases/SQL/select/group-by[`group by`] statement.

An aggregate functions returns one record *per group*. This is different from an → development/databases/SQL/select/analytic[analytic function] which
returns a value for each record (and the value is still computed from multiple records).

The → misc/ISO/9075[SQL standard] defines five aggregate functions:
  • `min`, `max`
  • `count`
  • `sum`
  • `avg`

RDBMS Vendors might provide additional aggregate functions, such as
  • `group_concat(…)`, `listagg()`, `list_agg(…)` (see → misc/ISO/9075/features/T625[SQL feature T625])
  • `stddev(…)`, `variance(…)`

{ HAVING clause

  Values that are produced by an aggregate functions can be filtered from the result set with the `having` clause (not
  the `where` clause).

}

sa:
  → development/databases/SQL/select/group-by[`group by`]

  The → Microsoft/dot-net/namespaces-classes/System/Data/Common/DbCommand#DbCommand-ExecuteScalar[`ExecuteScalar()`] method in the → Microsoft/dot-net class
  → Microsoft/dot-net/namespaces-classes/System/Data/Common/DbCommand[`System.Data.Common.DbCommand`] is a convenient way to query a value from a single-row, single-column result set (in .NET, that is).
