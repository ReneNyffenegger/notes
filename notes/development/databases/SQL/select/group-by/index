$ SQL: GROUP BY

→ development/databases/SQL/select/group-by/aggregate-functions[Aggregate functions].
-
→ misc/ISO/9075/features/T625[`listagg` (SQL Feature T625)] might be considered a special aggregate function: it allows to concatenate strings within groups.

→ development/databases/SQL/select/group-by/having[`having`]

In a `group by` aggregate, all → development/databases/SQL/data-types/null[null values] form *one* group (although each null not equal to every other null!).

{ Appearing and disappearing records

  Create a table without any records:
code {
create table tq84_empty (
   val   integer
);
code }

  The following query returns one record, although `tq84_empty` is still empty:
code {
select
   avg(val)   avg_val,
   const_num
from (
   select
      val,
      42      const_num
   from
      tq84_empty
);
--    AVG_VAL  CONST_NUM
-- ---------- ----------
--                     4
code }

   Adding the `group by` clause to the prior query makes that row disappear again:
code {
select
   avg(val)   avg_val,
   const_num
from (
   select
      val,
      42      const_num
   from
      tq84_empty
)
group by
   const_num;
--
-- no rows selected
code }

  Cleaning up:
code {
drop table tq84_empty;
code }

}


sa:

  → development/databases/SQL/select/group-by/keep-dense_rank[`max(xyz) KEEP (DENSE_RANK … )`]

  The → Microsoft/Power-Query/M-formula/language#m-table-group[formula-M `Table.Group` function].
