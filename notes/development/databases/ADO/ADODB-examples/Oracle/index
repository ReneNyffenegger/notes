$ ADO/VBA examples for Oracle

{ Anonymous block

  The following example executes an anonymous → development/databases/Oracle/PL-SQL/block[PL/SQL block] that takes a string
  (→ development/databases/Oracle/SQL/data-types/varchar2[`varchar2`]) and a number (double) as input parameters, creates a string from these values and then passes
  the result as an out parameter back to the caller.
  gh|about-adodb|/Oracle/anonymous_block.bas||

}
{ Calling a stored procedure

  This example calls a stored procedure.

  First, the procedure to be called must be installed in an Oracle database:
  gh|about-adodb|/Oracle/stored_procedure.sql||

  Then, the procedure can be called:
  gh|about-adodb|/Oracle/stored_procedure.bas||

}
{ Ref cursor

  This example attempts to demonstrate how *ref cursors* can be accessed or used with ADODB.

  First, we need to create some → development/databases/Oracle/objects[objects] in the database:
  gh|about-adodb|/Oracle/ref_cursor_db_objects.sql||

  Then, we can use the ref cursor from VBA:
  gh|about-adodb|/Oracle/ref_cursor.bas||

}
sa:

  → development/databases/ADO/ADODB-examples/Oracle/transaction[Transaction management]

  Getting the → development/databases/ADO/ADODB-examples/Oracle/function-retval[return value of a function].

  Accessing → development/databases/ADO/ADODB-examples/Oracle/output-parameters[output parameters] from a stored procedure.

  Calling a function with → development/databases/ADO/ADODB-examples/Oracle/named-parameters[named parameters]. This might be needed for functions and stored procedures that have
  default values.
