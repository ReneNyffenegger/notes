$ SQLite: create table
@ create table

{ No datatypes necessary #sqlite-create-table-datatype

  When a table is created in SQLite, it is not necessary to specify a → development/databases/SQL/data-types[data type] for its → development/databases/SQLite/tables/columns[columns]
 (although SQLite supports → development/databases/SQLite/datatypes[five data types]).
  -
  The SQLite documentation calls this feature → https://www.sqlite.org/quirks.html#flexible_typing[flexible typing].

  Because a data type is not required for columns, a column can store any of the five SQLite data types, as shown in
  the following example:
  gh|about-sqlite|/tables/no-data-types.sql||

  Although no datatypes are necessary when the table is created, the columns do have a → development/databases/SQLite/tables/columns/type-affinity[type affinity] that determines
  in what type the inserted value is actually stored.

  SQLite 3.37.0 (2021-11-27) added *strict tables* which enforce the data type that is defined in the `create table` statement. The data types that are allowed in such tables are restricted
  to `integer` (or `int`), `real`, `text`, `blob`, `any`:
code {
create table T (
  … 
) STRICT;
code }
  
  See also → development/databases/SQLite/functions/typeof.

}

{ Create table if it doesn't exist

  gh|about-sqlite|/tables/create_if_not_exists.sql||

}
{ Rolling back create table statements

  In → development/databases/SQLite, the creation of a table can be → development/databases/SQLite/transactions#sqlite-rollback-create-table[rolled back].

}
{ Specifying collations for columns #sqlite-create-table-collation

  SQLite allows to specify a → development/Unicode/collation[collation] for columns when a table is created. This influences the case sensitiveness when querying the table:

  gh|about-sqlite|/tables/create-collate.sql||


  See also → development/databases/SQLite/sql/expressions/collate

}

sa:

  The `create table` statement can be displayed in an → development/databases/SQLite/shell[SQLite shell] with the
  → development/databases/SQLite/shell/schema#sqlite-schema-table-name[`.schema TABLENAME`] command.

  → development/databases/SQLite/tables

  → development/databases/SQLite/tables/drop
