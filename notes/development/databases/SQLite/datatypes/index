$ SQLite data types
@ data types

SQLite stores values in one of five → development/databases/SQL/data-types/index[data types]:
  • → development/databases/SQLite/datatypes/integer[integer]
  • → development/databases/SQLite/datatypes/real[real]
  • → development/databases/SQLite/datatypes/text[text]
  • → development/databases/SQLite/datatypes/null[null]
  • → development/databases/SQLite/datatypes/blob[blob]

SQLite does not have an explicit → development/databases/SQLite/datatypes/date-time[date or time] data type.

{ Determining the data type with typeof()

  The data type of a value can be determined with → development/databases/SQLite/functions/typeof[`typeof(val)`].

  The following simple → development/databases/SQLite/sql/select[select statement] selects the type of the five values, each with
  one of the possible types:

  gh|about-sqlite|/datatypes/5.sql||


}
{ No data type specification required for columns in a create table statement

  The → development/databases/SQLite/tables/create[`create table`] statement does not require to
  → development/databases/SQLite/tables/create#sqlite-create-table-datatype[specify a datatype for its columns].

}
{ Ordering values

  When values are ordered with an → development/databases/SQLite/sql/select/order-by[`order by` clause], the data type determines the first level of ordering:
  first are nulls, then numerical values (integer and real), then text and finally blobs.

}
{ int-range.py

  gh|about-sqlite|/datatypes/int-range.py||

}
{ sort.py

  gh|about-sqlite|/datatypes/sort.py||

}

sa:

  → development/databases/SQLite/datatypes/date-time[Storing date and time in Julian days or in the Unix time]

  → development/databases/SQLite/functions/typeof[`typeof(expr)`] returns the data type of the given expression.

  The → development/databases/SQLite/expressions/cast[`cast(…)` expression] can be used to convert values between data types.

  → development/databases/SQLite

  → development/databases/SQL/data-types[SQL data types]
