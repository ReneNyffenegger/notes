$ SQLite: date and time related functions

Although → development/databases/SQLite[SQLite] does not have an explicit → development/databases/SQLite/datatypes/date-time[date or time data type], it
has five functions that are related to date and time:
  • `time     (     expr, …)`
  • `date     (     expr, …)`
  • `datetime (     expr, …)`
  • `julianday(     expr, …)`
  • `strftime (fmt, expr, …)`

The first four differ from the last one that they use a default format for the returned value while `strftime` allows to explicitely define the
returned format.
-
Another difference is that `julianday` returns a value in the → development/databases/SQLite/datatypes[datatype] `real` while `strftime('%J', …)` returns a value
as `text`.

The formats used for the four functions is displayed in the following table:

table { lll
   ~Function~                ☰  ~Default format~     ☰ ~How format is printed~
   `time     (   , str, … )` ☰ `%H:%M:%S`            ☰ `hh:mm:ss`
   `date     (   , str, … )` ☰ `%Y-%m-%d`            ☰ `yyyy-mm-dd`
   `datetime (   , str, … )` ☰ `%H:%M:%S` `%Y-%M-%d` ☰ `yyyy-mm-dd hh:mm:ss`
   `julianday(   , str, … )` ☰ `%J`                  ☰ `dddd.dddd`
table }

Thus, the following to expressions are equivalent:
code {
date('now')
strftime('%Y-%m-%d', 'now')
code }

{ time

  gh|about-sqlite|/functions/date-time/time.sql||

}
{ datetime

  gh|about-sqlite|/functions/date-time/datetime.sql||

}
{ date
  gh|about-sqlite|/functions/date-time/date.sql||
}
{ strftime #sqlite-strftime
  gh|about-sqlite|/functions/date-time/strftime.sql||
}
{ julianday #sqlite-julianday

  gh|about-sqlite|/functions/date-time/julianday.sql||

  See also → Wissenschaft/misc/Bestimmung-von-Daten#julianischer-tag

}


sa:
  → development/databases/SQLite/functions
