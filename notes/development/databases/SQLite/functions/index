$ SQLite functions
@ functions

  → development/databases/SQLite/functions/regexp

  → development/databases/SQLite/functions/substr

  → development/databases/SQLite/functions/typeof

  → development/databases/SQLite/functions/upper-lower

  → development/databases/SQLite/functions/date-time-related[Date and time related functiones]

{ changes #changes

  gh|about-sqlite|/functions/changes.sql||

  Compare with → #total_changes

  In SQLite's → development/databases/SQLite/shell[shell], this function is automatically called if `.changes on` is set.

}
{ random
  gh|about-sqlite|/functions/random.sql||
}
{ randomblob
  gh|about-sqlite|/functions/randomblob.sql||
}
{ replace
  gh|about-sqlite|/functions/replace.sql||
}
{ quote
  gh|about-sqlite|/functions/quote.sql||
}
{ total_changes #total_changes

  gh|about-sqlite|/functions/total_changes.sql||

  Compare with → #changes

  In SQLite's → development/databases/SQLite/shell[shell], this function is automatically called if `.changes on` is set.

}
{ modulo
  gh|about-sqlite|/functions/modulo.sql||
}
{ hex
  gh|about-sqlite|/functions/hex.sql||
}
{ sqlite_version #sqlite_version

 `sqlite_version()` returns a string that indicates the version of the running *SQLite library* (it basically calls `sqlite3_libversion()`.

  gh|about-sqlite|/functions/sqlite_version.sql||

  See also → development/languages/Perl/modules/DBD/SQLite/version[determining SQLite version with `DBD::SQLite`] and the
  → development/languages/Python/standard-library/sqlite3/sqlite_version[same function] in the
  → development/languages/Python/standard-library/sqlite3[Python module `sqlite3`].

}

sa:
  → development/databases/SQLite
