$ SQLite: UPSERT clause

→ development/databases/SQLite does not have a `merge` keyword, instead, it comes with an `upsert` clause (but not an `upsert` keyword) which is an addition to the → development/databases/SQLite/sql/insert[`insert` statement].

The table that the `upsert` clause is used on requires at least a → development/databases/SQLite/tables/constraints/primary-key[primary key] or
→ development/databases/SQLite/tables/constraints/unique[unique] → development/databases/SQLite/tables/constraints[constraint].

{ ON CONFLICT DO NOTHING

  The following example tries to insert the same primary key twice. Because of the `on conflict do nothing` clause, the second insertion of `id=3` causes no error message and
  does not modify the record whose id is 3.

  gh|about-sqlite|/sql/insert/upsert/do-nothing.sql||

}
{ ON CONFLICT DO UPDATE

  With `on conflict(pk_name) do update`, it's possible to override some values in the destination table if a primary key already exists:
  gh|about-sqlite|/sql/insert/upsert/do-update.sql||

}
{ Get ROWID for existing and new records #sqlite-upsert-rowid

  The → development/databases/SQLite/tables/rowid of a table that stores unique values can be selected for new and existing values like so:
code {
drop table if exists tq84_t;

create table tq84_t(id integer primary key, val text not null unique);

insert into tq84_t(val) values ('one'  ) on conflict do update set val = val returning rowid;
insert into tq84_t(val) values ('two'  ) on conflict do update set val = val returning rowid;
insert into tq84_t(val) values ('three') on conflict do update set val = val returning rowid;
insert into tq84_t(val) values ('two'  ) on conflict do update set val = val returning rowid;
insert into tq84_t(val) values ('four' ) on conflict do update set val = val returning rowid;
code }

}

sa:

  The `on conflict` clause (which applies to unique, not null, check and → development/databases/SQLite/tables/constraints/primary-key#sqlite-pk-on-conflict[primary key], but not foreign key,
  → development/databases/SQLite/tables/constraints[constraints]).

  The `→ development/databases/SQLite/sql/replace` statement (which is an alias for `insert or replace`).
