CSV is probably the most common → development/Data/exchange/formats[import and export format] for → development/Data[data] of spreadsheets and → development/databases[databases].

{ Problems with CSV files #problems-with-csv-files)

  Although I like the flexibility, ubiquitousness and ease-of use of CSV files, I find they have the following problems
    • They are not self describing, especially the data types. If CSV files are exchanged between multiple parties, the data types of each field in a CSV file needs to be communicated separately.
    • Even if the data types are known, the data-format can still vary (dot vs. comma in decimal numbers, differing formats *dd/mm/yyyy*, *mm/dd/yyyy*, *yyyy-mm-dd* etc. This is almost always a problem if CSV files are generated from → Microsoft/Office/Excel with different → Windows/development/Internationalization/locale[locales])
    • CSV files cannot be annotated with comments (although I believe there are some standards that address this issue)

  These limitations gave raise to the → development/databases/OLE-DB/provider/Microsoft-Access-database-engine/engines/Text/schema_ini[schema.ini] specification of Microsoft. Such a schema.ini
  file can be used when reading a CSV file with → development/databases/OLE-DB/provider[OLE DB provider] for → development/databases/OLE-DB/provider/Microsoft-Access-database-engine[Microsoft Access database engine] in
  order to specify the characteristics of the CSV files.

}
{ Reasons to use semicolons rather than commas

  Although the C in CSV stands for comma, there are good reasons to use semicolons to delimit fields one from another.

  One reason is that there are many countries where a comma is already used as a decimal seperator (See → #problems-with-csv-files[problems with CSV files]).

  Also, semicolons make more sense to be used as separators because they are less likely to occur in ordinary text than commas.

}
{ Programming languages

  Some function examples in various → development/languages[programming languages] that allow to read/write CSV data:
    • ~R~: → development/languages/R/functions/write_csv[`write.csv`], → development/languages/R/functions/read_csv[`read.csv()`]
    • ~Perl~: → development/languages/Perl/modules/Text/CSV[`Text::CSV`], → development/languages/Perl/modules/DBD/CSV[`DBD::CSV`], → development/languages/Perl/modules/Parse/CSV[`Parse::CSV`]
    • ~Python~: The → development/languages/Python/standard-library/csv[`csv` module], → development/languages/Python/libraries/pandas/read_csv[`pandas.read_csv`] and → development/languages/Python/code-snippets/read-csv[Poor man's CSV reader]
    • The → development/databases/SQL-Server[SQL Server] statement → development/databases/SQL-Server/T-SQL/statements/bulk-insert[`bulk insert`] to insert CSV data into a table and → development/databases/SQL-Server/T-SQL/functions/rowset/openrowset#mssql-openrowset-csv[`openrowset()`] to `select` from a table.
    • The → Windows/PowerShell/command-inventory/noun/CSV[PowerShell command noun `CSV`]

}

sa:
  Oracle → development/databases/Oracle/tools/sql-loader example: → development/databases/Oracle/tools/sql-loader/example-08[load csv file with a header]

  Using the → development/databases/SQL function `regexp_substr` (Oracle) to
  → development/databases/Oracle/SQL/select/misc/csv_to_columns[transform CSV text to individual columns] in a → development/databases/SQL/select[`select` statement].

  Excel:
    • → Microsoft/Office/Excel#xls-connecting-to-data-sources[Connecting to data sources]
    • → Microsoft/Office/Excel/Object-Model/ListObject/connectionString/CSV[This example] tries to demonstrate how a CSV file can be imported into an → Microsoft/Office/Excel/table[Excel table] with → development/languages/VBA[Visual Basic for Application].
    • Loading a CSV with a → Microsoft/Office/Excel/Object-Model/QueryTable/CSV[`queryTable`] object.

  In → Microsoft/dot-net, a CSV file might be parsed with the → Microsoft/dot-net/namespaces-classes/Microsoft/VisualBasic/FileIO/TextFieldParser[`Microsoft.VisualBasic.FileIO.TextFieldParser`] class.

