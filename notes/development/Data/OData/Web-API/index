$ OData Web API


{ Filtering record set

code {
GET WEBAPIROOT/entitysName?$filter=propertyName eq 'searched Value'
code }


   { Not null

   Find entities where a given property is *not null*:

code {
GET WEBAPIROOT/entitysName?$filter=propertyName ne null 
code }

  }
 
  { date values

     Date literals are given in the `yyyy-mm-dd` format:

code {
GET WEBAPIROOT/clients?$filter=birthday='1990-08-28'
code }
  
  }

  { Guids

    → development/UUID-GUID[Guids] are filtered without quoting them.

code {
GET WEBAPIROOT/tq84_entity?$filter=_account_id eq 3E49EA6C-09C5-B791-4989-B35752938F9A
code }

   If using quotes…
code {
GET WEBAPIROOT/tq84_entity?$filter=_account_id eq '3E49EA6C-09C5-B791-4989-B35752938F9A'
code }
   … then the error message is *A binary operator with incompatible types was detected. Found operand types 'Edm.Guid' and 'Edm.String' for operator kind 'Equal'*.

  }
}
{ TOP-N queries

  With `$top=n`, its possible to specify to return the first `n` records only:
code {
GET WEBAPIROOT/tq84_entity?$top=10
code }

}

sa:

  → development/Data/OData/Web-API/_metadata[`/$metadata`]

  Apparently, → development/Data/OData/Web-API/stringmaps[`/stringmaps`] allows to query the mapping from option values to option labels in *option sets*.
