
OData is a protocol, based on → development/web/service/REST[REST], for creating and consuming → development/Data[data]. OData Services are requested with
→ development/web/HTTP[HTTP] `GET` requests.

→ https://services.odata.org/V4/TripPinServiceRW is an OData V4 sample Service.

{ Requesting Data

  A collection of entities:
code {
GET https://Service/path/to/root/ENTITY
code }

  An entity that is identified by its id:
code {
GET https://Service/path/to/root/ENTITY('entity-id')
code }

  Get a specific property
code {
GET https://Service/path/to/root/ENTITY('entity-id')/PROPERTY
code }

  The former request returns a → development/languages/JavaScript/JSON[JSON] object. In order to get the *raw value*, `$value` can be appended
code {
GET https://Service/path/to/root/ENTITY('entity-id')/PROPERTY/$value
code }

  Since properties are *hierachical*, it's possible to access specific parts of an entity using a path through the properties:
code {
GET https://Service/path/to/root/ENTITY('entity-id')/TOP-PROPERTY/SUB-PROPERTY/SUB-SUB-PROPERTY
code }

  Selecting by a criteria (filtering the result set) with the `$filter` keyword:
code {
GET https://Service/path/to/root/ENTITY?$filter=PROPERTY eq 'Value'
code }

  Gettting metadata with `$metadata`. This does not return a JSON object but rather an → development/XML document:
code {
GET https://Service/path/to/root/$metadata
code }


}
sa:
  ORDS: → development/databases/Oracle REST Data Services
  -
  GData: Google Data Protocol
