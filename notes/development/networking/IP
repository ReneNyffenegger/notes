$ Internet Protocol
@ IP

{ Determining own IP address #determine-machines-ip-addr

  { Windows

    In Windows, the IP address can be determined with → Windows/dirs/Windows/System32/ipconfig_exe#ipconfig-exe-get-ip-addr[a combination of `ipconfig.exe` and `findstr.exe`].

    The → Windows/PowerShell[PowerShell] script → development/tools/scripts/personal/ip_ps1[`ip.ps1`] prints IP addresses of local non-loopback adapters.

  }
  { Linux
code {
dig +short myip.opendns.com @resolver1.opendns.com
code }

   Yet, this approach does not seem to work behind → development/networking/NAT.

   See also → http://unix.stackexchange.com/questions/22615/how-can-i-get-my-external-ip-address-in-bash

  }
  { Virtual machine #ip-addr-in-vm

    One of the following to commands should report the public IP address if executed in a → hardware/virtual-machine.
code {
$ → tools/cURL[curl] ipconfig.me
$ → tools/cURL[curl] ipconfig.me/ip
code }

    Sometimes, it's necessary to get the IP4 address:

code {
$ → tools/cURL[curl] -4 ipconfig.me/ip
code }
  }

}
{ IPv6 #ipv6

  See also  → Linux/networking/IPv6[Linux networking IPv6]

}

sa:
 `→ Linux/kernel/source/include/uapi/linux/in_h`
