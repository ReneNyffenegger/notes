
The *goal* of continuous intergration is to *eliminate integration hell*. For that end, a CI solution regularly builds and tests source code. This allows to catch bugs
early in the development cycle when they're easier and faster to fix.

→ development/Software-design/methods/XP[XP]: use in combination with automated test scripts.

Distinguish from *frequent integration*.

A ~build server~ runs the unit tests automatically and periodically or after a commit. It returns the result to the developer.

{ CI software

  • Abstruse CI
  • AnthillPro
  • Apache Continuum
  • Apache Gump
  • AppVeyor
  • → Microsoft/Azure/products/Pipelines
  • Bamboo
  • Buddy
  • BuildBot
  • BuildMaster
  • CABIE
  • CircleCI
  • CruiseControl
  • CruiseControl.NET
  • Drone
  • GoCD
  • Jenkins-Hudson
  • OpenMake Software
  • Semaphore
  • Travis CI
  • TeamCity
  • Team Foundation Server
  • Vexor

}

{ TODO

  Relationship to
    • continuous *delivery*,
    • continuous *design* and
    • continuous *testing*.
 
}
