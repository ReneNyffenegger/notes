$ Scripts

→ development/tools/scripts/personal/admin_bat[admin.bat] become superuser (admin) in → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`].

→ development/tools/scripts/personal/cb_bat[cb.bat] execute content of the *clipboard* in → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`].

→ development/tools/scripts/personal/cdcb_bat[cdcb.bat] `cd` to the path that is in the *clipboard*.

→ development/tools/scripts/personal/cdhom_bat[cdhom.bat] `cd` into the home directory (which is → development/environment-variable#userprofile[%userprofile%] on Windows).

→ development/tools/scripts/personal/cdm_bat[cdm.bat]. See → development/tools/scripts/personal/cdms_bat[cdms.bat]

→ development/tools/scripts/personal/cdms_bat[cdms.bat], executed as `cmds SomeName`. It assigns `SomeName` with the current directory. Later,
→ development/tools/scripts/personal/cdm_bat[cdm.bat] allows to cd back to this directory (`cdm SomeName` ). cdm stands for cd to mark, cdms stands for cd mark set.

→ development/tools/scripts/personal/cdvimf_bat[cdvimf.bat] `cd` to the root directory of vim files.

→ development/tools/scripts/personal/connect_Cisco_AnyConnect uses the
→ development/languages/Perl/modules[Perl module] → development/languages/Perl/modules/Win32/GuiTest[Win32::GuiTest] to connect to a
*Cisco AnyConnect Secure Mobility Client*.

→ development/tools/scripts/personal/createImage_pl[createImage.pl] can be used to create simple images.

→ development/tools/scripts/personal/cv_pl[cv.pl] prints the content of the clipboard. Mnemonic: Ctrl-V.

→ development/tools/scripts/personal/dc_bat[dc.bat] `cd` into a directory, then show its content with `dir`.

→ development/tools/scripts/personal/dos-or-unix_pl[dos-or-unix.pl] Quickly and easily determine if a file has DOS (`0x0d 0x0a`) or Unix (`0x0a`) line endings.

→ development/tools/scripts/personal/dt[dt] simple date arithmetic in a shell.

→ development/tools/scripts/personal/dot2_bat[dot2.bat] processes a → tools/Graphviz[Graphviz / dot] file and opens the result.

→ Windows/dirs/_Recycle_Bin#ps-empty-recycle-bin[`empty-recycleBin.ps1`] is a → Windows/PowerShell script to empty the → Windows/dirs/_Recycle_Bin[Windows recycle bin].

→ development/tools/scripts/personal/ejusb_bat[ejusb.bat]

→ development/tools/scripts/personal/fb_bat[fb.bat]

→ development/tools/scripts/personal/ff_ftp_bat[ff_ftp.bat] opens a → development/web/browser/Firefox browser with a `ftp://` url and a username-password tuple whose values are stored in certain
→ Windows/development/environment-variables.

→ development/tools/scripts/personal/find-equal-files_pl[find-equal-files.pl] a script that creates MD5 hashes of files in a directory and then finds equal files, even if they are named differently.

→ development/tools/scripts/personal/find_large_directories_pl[find_large_directories.pl]: Iterates the sub directories of a given directory and prints the sizes of these subdirectories.
Can be used to find directories that occupy large portions on a file system.

→ development/languages/VBA/Useful-object-libraries/MSXML/XMLHTTP/get_vbs[`get.vbs`]: do simple `GET` → development/web/HTTP requests with
→ development/languages/VBScript.

→ development/tools/scripts/personal/ghr_pl[ghr.pl] is the script I use to automatically pull or clone my 
→ https://github.com/ReneNyffenegger?tab=repositories[github repostiories]
when I use a new computer or a computer on which I haven't worked for time.


→ development/tools/scripts/personal/git-pull_pl[git-pull.pl]

→ development/tools/scripts/personal/git-push_pl[git-push.pl] does a → development/version-control-systems/git/commands/push[git push]
to the »correct« server. Requires the → development/environment-variable[envorinment variable] `TQ84_GITHUB_PW` to be
set with the → development/security/password[password] of the remote repository. In order to automatically set
this password, → development/tools/scripts/personal/gitp_bat[gitp.bat] can be used (on → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`], that is).

→ development/tools/scripts/personal/gitac1[gitac1]

→ development/tools/scripts/personal/gitac1_bat[gitac1.bat]

→ development/tools/scripts/personal/gitl_bat[gitl.bat]

→ development/tools/scripts/personal/gitp_bat[gitp.bat] Sets the environment variable TQ84_GITHUB_PW to be used along with → development/tools/scripts/personal/git-push_pl[git-push.pl].

→ development/tools/scripts/personal/gitp_sh[gitp.sh]

→ development/tools/scripts/personal/gits_bat[gits.bat]

→ development/tools/scripts/personal/hex_dump_pl[hex_dump.pl] Show line endings (`0x0A` and/or `0x0D`). Compare with → development/tools/scripts/personal/show-newline_pl[show-newline.pl].

→ development/tools/scripts/personal/highlight_pl is a perl script that reads from stdin and writes the necessary → Linux/shell/ANSI-escape-sequences to print ~ERROR~ in red
  and ~WARNING~ in yellow.

→ development/tools/scripts/personal/kill-procs_pl[kill-procs.pl]

→ development/tools/scripts/personal/komm[komm]

→ development/tools/scripts/personal/komm_bat[komm.bat]

→ development/tools/scripts/personal/make-targets

→ development/tools/scripts/personal/split-merge-file#merge-file[merge-file.pl] merge files that were split with → development/tools/scripts/personal/split-merge-file#split-file[split-file.pl].

→ development/tools/scripts/personal/log-moz starts firefox and then has it log → development/web/HTTP connections.

→ development/tools/scripts/personal/move-dl_pl[move-dl.pl]

→ development/tools/scripts/personal/move-photos_pl[move-photos.pl]

→ development/tools/scripts/personal/mp3-prep[mp3-prep]

→ development/tools/scripts/personal/mp3SetTag_pl[mp3SetTag.pl]

→ development/tools/scripts/personal/mp3SetTag_py[mp3SetTag.py]

→ development/tools/scripts/personal/mnt[mnt]: be easy on the eye when showing → Linux/shell/commands/mount[mounts].

→ development/tools/scripts/personal/mvnd[mvnd]

→ Windows/dirs/Windows/System32/netsh_exe/wlan/connect-from-command-line[`new-wlan.bat`] allows to connect to a new WLAN (that is: without profile) from a Windows command line.

→ development/tools/scripts/personal/notify_me_at_bat[notify_me_at.bat]

→ development/tools/scripts/personal/nots[nots]

→ development/tools/scripts/personal/nots_bat[nots.bat]

→ development/tools/scripts/personal/op-reg-at_pl[`op-reg-at.pl`]: A → development/languages/Perl[Perl] script that is given a → Windows/registry[registry] path and then changes the registry so that
→ Windows/dirs/Windows/regedit_exe[`regedit.exe`] will open the
given → Windows/registry/tree-structure/key[registry key]. Compare with → development/tools/scripts/personal/regat_bat[`regat.bat`]

→ development/tools/scripts/personal/regQuery_bat[`regQuery.bat`] allows to query the value under a given → Windows/registry[registry] key in → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`].

→ Windows/dirs/Windows/System32/rundll32_exe/url_bat[`url.bat`] uses → Windows/dirs/Windows/System32/rundll32_exe[`run.dll`] to
open an → development/web/URI-URL-URN-IRI-URC#url[URL] from
→ Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`].

→ development/tools/scripts/personal/p8[p8]

→ development/tools/scripts/personal/p8_bat[p8.bat] uses → Windows/dirs/Windows/System32/PING_EXE[`ping.exe`] to quickly find out if there is a connection to the internet.

→ development/tools/scripts/personal/paste_pl[paste.pl]

→ development/tools/scripts/personal/pathes_pl#pathes_pl[pathes.pl] and → development/tools/scripts/personal/pathes_pl#paths[`paths`] (in a → Linux/shell[Unix shell]) show each directory of the 
→ development/environment-variable#path[%PATH%] (or `$PATH`) on a seperate line.

→ development/tools/scripts/personal/pc[pc],
→ development/tools/scripts/personal/pc_pl[pc.pl] and
→ development/tools/scripts/personal/pc_bat[pc.bat]
to copy the current path into the clipboard.

→ development/tools/scripts/personal/profile_ps1[profile.ps1] is my startup script for powershell.

→ development/tools/scripts/personal/proxy_pl[proxy.pl]

→ development/tools/scripts/personal/pyws_bat[pyws.bat]

→ development/tools/scripts/personal/rec_pl[rec.pl] is a → development/languages/Perl[Perl] script that recursively does *stuff* that I frequently use. *stuff* is determined by the command line options to the script.

→ development/tools/scripts/personal/regat_bat[`regat.bat`]: a batch script that is given a → Windows/registry[registry] key and then opens the registry at the specified key with
→ Windows/dirs/Windows/regedit_exe[`regedit.exe`].

→ development/tools/scripts/personal/aqua_bat[aqua.bat],
→ development/tools/scripts/personal/red_bat[red.bat],
→ development/tools/scripts/personal/blue_bat[blue.bat],
→ development/tools/scripts/personal/green_bat[green.bat] and
→ development/tools/scripts/personal/black_bat[black.bat] can be used to set the background color of → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`].

→ development/tools/scripts/personal/rpm2cpio_sh[rpm2cpio.sh] is able to create a → Linux/shell/commands/cpio file from an → Linux/rpm[rpm file].

→ development/tools/scripts/personal/show-newline_pl[show-newline.pl] Show line endings (`0x0A` and/or `0x0D`). Compare with → development/tools/scripts/personal/hex_dump_pl[hex_dump.pl].

→ development/tools/scripts/personal/split-merge-file#split-file[split-file.pl]: split (huge) files into smaller files so that they can be more easily transported. After transporting,
they can be merged again with → development/tools/scripts/personal/split-merge-file#merge-file[merge-file.pl].

→ development/tools/scripts/personal/sqlcl_bat[sqlcl.bat]

→ development/tools/scripts/personal/svnlu_pl[svnlu.pl] to be exectued like so: `svnlu.pl regexp` basically issues an `svn list` and finds the files that match `regexp`.
  Each file can be selected for update by pressing «y» or «j». A «q» prematurly exits the script. Every other key skips the file.

→ development/tools/scripts/personal/toggle-sound_vbs[toggle-sound.vbs]

→ development/tools/scripts/personal/vsenv_bat[`vsenv.bat`] to set the → Windows/development/Visual-Studio/environment-variables[environment variables for Visual Studio].

→ development/tools/scripts/personal/websrv[websrv]

→ development/tools/scripts/personal/websrv_bat[websrv.bat]

→ development/languages/Perl/modules/_scripts_/whichpm[whichpm] is a cross-platform script that locates installed  → development/languages/Perl/modules[Perl modules] by their package name.
(Copyright by Michael Klement)

→ development/tools/scripts/personal/wifi-start[wifi-start]: stop the current wifi connection and start the given profile.

→ development/tools/scripts/personal/wlan_bat[wlan.bat]

→ development/tools/scripts/personal/wp[wp] is a simple → development/languages/Perl[Perl] script that uses
  the → development/languages/Perl/modules/WWW/Wikipedia/[WWW::Wikipedia] → development/languages/Perl/modules/[module] to quickly display
  a wikipedia article on a → Linux/shell[shell].

→ development/tools/scripts/personal/yt2mp3_bat and → development/tools/scripts/personal/yt2mp3_ps1 are scripts that use → Windows/after-installing#after-installing-windows-youtube-dl[Download `youtube-dl.exe`] to convert Youtube movies to mp3.


