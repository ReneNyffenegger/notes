$ regat.bat

`regat.bat` is given a → Windows/registry[registry] key and then opens the registry at the specified key with `regedit.exe`.

The script replaces `HKCU` with → Windows/registry/tree/HKEY_CURRENT_USER[`HKEY_CURRENT_USER`], `HKLM` with → Windows/registry/tree/HKEY_LOCAL_MACHINE[`HKEY_LOCAL_MACHINE`] and
`HKCR` with → Windows/registry/tree/HKEY_CLASSES_ROOT[`HKEY_CLASSES_ROOT`].

If `regat` is called with the special parameter `env`, it opens the registry at → Windows/registry/tree/HKEY_CURRENT_USER/Environment[`HKEY_CURRENT_USER\Environment`].

If the script is given the special option `-m`, it opens *another* regedit Windows. Thus, effectively, without `-m` it actually passes `/m` to `regedit.exe`.

A potentially running process of `regedit.exe` needs is killed with → Windows/dirs/Windows/System32/taskkill_exe[`taskkill.exe`] in order for `regedit` to show the desired key.

gh|scripts-and-utilities|/regat.bat||

{ Windows 10

  This script became a bit less important in Windows 10 because → Windows/registry/regedit[regedit] now allows to paste a path to a registry key into the header.

}

sa:
  → development/tools/scripts/personal/regQuery_bat[`regQuery.bat`] ban be used to query the → Windows/registry[registry] in → Windows/cmd-exe[cmd.exe] for a specific value under a given key.

  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Applets/Regedit/LastKey[`HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit`: LastKey]

  → development/tools/scripts/personal/op-reg-at_pl[`op-reg-at.pl`]: a → development/languages/Perl[Perl] script that does almost the same thing.

links:
  Microsoft offers → https://docs.microsoft.com/en-us/sysinternals/downloads/regjump[`regjump.exe`], a utility that also opens the registry at a given path. Apparently, the utility is originally written by
  SysInternals.
