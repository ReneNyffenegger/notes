
Distributing software should not be hard. Docker tries to achieve that goal.

A → development/tools/Docker/image[Docker image] defines what software is included and how it will be run.

A → development/tools/Docker/container[Docker container] is a running instance of an image.
-
A container is *not* installed.

A claim of Docker is that an application that runs on Docker runs on *every* Docker installation, everywhere.

{ Dockerfiles

  → development/tools/Docker/Dockerfile[Dockerfiles] usually are small files, perhaps 5 to 30 lines.

  A Dockerfile is used to create a →#docker_image.

}

{ Unable to login to docker, TLS-enabled daemon without TLS? 

  Problem was: user was not added to the `docker` group.

}

{ Docker image #docker_image

  Docker images are, by default, located under → Linux/fhs/var/lib/docker.
  
rem {
  The docker image can be used to run as many containers as one wants.
rem }

}

{ Remove 'old' containers

code {
docker ps -a
docker rm ......
code }

}
{ Check if installation is working

code {
$ → development/tools/Docker/commands/run hello-world
…
Hello from Docker!
This message shows that your installation appears to be working correctly.
…
code }

  { Error message: Got permission denied while trying to connect to the Docker daemon socket … #docker-err-perm-denied

    A possible reason for the error message *Got permission denied while trying to connect to the Docker daemon socket at unix:///→ Linux/fhs/var/run/docker_sock* is that the user trying to execute a
    → development/tools/Docker/commands[docker command] is not in the `docker` group.
    -
    In this case, adding the current user (`$USER`) to this group will solve the issue:
code {
→ Linux/shell/commands/sudo Linux/shell/commands/usermod -aG docker $USER
code }

    When the user logs in again (or changes to the docker group with `newgrp - docker`), the docker commands should now be executable.

  }

}
{ quay.io

  →http://quay.io[quay.io] is like a github for Docker images.

}
{ Installing

Apparently, docker can be installed with
code {
curl -sSL https://get.docker.com | sh
code }
or
code {
→ tools/wget -qO- https://get.docker.com | sh
code }

On Ubuntu:
code {
sudo apt-get install docker.io
code }


}
{ TODO

  A user should be in the docker → Linux/group:
code {
sudo → Linux/shell/commands/usermod -aG docker
code }

  Apparently, there's a docker service that should/must/could be started:
code {
sudo service docker start
code }

  How does Docker relate to → Linux/package-managers/Snap?

  { scratch

code {
$ → development/tools/Docker/commands/pull scratch
Using default tag: latest
Error response from daemon: 'scratch' is a reserved name
code }

  }
  
}

sa:

  → development/tools/Docker/commands[Docker command line commands]

  → development/tools/Docker/Windows

 `→ development/tools/Docker/dockerd`

 `→ Linux/fhs/etc/default/docker`
