$ docker run

`docker run` creates a → development/tools/Docker/container[container] and runs a command in it.

{ -p / -P

  TODO: see the → development/tools/Docker/Dockerfile#dockerfile-EXPOSE[Dockerfile `EXPOSE` command].

}
{ -i -t (-it)

 `-i` stands for *interactive* and keeps → development/stdin-stdout-stderr[STDIN] open even if not attached.

 `-t` allocates a pseudo → Linux/TTY.

  I am not sure what this all means, but it turned out that I had to specify both flags to run the Windows image
code {
C:\> docker run -i -t mcr.microsoft.com/windows:1809 → Windows/dirs/Windows/System32/cmd_exe[cmd.exe]
code }
 

}
{ -v

  `-v hostPath:imagePath` allows to access a host directory or file from a container, see → development/tools/Docker/commands/run/volume[`-volume`].

}
{ Got permission denied while trying to connect to the Docker daemon socket at …

code {
$ docker run hello-world
docker: Got permission denied while trying to connect to the Docker daemon socket at …

$ groups
rene

$ sudo → Linux/shell/commands/usermod -aG docker $USER
$ newgrp docker
$ groups
docker rene

$ docker run hello-world
…
code }

}
