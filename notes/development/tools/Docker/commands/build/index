$ docker build

`docker build` creates a new → development/tools/Docker/image from a → development/tools/Docker/Dockerfile and a *context*.

code {
docker build [OPTIONS] PATH | URL | -
code }

{ Options

  table { lll

   `--add-host list`  ☰                 ☰ Add a custom host-to-IP mapping (host:ip)
   `--build-arg list`  ☰                ☰ Set build-time variables
   `--cache-from strings`  ☰            ☰ Images to consider as cache sources
   `--cgroup-parent string`  ☰          ☰ Optional parent cgroup for the container
   `--compress`  ☰                      ☰ Compress the build context using gzip
   `--cpu-period int`  ☰                ☰ Limit the CPU CFS (Completely Fair Scheduler) period
   `--cpu-quota int`  ☰                 ☰ Limit the CPU CFS (Completely Fair Scheduler) quota
   `--cpu-shares int`  ☰        `-c`    ☰ CPU shares (relative weight)
   `--cpuset-cpus string`  ☰            ☰ CPUs in which to allow execution (0-3, 0,1)
   `--cpuset-mems string`  ☰            ☰ MEMs in which to allow execution (0-3, 0,1)
   `--disable-content-trust`  ☰         ☰ Skip image verification (default true)
   `--file string`  ☰           `-f`    ☰ Name of the Dockerfile (Default is `PATH/Dockerfile`)
   `--force-rm`  ☰                      ☰ Always remove intermediate containers
   `--iidfile string`  ☰                ☰ Write the image ID to the file
   `--isolation string`  ☰              ☰ Container isolation technology
   `--label list`  ☰                    ☰ Set metadata for an image
   `--memory bytes`  ☰          `-m`    ☰ Memory limit
   `--memory-swap bytes`  ☰             ☰ Swap limit equal to memory plus swap: `-1` to enable unlimited swap
   `--network string`  ☰                ☰ Set the networking mode for the RUN instructions during build (default "default")
   `--no-cache`  ☰                      ☰ Do not use cache when building the image
   `--pull`  ☰                          ☰ Always attempt to pull a newer version of the image
   `--quiet`  ☰                 `-q`    ☰ Suppress the build output and print image ID on success
   `--rm`  ☰                            ☰ Remove intermediate containers after a successful build (default true)
   `--security-opt strings`  ☰          ☰ Security options
   `--shm-size bytes`  ☰                ☰ Size of `→ Linux/fhs/dev/shm`
   `--tag list`  ☰              `-t`    ☰ Name and optionally a tag in the `name:tag` format
   `--target string`  ☰                 ☰ Set the target build stage to build.
   `--ulimit ulimit`  ☰                 ☰ Ulimit options (default [])

  table }

}
{ -f

  `-f` is used to locate a → development/tools/Docker/Dockerfile that is at a non-default location.

  Traditionally, `docker build` tries to find a Dockerfile at the root of a context with the name `Dockerfile`.

}

sa:
  → development/tools/Docker/commands
