$ docker: run and exec

The following `→ development/tools/Docker/commands/run` command creates a → development/tools/Docker/container named *cont-xyz* and runs a shell (`/bin/sh`) in it:
code {
$ docker run --name cont-abc --rm -i -t busybox /bin/sh
code }

In another shell on the host, `→ development/tools/Docker/commands/exec` is used to run another shell in the *same container*:
code {
$ docker exec -i -t cont-abc /bin/sh
code }

In one of these created shells, a file is created using `→ Linux/shell/commands/touch`:
code {
/ # → Linux/shell/commands/touch /tmp/touchee
code }

Because the other shell is in the same container, it can see the touched file:
code {
/ # → Linux/shell/commands/ls -l /tmp/
total 0
-rw-r--r--    1 root     root             0 Jan 13 19:38 touchee
code }
