$ Encoding and decoding base 64 with c++

  `base64.cpp` contains two simple C++ functions to encode and decode string from/to → development/Base64: `base64_encode` and `base64_decode`.

  `test.cpp` can be used to test the functionality.

  The source code is on → https://github.com/ReneNyffenegger/cpp-base64[github].

{ base64.cpp

  gh|cpp-base64|/base64.cpp||

}
{ base64.h

  gh|cpp-base64|/base64.h||

}
{ test.cpp

  This is a simple test case that encodes and decodes a few strings and then checks if both versions are equal. Additionally, it also checks the string's decoded version with their expected value.

  The program exits with 1 if the test is not successful and with 0 otherwise.

  gh|cpp-base64|/test.cpp||

  See also → https://github.com/ReneNyffenegger/cpp-base64/blob/master/measure-time.cpp[`measure-time.cpp`].

}
{ Contributions

  I am thankful for the following contributions to this libary.

  → https://github.com/minastaros[minastaros] for improving the code and adding test cases. (Version `1.01.00`)

  → https://github.com/sea-kg[Evgenii Sopov] provided → development/Base64/wsjcpp_yml[`wsjcpp.yml`]. This file is apparently used for or as a *source file manager*.

  → https://github.com/khiemdoan[Khiem Doan] added the correct → development/languages/C-C-plus-plus/C/header-files[headerfile]: `<cctype>` rather than `<iostream>`, which is sufficient for `isalnum()`.

  → https://github.com/ipodipad[ipodipad] changed the code so that it eliminates the annoying → https://stackoverflow.com/questions/23604699[CppCheck static analysis warning cppcheck:variableScope].

  → https://github.com/wbflooksky[wbfloofsky] provided a pull request that encouraged me to write directly into pre-allocated `std::string` buffers rather than first write into a separate buffer and then copy this buffer (`push_back()`)
  to the string. This change led to Version 1.03.
  -
  *wbfloofsky* also added the functionality to measure the time it takes to encode and decode a string in `test.cpp`.
  This inspired me to add → https://github.com/ReneNyffenegger/cpp-base64/blob/master/measure-time.cpp[`measure-time.cpp`] which does that, and only that.

  Francisco Ruiz added → https://github.com/ReneNyffenegger/cpp-base64/blob/master/test-google.cpp[`test-google.cpp`], which is more or less the same as `test.cpp`, but apparently can be used in a
  Google testing framework.

  Francisco Ruiz and → https://github.com/huangxinV587[huangxinV587] both suggested that I use a lookup function to find the position of an ecodeded character in `base64_chars`. I have merged
  their code into one version and given the lookup function the name `pos_of_char()`.


}
{ Usages

  This base 64 class is used for the → web/webserver/cpp/simple[Simple C++ WebServer for Windows].

}

