$ Creating VS Code extensions

{ Using Yeoman and the  VS Code Extension Generator

  Yeoman (→ https://www.npmjs.com/package/yo[yo]) along with the *VS Code Extension Generator* (which is the npm package → https://www.npmjs.com/package/generator-code[generator-code]) creates
  a basic → development/editors/Visual-Studio-Code/extensions[VS Code extension] which can then be used to extend with the desired functionality.

  First, Yeoman and the VS Code Extension Generator needs to be installed:
code {
npm install -g yo generator-code
code }

 `yo` can then invoked like so:
code {
yo code:app [<destination>] [options]
code }

`<destination>` is the folder where the extension is created in.

  Options are
  table { lll
    `-h` ☰ `--help`                 ☰ Print the generator's options and usage
         ☰ `--skip-cache`           ☰ Do not remember prompt answers (Default is `false`)
         ☰ `--skip-install`         ☰ Do not automatically install dependencies (Default is `false`)
         ☰ `--force-install`        ☰ Fail on install dependencies error (Default is `false`)
         ☰ `--ask-answered`         ☰ Show prompts for already configured options (Default is `false`)
    `-i` ☰ `--insiders`             ☰ Show the insiders options for the generator
    `-q` ☰ `--quick`                ☰ Quick mode, skip all optional prompts and use defaults
    `-o` ☰ `--open`                 ☰ Open the generated extension in Visual Studio Code
    `-O` ☰ `--openInInsiders`       ☰ Open the generated extension in Visual Studio Code Insiders
    `-t` ☰ `--extensionType`        ☰ ts, js, colortheme, language, snippets, keymap …
    `-n` ☰ `--extensionDisplayName` ☰ Display name of the extension
         ☰ `--extensionId`          ☰ Id of the extension
         ☰ `--extensionDescription` ☰ Description of the extension
         ☰ `--pkgManager`           ☰ `npm`, `yarn` or `pnpm`.
         ☰ `--webpack`              ☰ Bundle the extension with `webpack`
         ☰ `--gitInit`              ☰ Initialize a → development/version-control-systems/git/repository[git repo]
         ☰ `--snippetFolder`        ☰ Snippet folder location
         ☰ `--snippetLanguage`      ☰ Snippet language
  table }

  { -t / --extensionType

    The following extension types are possible:
    table { ll
      `js` ☰ → development/languages/JavaScript extension
      `ts` ☰ → development/languages/JavaScript/transpilers/TypeScript extension
      `web` ☰
      `extensionpack` ☰
      `keymap` ☰
      `language` ☰
      `colortheme` ☰
      `snippets` ☰
      `notebook` ☰ A notebook renderer
      `localization` ☰ A language pack

    table }

  }

}
