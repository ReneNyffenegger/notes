$ CSS: display property
@ display

The → development/web/CSS/properties[CSS property] `display` controls how an element is displayed.

The property can be set to many values. Arguably, the most often seen ones are
  • block (for which the → development/web/HTML/tags/div[`<div>` tag] is a prominent example)
  • inline (for which the → development/web/HTML/tags/span[`<span>` tag] is a prominent example)
  • none (see → #display-none-vs-visibility-hidden[`display:none` vs `visibility:hidden`] below
  • table
  • flex
  • grid
  • list-item
  • inline-block

{ Inline elements cannot be assigned width nor height #display-inline-width-height

  For elements whose `display` value is `inline` (such as a → development/web/HTML/tags/span[`<span>`]), assigning a → development/web/CSS/properties/width-height[width or height] has no effect.

  In the following example, each word of the first pair of words (Hello world) is in a `<span>`, the words of the second pair are in `<div>`. All elements are assigned a width and a height. Yet, as
  shown, only the `<div>` elements are modified by the `width` and `height` value.
  gh|about-CSS|/properties/display/img/width-height-in-inline-and-block.png||

  gh|about-CSS|/properties/display/width-height-in-inline-and-block.html||


}
{ display:none vs visibility:hidden #display-none-vs-visibility-hidden

  Setting an element's → development/web/CSS/properties[CSS property] `display` to `none` does not render the element at all. For rendering purposes, it is considered inexistent.
  -
  This is different from setting the → development/web/CSS/properties/visibility[`visibility`] property to `hidden` which only hides an element's content.

  The difference is demonstrated in the folllowing simple example. The → development/web/HTML document has 5 → development/web/HTML/tags/span[`<span>`] elements. The value of the property `visibility`
  of the span whose content is `two` is set to `hidden` while the value of `display` for the `<span>` whose content is `four` is set to `none`. Between `one` and `three`, no special gap is rendered,
  but between `three` and `five`, a noticable gap is rendered because the `four` is only invisible.

  gh|about-CSS|/properties/display/img/display-none_vs_visibility-hidden.png||

  gh|about-CSS|/properties/display/display-none_vs_visibility-hidden.html||

}

sa:

  → development/web/CSS/properties/display/table-elements[Display properties to simulate a table].

  → development/web/CSS/properties
