
{ User Agent #http-user-agent

  TODO: gone → development/web/HTTP/User-Agent[here].


}
{ Debugging/Monitoring/Proxying HTTP traffic

  → https://www.telerik.com/fiddler[Telerik Fiddler] 

}
{ HTTP/2


  HTTP/2 allows
    • a more efficient use of network resources and
    • a reduced perception of latency.

  This is achieved
    • by introducing header field compression and
    • allowing multiple concurrent exchanges on the same connection.

  In addition, HTTP/2 introduces *unsolicited* push of representations from servers to clients.

  HTTP/2 does not obsolete HTTP/1.1


  HTTP/2 is described in → development/web/RFC#rfc-7540[RFC 7540]

}
{ HTTP/3

  HTTP/3 is the proposed successor of HTTP/2.

  HTTP/3 uses UDP rather than → development/web/TCP-IP[TCP] for communication.

}
{ TODO

  HTTP Strict Transport Security (HSTS) apparently specifies that a browser may only connect to a server securely.
  -
  So, exceptions can not be added.

}
{ Misc

  Development of the HTTP protocoll was initiated by → https://en.wikipedia.org/wiki/Tim_Berners-Lee[Tim Berners-Lee].

}


sa:

  → development/web/HTTP/header[HTTP headers]

  Because the HTTP protocall is basically stateless, there are → development/web/HTTP/cookie[cookies] that allow a → web/webserver[web server] to maintain state over the HTTP protocoll.

  → development/web/HTTPS

  → development/web/HTTP/authentication

  → tools/lftp

  → Linux/IPP[IPP]

  → development/web/service/SOAP

  → development/web

  → development/languages/VBA/Useful-object-libraries/Windows-HTTP-Services

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/Net/HttpWebRequest[`System.Net.HttpWebRequest`]
