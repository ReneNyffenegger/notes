$ web service

One of the most significant characteristic of web services is their *loose coupling*. Each service has its own
  • Server they're running on
  • Programming language
  • Library version.


→ development/web/service/BPEL: Business Process Execution Language

RDF: Resource Description Framework

→ development/web/service/REST: restful state transfer

RSS: Really Simple Syndication

→ development/web/service/SOAP: Simple Object Access Protocol

WSCL: Web Service Conversation Language

→ development/web/service/WSDL: Web Services Description Language. WSDL documents describe web services.

{ SOAP vs REST

  table { ll

  SOAP ☰ REST
  `switchCategory(user, oldCategory, newCategory)` ☰ `getUser(user)`
  XML ☰ plain text, → development/web/HTML, → development/languages/JavaScript/JSON[JSON], XML
  ☰ HTTP
  a protocol ☰  archictural style
  cannot use REST ☰ can use SOAP
  service interfaces ☰ URIs
  strict standards ☰ loose standards
  own security ☰ security from underlying protocol (HTTPS?)
  Usually `POST /....` plus interop ☰ usually `GET /service?do=something&id=42`

  
  table }

}
