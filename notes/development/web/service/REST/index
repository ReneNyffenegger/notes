$ Representational state transfer
@ REST


REST tries to fix the problems with → development/web/service/SOAP.

REST uses the standard → development/web/HTTP/request-methods[HTTP request methods] (aka verbs) `GET`, `POST`, `PUT`, `DELETE` and `PATCH` to create, change or delete content (aka CRUD operations).

{ Stateless servers

  A REST server is *stateless*: it does not store any context for a client after having serviced a request.

  Thus, the client stores the *session state* and provides the server all information needed when making a requst.

  A client that has outstanding requests is considered to be in *transition*.

}

{ TODO

  HATEOAS = Hypertext As The Engine Of Application State

}

sa:
  → development/web/service#ws-soap-vs-rest[SOAP vs REST]

  → development/Data/OData is a protocol, based on REST, for creating and consuming → development/Data[data].

  The → development/Data/OData[Open Data Protocol] claims to be *the best way to REST*.

  The → Windows/PowerShell/command-inventory/noun/restMethod/invoke[PowerShell cmdLet `invoke-restMethod`]
