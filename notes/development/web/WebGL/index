
{ WebGL program

  A WebGL programm is created with `program = gl.createProgram()`.

  A WebGL programm needs two → #webgl-shader[shaders]: a vertex shader and a fragment shader.

}
{ Shader #webgl-shader

  Shaders can be thought of as functions of the program that run on the GPU. They are written in a language called
  → development/web/WebGL/GLSL.

  
  There are two types of shaders:
    • Vertex shaders: They define vertices on the screen by assigning a 4-element vector to `gl_position`.
    • Fragment shaders: they run once for each pixel on the scene and determine their color values by assigning a 4-element vector to `gl_FragColor`.

  In → development/languages/JavaScript, a shader is created with `shader = gl.createShader()`.

  The source code for a shader is indicated with `gl.shaderSource(shader, source_code)`.

  Then the shader is compiled with `gl.compileShader(shader))`.

  Finally, the shaders are added to the gl-program with `gl.attachShaders(gl_program, shader)`.


}
{ Vertex Buffer Object

  Abbreviated with *VBO*.

}
{ Determining if WebGL is supported

  If a → development/web/browser[browser] supports WebGL can be determined by checking for the existance of `→ development/web/browser/object-model#bom-window[window].WebGLRenderingContext` with
  → development/languages/JavaScript[JavaScript].

  gh|about-WebGL|/does-browser-support-webgl.html||

}


sa:

  → development/web/WebGL/minimalist-example[Minimalist example],
  → development/web/WebGL/draw-points[draw points]
  -
  → development/web/WebGL/clip-space[Clip space]

  → development/web/WebGL/OpenGL-ES-Shading-Language

  The HTML → development/web/HTML/tags/canvas[`<canvas>` element].

  → development/web

  WebGL is part of the → development/web/platform.
  -
  The successor of WebGL is the *→ development/web/platform/WebGPU API*.
