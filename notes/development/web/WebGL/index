
{ Shader

  Shaders can be thought of as programlets that run on the GPU.
  
  There are two types of shaders:
    • Vertex shaders: They define vertices on the screen by assigning a 4-element vector to `gl_position`.
    • Fragment shaders: they run once for each pixel on the scene and determines it color by assigning a 4-element vector to `gl_FragColor`.

  In → development/languages/JavaScript, a shader is created with `shader = gl.createShader()`.

  The source code for a shader is indicated with `gl.shaderSource(shader, source_code)`.

  Then the shader is compiled with `gl.compileShader(shader))`.

  Finally, the shaders are added to the gl-program with `gl.attachShaders(gl_program, shader)`.


}
{ Variables

  Three types of variables:
    • uniforms: »constants« (for the duration of a scence), used in both fragment and vertex shaders.
    • attributes: Only used in vertex shaders.
    • varyings: declared in vertex shader and shared with fragment shader.

}
{ Vertex Buffer Object

  Abbreviated with *VBO*.

}
{ Determining if WebGL is supported

  If a → development/web/browser[browser] supports WebGL can be determined by checking for the existance of `→ development/web/browser/object-model#bom-window[window].WebGLRenderingContext` with
  → development/languages/JavaScript[JavaScript].

  gh|about-WebGL|/does-browser-support-webgl.html||

}


sa:

  → development/web/WebGL/minimalist-example[Minimalist example]

  → development/web
