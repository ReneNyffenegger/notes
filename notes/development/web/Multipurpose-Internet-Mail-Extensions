$ Multipurpose Internet Mail Extensions
@ MIME

{ Media types and subtypes

  A *media type* (formerly known as *MIME type*) describes the kind of document that is transmitted from server to client.

  A *media type* consists of a type and a subtype and optional paramters:
code {
type "/" [tree "."] subtype ["+" suffix]* [";" parameter]
code }

  Examples for media types are `application/pdf` or `image/jpeg`.

  Registered types are:
    • `application`
    • `audio`
    • `example`
    • `font`
    • `image`
    • `message`
    • `model`
    • `multipart`
    • `text`
    • `video`

 `chemical` is an unofficial top-level name in common use.

  In → development/web/HTTP, the media type is defined with the `Content-Type` → development/web/HTTP/header[header].

  { .vnd, .x and .prs types

    In theory, all mime types are registered with IANA (»Internet Assigned Numbers Authority«).

    However, some vendors choose to use unofficial types and prepend them with `x-` (or more modernly `x.`?).

    Vendor specific media sub-types start with `vnd.` (for example `application/vnd.github.mercy-preview+json`).

    Personal (vanity) specific media sub-types start with `prs.`.

  }

}

{ Determining the MIME type string of a file

  The `-i` option of → Linux/shell/commands/file#file-determine-character-encoding[the `file` command line program] shows the MIME type string of a file.

}
{ Association between MIME type and application #mime-application-association

  Within the → Linux/X/XDG[XDG] standard, *xdg-utils* can be used to associated MIME types with applications.

}

{ Relevant RFCs #mime-rfcs


    → https://www.ietf.org/rfc/rfc2045[RFC 2045: MIME Part One: Format of Internet Message Bodies]
    -
    → https://www.ietf.org/rfc/rfc2046[RFC 2046: MIME Part Two: Media Types]
    -
    → https://www.ietf.org/rfc/rfc2047[RFC 2047: MIME Part Three: Message Header Extensions for Non-ASCII Text]
    -
    → https://www.ietf.org/rfc/rfc2048[RFC 2048: MIME Part Four: Registration Procedures]
    -
    → https://www.ietf.org/rfc/rfc2049[RFC 2049: MIME Part Five: Conformance Criteria and Examples]

   ~Related RFCs~
   -
    → https://www.ietf.org/rfc/rfc1524[RFC 1524: The formal description of mailcap files. Mailcap files describe how to handle media types.]
    -
    → https://www.ietf.org/rfc/rfc2015[RFC 2015: MIME Security with Pretty Good Privacy (PGP).]
    -
    → https://www.ietf.org/rfc/rfc2110[RFC 2110: MIME E-mail Encapsulation of Aggregate Documents, such as HTML (MHTML).]
    -
    → https://www.ietf.org/rfc/rfc2111[RFC 2111: Content-ID and Message-ID Uniform Resource Locators.]
    -
    → https://www.ietf.org/rfc/rfc2112[RFC 2112: The MIME Multipart/Related Content-type.]
    -
    → https://www.ietf.org/rfc/rfc2183[RFC 2183: Defines the syntax and sematics of the "Content-Disposition" header to convey presentational information.]
    -
    → https://www.ietf.org/rfc/rfc2184[RFC 2184: MIME Parameter Value and Encoded Word Extensions: Character Sets, Languages, and Continuations]

    See also → development/web/RFC

}

sa:

  The → development/web/HTTP `Accept` → development/web/HTTP/header[request header] indicates the content types (expressed as MIME types) a client understands.

  → development/languages/Perl/modules/MIME/Base64, → development/languages/Perl/modules/MIME/Lite,
  → development/languages/Perl/modules/Email/MIME

  → development/Base64

  → Linux/fhs/usr/share/mime

  → Linux/shell/commands/xdg/mime

  → development/web

  → Windows/registry[Registry] key → Windows/registry/tree/HKEY_CLASSES_ROOT/MIME[`HKEY_CLASSES_ROOT\MIME`]
