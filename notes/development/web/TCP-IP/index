$ TCP/IP

sa:
  → development/web/TCP-IP/port[Ports] in TCP and UDP

 `→ Linux/fhs/etc/protocols` and `→ Linux/fhs/etc/services`

  Shell commands:
   • `→ Linux/shell/commands/nc` (netcat) is a → Linux/shell/commands[shell command] for «just about everything under the sun invovling TCP, UDP or UNIX-domain sockets».
   • `→ Linux/shell/commands/ss`

  Windows binaries
    `→ Windows/dirs/Windows/System32/ARP_EXE`,
    `→ Windows/dirs/Windows/System32/PING_EXE`,
    `→ Windows/dirs/Windows/System32/NETSTAT_EXE`

  → development/web

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/Net/Sockets/TcpClient[`System.Net.Sockets.TcpClient`]

 *Nagle's algorithm* tries to reduce the number of small packets sent by buffering data until a full packet can be transmitted or an acknowledgment is received.

  → development/security/SSH provies secure network services over insecure networks (which TCP/IP networks typically are).

  → development/web/RFC#rfc-793[RFC 793]

  QUIC
