$ Browser Object Model: The window object
@ window

{ Properties and Methods

table { ll

  `alert()` ☰
  `applicationCache` ☰ *Deprecated*
  `back()` ☰ *Non-Standard*, *Deprecated*
  `blur()` ☰
  `cancelAnimationFrame()` ☰ Experimental
  `cancelIdleCallback()` ☰
  `captureEvents()` ☰ *Non-Standard*
  `clearImmediate()` ☰
  `close()` ☰
  `closed` ☰
  `confirm()` ☰
  `console` ☰
  `convertPointFromNodeToPage()` ☰ *Non-Standard*
  `convertPointFromPageToNode()` ☰ *Non-Standard*
  `customElements` ☰ Returns a `→ development/web/APIs/interfaces/CustomElementRegistry` interface.
  `defaultStatus` ☰ *Deprecated*
  `devicePixelRatio` ☰
  `dialogArguments` ☰ *Deprecated*
  → development/web/browser/object-model/document[`document`] ☰
  `dump()` ☰ *Non-Standard*
  `event` ☰
  `fetch()` ☰ Part of the *Fetch API*. (See → development/web/browser/object-model/window/fetch/asynchronous[demonstration of the asynchronicity of fetch()])
  `find()` ☰ *Non-Standard*
  `focus()` ☰
  `forward()` ☰ *Non-Standard*, *Deprecated*
  `frameElement` ☰
  `frames` ☰
  `fullScreen` ☰ *Non-Standard*
  `getComputedStyle()` ☰
  `getDefaultComputedStyle()` ☰
  `getSelection()` ☰
  `history` ☰
  → development/web/browser/object-model/window/innerWidth-innerHeight[`innerHeight` and `innerWidth`] ☰ return the size of the browser-window's viewport.
  `length` ☰
  `localStorage` ☰
  `location` ☰
  `locationbar` ☰
  `matchMedia()` ☰
  `menubar` ☰
  `Methods` ☰
  `moveBy()` ☰
  `moveTo()` ☰
  `mozInnerScreenX` ☰
  `mozInnerScreenY` ☰
  `mozPaintCount` ☰ *Non-Standard*, *Deprecated*
  `name` ☰
  `navigator` ☰
  `ondragdrop` ☰ *Deprecated*
  `open()` ☰
  `openDialog()` ☰ *Non-Standard*
  `opener` ☰
  `outerHeight` ☰
  `outerWidth` ☰
  `pageXOffset` ☰
  `pageYOffset` ☰
  `parent` ☰
  `personalbar` ☰
  `postMessage()` ☰
  `print()` ☰
  `prompt()` ☰
  `releaseEvents()` ☰ *Non-Standard*
   → development/web/browser/object-model/window/requestAnimationFrame[`requestAnimationFrame()`] ☰
  `requestFileSystem()` ☰ *Non-Standard*, *Deprecated*
  `requestIdleCallback()` ☰
  `resizeBy()` ☰
  `resizeTo()` ☰
  `screen` ☰
  `screenLeft` ☰
  `screenTop` ☰
  `screenX` ☰
  `screenY` ☰
  `scroll()` ☰
  `scrollbars` ☰
  `scrollBy()` ☰
  `scrollByLines()` ☰ *Non-Standard*
  `scrollByPages()` ☰ *Non-Standard*
  `scrollMaxX` ☰ *Non-Standard*
  `scrollMaxY` ☰ *Non-Standard*
  `scrollTo()` ☰
  `scrollX` ☰
  `scrollY` ☰
  `self` ☰
  `sessionStorage` ☰
  `setImmediate()` ☰ *Non-Standard*
  `showDirectoryPicker()` ☰
  `showModalDialog()` ☰ *Deprecated*
  `showOpenFilePicker()` ☰
  `showSaveFilePicker()` ☰
  `sidebar` ☰ *Non-Standard*
  `sizeToContent()` ☰
  `speechSynthesis` ☰
  `status` ☰
  `statusbar` ☰
  `stop()` ☰
  `toolbar` ☰
  `top` ☰
  `updateCommands()` ☰
  `visualViewport` ☰
  `window` ☰

table }

}



{ Scrolling

  → development/web/browser/object-model/window/scrollX-scrollY[`window.scrollX` and `window.scrollY`] indicate the amount in pixels that the document is scrolled horizontally and vertically.
  `window.pageXOffset` and `window.pageYOffset` are aliases for `window.scrollX` and `window.scrollY`.

  The properties `.scrollColumn` and `.scrollTow` set or get the left-most column or top-most row in a pane or window.

  Relative scrolling is possible for example with
code {
activeWindow.smallScroll Down    := 105
activeWindow.largeScroll toRight :=   2
code }

}

sa:
  → development/web/browser/object-model/window/onerror

  → development/web/browser/object-model/window/setTimeout
