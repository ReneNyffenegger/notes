$ Browser Object Model: window.onerror
@ onerror

`window.onerror` can be assigned a (callback-) function that is invoked when an error occurs.

The function receives a message, an → development/web/URI-URL-URN-IRI-URC#url[URL], line and column number and an → development/languages/JavaScript/objects/Error[error object].

The following → development/web/HTML[HTML] document attempts to demonstrate the usage of `window.onerror`. Whenever the assigned call back function is called,
it → development/web/HTML/tags/table/create-with-js[creates a row] in a → development/web/HTML/tags/table[`<table>`] with the received parameters.

gh|Browser-Object-Model|/window/onerror.html||

This HTML document is → https://renenyffenegger.ch/development/web/js-html/browser-object-model/window/onerror.html[online here].

{ Multiple arguments

  Because of historical reasons, the `window.onerror` event is the only event to receive multiple arguments.

}
{ TODO

code {
<!DOCTYPE html>
<script>
window.addEventListener("error", e => 
  {
     const { message, filename, lineno, colno, error } = e;
     alert(`Error occurred: ${message}: ${error}\n${filename}\nLine:Col ${lineno}:${colno}\n\n`);

   }
);
</script>
<html>
  …
</html>
code }

}

sa:
  → development/web/browser/object-model/window[The window object] and the
  → development/web/browser/object-model[browser object model].
