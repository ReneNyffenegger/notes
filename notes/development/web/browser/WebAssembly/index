
WebAssembly (Wasm) is a programming language that runs on → development/web/browser[browsers] (stack based VM). Compared to
→ development/languages/JavaScript, Wasm is faster, more memory efficient and file size efficient and safer.

  Wasm can't access the → development/web/DOM[DOM] API.

WebAssembly is supported (2019?) by
→ development/web/browser/Firefox,
→ development/web/browser/Chrome, Safari,
→ development/web/browser/Edge

The specification is defined by W3C as a long-live web standard.

{ Compiling c source

  A → development/languages/C-C-plus-plus/C[C] source file can be compiled into Wasm with *emscripten*:

  The folllowing command produces a → development/filename-extensions#file-suffix-wast[`.wast`] file.
code {
$ emcc -O3 -g source.c
code }

  It is also possible to create a → development/web/HTML[html] file:
code {
$ emcc -O3  source.c -o webPage.html
$ python3 -m → web/webserver[http.server] 8888
$ open localhost:8888/webPage.html
code }



}
{ Runtime environment of emscripten

  emscripten provides a → Linux[Unix] like runtime environment.

  Noteable features that are missing are:
    • → development/stdin-stdout-stderr[stdin]
    • Terminal screen
    • Thus also no terminal library (such as → Linux/ncurses)


}
