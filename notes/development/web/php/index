$ PHP

{ Command line usage and options

  { Usage
  
code {
php [options] [-f] <file> [--] [args...]
php [options] -r <code> [--] [args...]
php [options] [-B <begin_code>] -R <code> [-E <end_code>] [--] [args...]
php [options] [-B <begin_code>] -F <file> [-E <end_code>] [--] [args...]
php [options] -S <addr>:<port> [-t docroot] [router]
php [options] -- [args...]
php [options] -a
code }

  }
  { Options #php-cmdline-option

  table { ll
    `-a`               ☰  Run as interactive shell
    `-c <path>|<file>` ☰  Look for `php.ini` file in this directory. (See also the function `→ development/web/php/snippets/ini/get_all`).
    `-n`               ☰  No configuration (ini) files will be used
    `-d foo[=bar]`     ☰  Define INI entry foo with value `'bar'`
    `-e`               ☰  Generate extended information for debugger/profiler
    `-f <file>`        ☰  Parse and execute `<file>`. (`-f` seems to be optional)
    `-h`               ☰  Print a short summary about PHP usage and command line options.
    `-i`               ☰  PHP information
    `-l`               ☰  Syntax check only (lint)
    `-m`               ☰  Show compiled in modules
    `-r <code>`        ☰  Run PHP `<code>` without using script tags `<? … ?>`.
    `-B <begin_code>`  ☰  Run PHP `<begin_code>` before processing input lines
    `-R <code>`        ☰  Run PHP `<code>` for every input line
    `-F <file>`        ☰  Parse and execute `<file>` for every input line
    `-E <end_code>`    ☰  Run PHP `<end_code>` after processing all input lines
    `-H`               ☰  Hide any passed arguments from external tools.
    `-S <addr>:<port>` ☰  Run with built-in → web/webserver[web server]
    `-t <docroot>`     ☰  Specify document root `<docroot>` for built-in web server.
    `-s`               ☰  Output → development/web/HTML syntax highlighted source.
    `-v`               ☰  Version number
    `-w`               ☰  Output source with stripped comments and whitespace.
    `-z <file>`        ☰  Load Zend extension `<file>`.

    `args …`          ☰  Arguments passed to script. Use `-- args` when first argument starts with `-` or script is read from → development/stdin-stdout-stderr[stdin]
    `--ini`            ☰  Show configuration file names

    `--rf <name>`      ☰  Show information about function `<name>`.
    `--rc <name>`      ☰  Show information about class `<name>`.
    `--re <name>`      ☰  Show information about extension `<name>`.
    `--rz <name>`      ☰  Show information about Zend extension `<name>`.
    `--ri <name>`      ☰  Show configuration for extension `<name>`.

  table }

  }

}

{ SQLite

  It seems, → development/databases/SQLite can be accessed from php (in Ubuntu) with a
code {
sudo apt-get install php-sqlite3
code }

}
sa:
  `.htaccess` snippet to → development/Apache/Server/htaccess#enable-php[enable php within html documents].

  → development/web/php/regular-expressions

  → development/web/php/snippets

  → development/web
