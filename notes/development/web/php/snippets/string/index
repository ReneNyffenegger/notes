$ PHP code snippets related to strings

Some → development/web/php functions that are related to strings include:
table { ll
  `strcmp()`, `strcasecmp()` ☰ Compare two strings. `strcasecmp()` compares the case insensitively.
  `preg_match()` ☰
  `substr_compare()` ☰
  `strncasecmp()` ☰
  `strstr()`, `stristr()` ☰ 
  `strpos()` ☰
  `strpbrk()` ☰
  → #php-substr[`substr()`] ☰
  → #php-explode[`explode()`] ☰ Returns an → development/web/php/snippets/array[array] of strings that are created from a string by splitting this string on a delimiter.
table }
{ String concatenation

  Strings can be concatenated with the dot. There are two versions: `$str_1 . $str_2` and `$str_1 .= $str_2`.

  gh|about-php|/string/concatenation.html||

}
{ substr #php-substr

 `substr()` (substring) returns a portion of a string:
  gh|about-php|/array/add-elements.html||

}
{ str_replace #php-str_replace

 `str_replaces` replaces a portion of a string with another (sub-)string.

  gh|about-php|/string/str_replace.html||

  Compare with → development/web/php/regular-expressions[PHP's regular expressions]

}
{ explode #php-explode

 `explode($delim, $txt)` returns an → development/web/php/snippets/array[array] of strings whose elements are the substrings in `$txt` that are delimited by `$delim`.

 `explode()` has an optional third argument that controls the maximum number of elements in the returned array.

  gh|about-php|/string/explode.php||

  Together with `list()`, the returned array can be assigned to named variables in one go (similar to
  assign the return value to a tuple in Python):
code {
→ development/web/php/snippets/list[list]($x, $y, $z) = explode('/', $xyz);
code }

}

sa:
  → development/web/php/snippets[Other PHP snippets]
