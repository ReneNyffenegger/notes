$ DOM example: document.getElementsByName

`→ development/web/browser/object-model/document[document].getElementsByName('val')` returns an array of nodes whose `name` → development/web/HTML/attributes[attribute] has the value `val`.

In the following example, there are four → development/web/HTML/tags/div[`<div>`] elements that each have a name attribute. The `getElementsByName('name_one')` returns the two nodes where tha attribute value is `name_one`. These are
assigned to the variable `node_list` and then, the found elements are iterated over with the → development/languages/JavaScript/language/statements/for[JavaScript `for`] statement. In the iteration body, the content of these
divs is changed with the `innerHTML` property.

gh|about-Document-Object-Model|/Node/Document/getElementsByName.html||

After opening the HTML document in a → development/web/browser[browser], the content is rendered like so:
gh|about-Document-Object-Model|/Node/Document/img/getElementsByName.png||


sa:

  → development/web/DOM/examples/Node/Document/getElementById[`document.getElementById('…')`] returns the (single) element, if it exists, whose attribute `id` has a given value.

  → development/web/DOM/examples/Node/Document/getElementsByTagName[`document.getElementsByTagName('div')`] returns an array of the → development/web/HTML/tags/div[`<div>`] elements in a HTML document.

  → development/web/DOM/examples[DOM examples]
