
The `EventTarget` interface is implemented by objects that can receive events and may have listeners for them. 

{ Methods

  table { ll
    `addEventListener()` ☰ Registers an event handler of a specific event type on the `EventTarget`. `addEventListener` is recommended over using `on…event` because it allows to add multiple handlers for an event (think libraries) and works on any event target, not just HTML or SVG elements.
    `dispatchEvent()` ☰ Dispatches an event to its target.
    `removeEventListener()` ☰ Removes an event listener from the `EventTarget`
  table }

}

sa:

 `→ development/web/DOM/interfaces-mixins/Event`

  Interfaces that inherit from `EventTarget` include
    • `→ development/web/DOM/interfaces-mixins/Node` from which in turn `Element` and `Document` inherit
    • `Window`
    • `XMLHttpRequestEventTarget` (directly) and `XMLHttpRequest` (indirectly)
    • `AudioNode`
    • `BaseAudioContext` (directly) and `AudioContext` (inderectly)
