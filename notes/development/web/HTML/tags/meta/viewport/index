$ HTML tag: meta - viewport

The `viewport` instruction only affects mobile → development/web/browser[browsers]; it has no effect on desktops. It is especially useful for the so called → development/web/HTML/Responsive-design[responsive design].

{ Attributes

  table { ll

    `width` ☰ Minimum size of the viewport. Can be set to a number or the special value `device-width`.
    `height` ☰ Minimum size of the viewport. Can be set to a number or the special value `device-height`.
    `initial-scale` ☰ Zoom level when page is first loaded.
    `minimum-scale` ☰
    `maximum-scale` ☰
    `user-scalable` ☰ If zooming is allowed, possible values: `0`, `1`, `no` and `yes`. Setting this value to `0` or `no` is against *Web Content Accessibility Guidelines* (WCAG).
    `interactive-widget` ☰

  table }

}
{ Examples

code {
<meta name="viewport" content="width=1024" />
code }

code {
<meta name="viewport" content="height=device-height, width=device-width, initial-scale=1.00, maximum-scale=0.75, user-scalable=0">
code }

code {
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover"/>
code }

}

{ width=

  Specify the size of the viewport with a `width=` declaration:
  gh|about-html|/tags/meta/viewport/width=500.html||

  The size of the CSS `vw` unit is established by the value of `width`.

}

sa:
  → development/web/HTML/tags/meta[`<meta>`]

  → development/web/browser#browser-viewport[Browser: viewport]



  → development/web/browser/object-model/window/innerWidth-innerHeight[`window.innerWidth` and `window.innerHeight`]
