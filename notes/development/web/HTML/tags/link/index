$ HTML element: link
@ <link>

The `<link>` tag allows authors to link a document to other resources, often/usually to CSS-stylesheets and a favicon:
code {
<link rel="stylesheet" type="text/css"                 href="external.css" >
<link rel="icon"       type="image/vnd.microsoft.icon" href="→ development/web/HTTP/request#http-req-favicon[/favicon.ico]" >
code }

Attributes, besides the → development/web/HTML/attributes#html-global-attributes[global ones] are:
table { ll
  `as` ☰
  `color` ☰
  `crossorigin` ☰
  `href` ☰
  `hreflang` ☰
  `imagesizes` ☰
  `imagesrcset` ☰
  `integrity` ☰
  → development/web/HTML/attributes#html-attr-media[`media`] ☰ See → development/web/HTML/tags/link/media[this example].
  `rel` ☰ Specifies the relationship between the document and the linked resource (such as `<link rel="stylesheet" type="text/css href="…">`)
  `referrerpolicy` ☰
  `sizes` ☰ dimensons of icons in `rel="icon"`
  `title` ☰
  `type` ☰
table }

At least one of `href` or `imagesrcset` must be present.

{ rel

  { rel=icon

code {
<link rel="icon" type="image/png" sizes="16x16"    href="/res//favicon-16x16.png"       >
<link rel="icon" type="image/png" sizes="32x32"    href="/res//favicon-32x32.png"       >
<link rel="icon" type="image/png" sizes="96x96"    href="/res//favicon-96x96.png"       >
<link rel="icon" type="image/png" sizes="192x192"  href="/res//android-icon-192x192.png">
code }

  }
  { rel=next / prev

  Especially the `next` attribute might be helpful for a user agent to preload a page to minimize the waiting time between two pages:
code {
<link rel="prev" href="page_3.html">
<link rel="next" href="page_5.html">
code }

  }
  { rel=canonical

  Create a canonical link. This is useful if a site serves pages with almost the same or similar content. The page linked to is the canonical page, i. e. the page that
  the → web/Search-Engines[search engine] should be indexing.

code {
<link rel="canonical" href="main.html?content=all">
code }

  }
  { rel=manifest

    The target is a → https://developer.mozilla.org/en-US/docs/Web/Manifest[Web app manifest] which is a → development/languages/JavaScript/JSON file that provides developers with a centralized place to put metadata associated with a web application, such as
      • The web application's name
      • Links to icons
      • The preferred URL to open when a user launches the web application
      • etc.

  }
  { Also seen

code {
<link rel="apple-touch-icon" href="files/cto_layout/img/apple-touch-icon.png">
<link rel="preload"          href="./xyz.css" as="style">
<link rel="shortcut icon"    href="/img/favicon.ico"  type="image/x-icon">
<link rel="search"           href="https://…/abc.xml" type="application/opensearchdescription+xml" title="…">
<link rel="alternate"        href="https://…/xyz.rss" type="application/rss+xml"                   title="…" class="…">
code }

  }

}

sa:

 → development/web/HTML/tags/a[`<a>`]
  
  → development/web/HTML/tags

  The `<link>` tag can be used to reference *external* style sheet files, see → development/web/CSS/inline-vs-external.

  The `<link>` tag is semantically equivalent to the → development/web/HTTP `Link` entity header field.

  → development/web/HTML/attributes/item#html-item-invisible-link[«Invisible» links]

links:
  → https://html.spec.whatwg.org/multipage/semantics.html#the-link-element[HTML Living Standard]
