$ HTML elements

<!--...-->

→ development/web/HTML/tags/a[`<a>`]

<abbr>

<acronym>

→ development/web/HTML/tags/address[`<address>`] is used to indicate *contact information* for is nearest `<article>` or → development/web/HTML/tags/body[`<body>`] ancestor.

<applet>

<area>

→ development/web/HTML/tags/audio[`<audio>`]

<b>

→ development/web/HTML/tags/base[`<base>`]

<basefont>

<bdo>

<big>

→ development/web/HTML/tags/blockquote[`<blockquote>`] represents a section that is quoted from another source.

→ development/web/HTML/tags/body[`<body>`]

<br>

→ development/web/HTML/tags/button[`<button>`]

→ development/web/HTML/tags/canvas[`<canvas>`]

<caption>

<center>

→ development/web/HTML/tags/cite[`<cite>`] represents a title of work.

→ development/web/HTML/tags/code[`<code>`]

→ development/web/HTML/tags/col[`<col>`]

<colgroup>

<dl>, <dt>, → development/web/HTML/tags/dl-dt-dd[`<dd>`]

→ development/web/HTML/tags/ins-del[`<del>`]

<dfn>

<dir>

→ development/web/HTML/tags/div[`<div>`]

→ development/web/HTML/tags/dl-dt-dd[`<dl>`], <dt> and <dd>

<dl>, → development/web/HTML/tags/dl-dt-dd[`<dt>`] and <dd>

<em>

→ development/web/HTML/tags/fieldset[`<fieldset>`]

→ development/web/HTML/tags/figcaption[`<figcaption>`]

→ development/web/HTML/tags/figure[`<figure>`]

<font>

→ development/web/HTML/tags/form[`<form>`]

<frame>

<frameset>

<h1>

<h2>

<h3>

<h4>

<h5>

<h6>

→ development/web/HTML/tags/head[`<head>`]: contains the → development/Data/metadata about the *document*.

<hr>

→ development/web/HTML/tags/html[`<html>`]

<i>

<iframe>

→ development/web/HTML/tags/img[`<img>`]: → development/web/HTML/tags/img/data-uri[data URIs], → development/web/HTML/tags/img/determine-dimensions-with-javascript[determining width and height with javascript].

→ development/web/HTML/tags/input[`<input>`] allows the user of a web page to input values for processing locally with → development/languages/JavaScript or to be submitted to the → web/webserver.

→ development/web/HTML/tags/ins-del[`<ins>`]

<isindex>

<kbd>

→ development/web/HTML/tags/label[`<label>`]

→ development/web/HTML/tags/legend[`<legend>`]

→ development/web/HTML/tags/ul-ol-li[`<li>`]

→ development/web/HTML/tags/link[`<link>`] allows authors to link a document to other resources.

<map>

<menu>

→ development/web/HTML/tags/meta[`<meta>`]

<noframes>

`<noscript>`, compare with `<script>`

<object>

→ development/web/HTML/tags/ul-ol-li[`<ol>`]

<optgroup>

<option>

<p>

<param>

→ development/web/HTML/tags/pre[`<pre>`]

→ development/web/HTML/tags/q[`<q>`]

<s>

<samp>

→ development/web/HTML/tags/script[`<script>`], compare with `<noscript>`

→ development/web/HTML/tags/select[`<select>`] allows to define a drop down list from which a user can select a value.

<small>

`<source>`: Specifies the media resource for `<picture>`, `<audio>` or `<video>`.

→ development/web/HTML/tags/span[`<span>`]

<strike>

<strong>

→ development/web/HTML/tags/style[`<style>`]

<sub>

<sup>

→ development/web/HTML/tags/svg[`<svg>`]

→ development/web/HTML/tags/table[`<table>`]

<tbody>

<td>

<textarea>

<tfoot>

<th>

<thead>

→ development/web/HTML/tags/time[`<time>`]

<title>

→ development/web/HTML/tags/tr[`<tr>`]

<tt>

<u>

→ development/web/HTML/tags/ul-ol-li[`<ul>`]

<var>

`<viewport>`

`<video>`, for example to render a → development/web/HTML/tags/video/webcam[webcam stream] in a HTML page.

→ development/web/HTML/tags/wbr[`<wbr>`] marks a position with a *word break opportunity*.

(Semantic) elements to structure a page into sections are
  • `<article>`
  • `<header>`
  • `<main>`
  • `<nav>`
  • `<footer>`

Some elements are so-called → https://html.spec.whatwg.org/multipage/syntax.html#void-elements[void elements]: area, base, br, col, embed, hr, img, input, link, meta, source, track, wbr.
-
script and style are → https://html.spec.whatwg.org/multipage/syntax.html#raw-text-elements[raw text elements].

{ Replaced elements #html-replaced-elements

  The → development/web/CSS specification makes mention of a → https://www.w3.org/TR/css-display-3/#replaced-element[replaced element]. The rendering of replaced elements is not
  dictated by the CSS model. A typical (only?) example for a replaced element is the → development/web/HTML/tags/img[`<img>`] element.

}

sa:
  → development/web/HTML

  The → https://html.spec.whatwg.org/multipage/indices.html#elements-3[elements section] in the → https://html.spec.whatwg.org/multipage/[living standard].

  In → development/web/CSS, a HTML tag can be → development/web/CSS/classes/multiple-classes-for-tag[associated with multiple classes].

  In → development/languages/JavaScript, a HTML tag can be dynamically created with → development/web/DOM/examples/Node/Document/createElement[`document.createElement`] and added to the
  → development/web/DOM[DOM] tree with an element's `appendChild()` method.

  → development/web/php[PHP's] function → development/web/php/snippets#php-strip_tags[strip_tags] to strip HTML tags from a text variable.

  → development/languages/R/packages/shiny#shiny-html-tags[HTML tags in the R package `shiny`].

  The → development/web/HTML/DOCTYPE-declaration[DOCTYPE declaration `<!DOCTYPE html>`], which technically is not a tag.

  In the DOM(?), the HTML elements inherit from `→ development/web/HTML/DOM/API/interfaces-classes/HTMLElement`.

  Determining an HTML element's  → development/web/CSS/javascript/show-styles-of-element[CSS property value with JavaScript]

  Because `<` and `>` denote an element in a HTML document, these characters need to be «escaped» with an → development/web/HTML/entities[entity].
