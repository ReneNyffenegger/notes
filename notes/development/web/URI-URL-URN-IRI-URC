{ URI: Uniform Resource Identifier #uri

   A URI identifies a *resource* by a sequence of characters. An URI is *not* a file name, although in most cases that seems to be the case.
   For example, because of *content negotiation*, the same URI can lead to (different) documents in different languages.

   → development/web/RFC/index#rfc-3986[RFC 3986] requires the URI (that is: its sequence of characters) to be chosen from a limited subset of the repertoire of US-ASCII characters.

   There are two types of URIs: URLs and URNs

   See also
     • → development/web/RFC#rfc-1630[RFC 1630]
     • → development/web/RFC#rfc-2396[RFC 2396]
     • → development/languages/Perl/modules[Perl module] → development/languages/Perl/modules/URI[URI]

}
{ URL: Uniform Resource Locator #url

code {
<protocol>://<host>[:<port>][<path>[?<query>]]
code }

  See also RFC → development/web/RFC#rfc-1738

}
{ URN: Uniform Resource Name

  URNs define XML schemas:
code {
urn:<namespace>:<string>
code }

}
{ IRI Internationalized Resource Identifier #iri
 
 An IRI is a string that conforms to → development/web/RFC#rfc-3987[RFC 3987]. It »improves« URIs in that it not only allows for ASCII characters, but also for entire
 UCS-based character set.

}
{ URC: Uniform Resource Citation

  URCs provide a set of attribute/value pairs that describe properties of URIs like authorship, publisher, copyright etc.

}
sa:
  → Windows/development/Portable-Executable/DLL/rundll32_exe/url_bat[`url.bat`] opens an URL in the default
  → development/web/browser[browser] (?) from → Windows/cmd-exe[cmd.exe].

  → development/languages/VBA/Useful-object-libraries/MSXML/XMLHTTP/get_vbs[`get.vbs`] allows to `GET`  a → development/web/HTTP ressource from → Windows/cmd-exe[cmd.exe] and print it to the console.

