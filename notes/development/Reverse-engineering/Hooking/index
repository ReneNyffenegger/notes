$ Reverse engineering: Hooking

Hooking: Intercept function/API calls, messages or events between programs or program parts.

Steps:
   • Determine the location (address) of the function to be hooked.
   • Change page protection (because machine language instructions need to be changed)
   • Modify function so that it jumps to own code (the »trampoline«).


{ Detours #reverse-engineering-detours

  → https://www.microsoft.com/en-us/research/project/detours/[Detours] allows to re-route → Windows/development/WinAPI[WinAPI] calls.

  Detours 4.01 is licensed under the *MIT license*.

  → https://github.com/microsoft/detours[github]

  TODO: → Windows/dirs/Windows/System32/detoured_dll[detoured.dll]

}
{ TODO

  `mfdetours.dll` un the → Windows/dirs/Program-Files-x86/Windows-Kits/n/bin/version[`%WindowsSdkVerBinPath%`] directory.


}

sa:
  → https://github.com/apriorit/mhook

  The value `AppInit_DLLs` under the → Windows/registry[registry] key
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Windows[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows`].
