$ Git: Create a bare repository from a repository

Creating a *bare repository* from a → development/version-control-systems/git/repository (let alone from a directory) is not as simple as it should be (but I am used to such
problems with git). → https://stackoverflow.com/a/2200662/180275[This Stackoverflow answer] was very helpful to me when I tried to figure out how to achieve that.

First, we need to create a repsitory using `→ development/version-control-systems/git/commands/init`.
gh|about-git|/repository/bare/create-from-repo/create-repo||

We then need to add some content (here: a file and a directory with a file) to the repository, add the content (`→ development/version-control-systems/git/commands/add`) and
→ development/version-control-systems/git/commands/commit it:
gh|about-git|/repository/bare/create-from-repo/add-content||

Copying the → development/version-control-systems/git/_git[repository directory `repo/.git`] to `repo.git` is the first step for the new directory (`repo.git`) to be a *bare repository*.
-
The original repository (`repo`) is not needed anymore, it can be deleted:
gh|about-git|/repository/bare/create-from-repo/copy-git-directory||

The second step is to set `core.bare` to true:
gh|about-git|/repository/bare/create-from-repo/config-bare||

Finally, we can test if everything worked by cloning the bare repository:
gh|about-git|/repository/bare/create-from-repo/clone-new-repo||

