$ ref [git]

A ref is just a pointer to an → development/version-control-systems/git/objects/index[object].

It could be a file with a string in it.

A ref is a name that begins with `refs/` (for example `refs/heads/master`) that points to an → development/version-control-systems/git/objects#name[object name] or another *ref*. (The
latter is called a *symbolic ref*)

For convenience, a ref can sometimes be abbreviated when used as an argument to a Git command (see `man gitrevisions` for details).

Refs are stored in the repository, apparently under → development/version-control-systems/git/_git/refs/.

The ref namespace is hierarchical. Different subhierarchies are used for different purposses (e.g. the `refs/heads` hierarchy is used to represent local branches).

There are a few special-purpose refs that do not begin with `refs/`, for example → development/version-control-systems/git/HEAD.

The available local refs are shown with → development/version-control-systems/git/commands/show-ref[`git show-ref`].

{ reflog

  A reflog shows the local history of a ref.

}
{ remote-tracking branch

  A ref that is used to follow changes from another → development/version-control-systems/git/repository[repository]. It typically looks like
  `refs/remotes/foo/bar` (which indicates that it traces a branch named *bar* in a remote named *foo*), and matches the
  right-hand-side of a configured fetch refspec.

  A remote-tracking branch should not contain directmodifications or have local commits made to it.

}
{ Symbolic reference #symbolic

Instead of containing the → development/security/SHA-1 id itself, a symbolic reference is of the format `ref: refs/some/thing` and when referenced, it recursively dereferences to this
  reference.

  → development/version-control-systems/git/HEAD is a prime example of a symref.
  Others are:
    • → development/version-control-systems/git/_git/FETCH_HEAD
    • → development/version-control-systems/git/_git/ORIG_HEAD
    • MERGE_HEAD
    • CHERRY_PICK_HEAD

  Symbolic references are manipulated with the `git-symbolic-ref` command.

}

sa:

  `→ development/version-control-systems/git/commands/for-each-ref`
