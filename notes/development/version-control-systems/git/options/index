$ Git: options

Some interesting, imho, Git options include:
table { ll
  `branch.*` ☰
  `core.autocrlf` ☰ → https://stackoverflow.com/a/68265163/180275[Should be set to `false`] because it applies to all files, even binary ones and is local, not versionized in a repository. The `eol` directive in → development/version-control-systems/git/_gitattributes[`.gitattributes`] is therefore the preferred alternative.
  `core.filemode` ☰ If `true`, git will honor the → development/version-control-systems/git#git-executable-bit[executable bit] of files (some filesystem don't have such a bit). 
  `core.ignorecase` ☰
  `credential.helper` ☰ ? Contains a path such as `credential.helper=!"C:/Users/rene/bin/git/mingw64/libexec/git-core/git-credential-manager-core.exe"`
  `credential.helperselector.selected` ☰ The value of `credential.helperselector.selected` might be `manager-core`
  `diff.tool` ☰ Specify the default tool with which differences between → development/version-control-systems/git/objects/commit[commits] are shown when using → development/version-control-systems/git/commands/difftool[`git difftool`]
  `difftool.prompt` ☰ `true` or (possibly better?) `false`. If `--false`, the command line option `--no-prompt` will be used when invoking `→ development/version-control-systems/git/commands/difftool`.
  `http.sslCAInfo` ☰ Name of the file (for example `→ Windows/dirs/Program-Files/Git[C:\Program Files\Git]\mingw64\ssl\certs\ca-bundle.crt`) that contains the → development/security/cryptography/Public-key-certificate[certificate] with which a peer is verified in → development/version-control-systems/git/commands/pull[`git pull`] or → development/version-control-systems/git/commands/push[`git push`] over → development/web/HTTPS.
  `remote.origin.url` ☰ Compare with → development/version-control-systems/git/commands/remote#git-remote-get-url-origin[`git remote get-url origin`]
table }

sa:
  → development/version-control-systems/git/commands/config[`git config`] changes option values in config files.

  Commands have the → development/version-control-systems/git/commands#git-common-option[common option] `-c option=value` which allows to override an option value when executing a
  → development/version-control-systems/git/commands[git command].

  → Linux/fhs/home/username/_gitconfig[`~/.gitconfig`]
