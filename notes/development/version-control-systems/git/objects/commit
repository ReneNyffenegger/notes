$ commit object [git]
@ commit


A *commit object* is a single point in the → development/version-control-systems/git/repository[repository's] history. It contains these information
  • parents
  • commiter
  • author
  • date
  • → development/version-control-systems/git/objects/tree[tree object] which corresponds to the top directory of the stored revision

A commit is a snapshot of the *entire* → development/version-control-systems/git/repository[repository]. Unlike other → development/version-control-systems/[SCMs], it
doesn't store diffs.

A commit object is sometimes abbreviated as «commit» or referred to as «revision».

If two different commit objects point back to one other commit object, it is called a → development/version-control-systems/git/branch[branch].

{ Looking at the content of a commit object

code {
git cat-file commit 5f39acdb8
git cat-file commit HEAD
code }

}

{ to commit

  «to commit» (verb rather than noun) describes the action of storing a new snapshot of files into the Git history: it creates a new commit object representing
  the current state of the index and advancing HEAD to point at the new commit.

}
{ Parent object

  A commit object contains a (possibly empty) list of the logical predecessor(s) in the line of development.

}
{ Directed acyclic graph

  The commit obects form a directed acyclic graph, because they have parents (which makes them *directed*) and there is no chain which begins and ends with the same object (which
  makes them acyclic.

}
{ Merge commit

}
{ reachable commits #reachable

  All of the ancestors of a given commit are said to be «reachable» from that commit.

}

sa:
  → development/version-control-systems/git/objects

  `→ development/version-control-systems/git/commands/rev-list` lists commit objects in reverse chronological order.

  `→ development/version-control-systems/git/commands/commit`,
  `→ development/version-control-systems/git/commands/diff`,
  `→ development/version-control-systems/git/commands/log`,
  `→ development/version-control-systems/git/commands/revert`,
  `→ development/version-control-systems/git/commands/whatchanged`,
  `→ development/version-control-systems/git/commands/verify-commit`,
  `→ development/version-control-systems/git/commands/show-branch`
