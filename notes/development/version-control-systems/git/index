$ Git

Git das not store changes, but *states*.  Git doesn't care about → development/Unicode/character-encoding[encodings], it just tracks bytes.

Commands operate on the history of the → development/version-control-systems/git/branch[current branch].


{ Branches

  { Show current branch
  
code {
git branch
code }
  
  Prints a list of local branches of the repo. The current branch is prefixed with a star.
  
  }
  { List current set of branches

code {
git branch -a
code }

  }
  { Delete a branch

code {
git branch -d name-of-branch
code }

If branch not fully merged:
code {
git branch -D name-of-branch
code }

  }

}

{ Configuration

code {
git config ...
code }

Three files involved:
`→ Linux/fhs/home/username/_gitconfig`, `→ development/version-control-systems/git/_git/config`, `$(prefix)/etc/gitconfig`. (Where is `$(prefix)` defined?)

}

{ git behind a firewall

  { Windows

  code {
c:\> set HTTP_PROXY=http://DOMAIN\\USER.NAME/192.168.1.100:8080
c:\> git config --global http.proxy %HTTP_PROXY%
  code }

  }

}

{ git init

code {
git init
code }

Creates a new → development/version-control-systems/git/repository[repository].

Files and directories created
  • → development/version-control-systems/git/_git/index
  • → development/version-control-systems/git/_git/branches/index
  • → development/version-control-systems/git/_git/config
  • → development/version-control-systems/git/_git/description
  • → development/version-control-systems/git/_git/HEAD
  • → development/version-control-systems/git/_git/hooks/index
  • → development/version-control-systems/git/_git/info/index
  • → development/version-control-systems/git/_git/objects/index
  • → development/version-control-systems/git/_git/info/index
  • → development/version-control-systems/git/_git/objects/index
  • → development/version-control-systems/git/_git/objects/info/index
  • → development/version-control-systems/git/_git/objects/pack
  • → development/version-control-systems/git/_git/objects/pack/index
  • → development/version-control-systems/git/_git/refs/index
  • → development/version-control-systems/git/_git/refs/heads/index
  • → development/version-control-systems/git/_git/refs/tags/index

This new repository contains one → development/version-control-systems/git/branch[branch]: → development/version-control-systems/git/branch#master.

}

{ git log

  Shows commit (id, author, timestamp) made in the repository.

}

{ Configuration files

  { Porcelain commands

    Git has three levels of configuration files that can change the output of porcelain commands:
      • `$prefix/etc/gitconfig`
      • `→ Linux/fhs/home/username/_gitconfig`
      • `$XDG_CONFIG_HOME/git/config`

  }

}


{ TODO

  {  Windows / core.autoclrf

    I have the strong impression that I am better off configuring git on → Windows with a false `core.autoclrf`:
code {
→ development/version-control-systems/git/commands/config --global → development/version-control-systems/git/options/core-autocrlf false
code }

  }
  { Executable bit #git-executable-bit

    Git not only tracks file content but also the files' executable bits (on file systems that support it, that is).

    There are two *modes* that git is a able to assign to a file: `100644` for regular files and `100755` for executable files.

    The mode of a file can be shown with
code {
→ development/version-control-systems/git/commands/ls-files  -s  bin/build.sh
code }

    This bit can be modified with
code {
→ development/version-control-systems/git/commands/update-index  --chmod=+x  bin/build.sh
code }

    See also the `core.filemode` → development/version-control-systems/git/options[option].

  }

}

sa:
  `→ Linux/shell/commands/man gitrepository-layout`

  → http://renenyffenegger.ch/development/git-internals/index.html[git internals]

  → development/languages/Perl/modules[Perl module]: → development/languages/Perl/modules/Git/Repository[Git::Repository].

  → Linux/fhs/usr/lib/git-core

  → development/version-control-systems/git/protocols

  → Windows/registry/tree/HKEY_CURRENT_USER/Software/GitForWindows[`HKEY_CURRENT_USER\Software\GitForWindows`]
