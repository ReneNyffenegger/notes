$ git ls-files

`git ls-files` shows information about files in the index (the → development/version-control-systems/git/index_[`.git/index`] file) and the
→ development/version-control-systems/git/working-tree[working tree].

{ Introductionary example

  Initialize (`→ development/version-control-systems/git/commands/init`) Create a → development/version-control-systems/git/repository for this example …
  gh|about-git|/commands/ls-files/intro/init-repo.ps1||

  … and create a directory and some files:
  gh|about-git|/commands/ls-files/intro/create-initial-files.ps1||

  Add the files to the *index* (`→ development/version-control-systems/git/commands/add`):
  gh|about-git|/commands/ls-files/intro/add-initial-files.ps1||

  Add another file and modify `foo.txt`, but *without* adding them to the index 
  gh|about-git|/commands/ls-files/intro/create-more-files.ps1||

 `git ls-index` without further command line options shows the files in the index.
  gh|about-git|/commands/ls-files/intro/ls-files.ps1||

  Using the command line option `-m` shows files that are in the index and whose content in the working tree are different:
  gh|about-git|/commands/ls-files/intro/ls-files-m.ps1||

  The command line option `-o` shows «other» files, that is: files which are present in the working tree but not in the index:
  gh|about-git|/commands/ls-files/intro/ls-files-o.ps1||

  Commit the content of the index:
  gh|about-git|/commands/ls-files/intro/commit-1.ps1||

  Remove a file from the index and the working tree (`→ development/version-control-systems/git/commands/rm`) and another file from the working tree only.
  gh|about-git|/commands/ls-files/intro/rm.ps1||

  Then use `-d` to show deleted files:
  gh|about-git|/commands/ls-files/intro/ls-files-d.ps1||

}

sa:
 `→ development/version-control-systems/git/commands/mktree`
 -
 `→ development/version-control-systems/git/commands/ls-tree`


  → development/version-control-systems/git/commands
