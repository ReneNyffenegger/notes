$ git pull
@ pull

`git-pull`: Fetch from and integrate with another repository or a local branch.

code {
git pull [<options>] [<repository> [<refspec>…]]
code }

By default, `git pull` performs actually two operations:
  • It fetches (→ development/version-control-systems/git/commands/fetch[`git fetch`]) changes from a remote → development/version-control-systems/git/repository or local brach, and
  • merges («integrates») them into the → development/version-control-systems/git/branch#current[current branch].
-
So, `git pull` is an abbreviation for
code {
→ development/version-control-systems/git/commands/fetch
→ development/version-control-systems/git/commands/merge[git merge] FETCH_HEAD
code }

rem {
  Fetch from and integrate with another → development/version-control-systems/git/repository[repository]
  or a local → development/version-control-systems/git/branch[branch].
rem }

{ Options
  
  { Related to fetching

    table { lll
           ☰ `--all` ☰
      `-a` ☰ `--append` ☰
           ☰ `--depth=<depth>` ☰
           ☰ `--deepen=<depth>` ☰
           ☰ `--shallow-since=<date>` ☰
           ☰ `--shallow-exclude=<revision>` ☰
           ☰ `--unshallow` ☰
           ☰ `--update-shallow` ☰
           ☰ `--negotiation-tip=<commit|glob>` ☰
           ☰ `--dry-run` ☰
      `-f` ☰ `--force` ☰
      `-k` ☰ `--keep` ☰
      `-p` ☰ `--prune` ☰
           ☰ `--no-tags` ☰
           ☰ `--refmap=<refspec>` ☰
      `-t` ☰ `--tags` ☰
      `-j` ☰ `--jobs=<n>` ☰
           ☰ `--set-upstream` ☰
           ☰ `--upload-pack <upload-pack>` ☰
           ☰ `--progress` ☰
      `-o` ☰ `--server-option=<option>` ☰
           ☰ `--show-forced-updates` ☰
           ☰ `--no-show-forced-updates` ☰
      `-4` ☰ `--ipv4` ☰
      `-6` ☰ `--ipv6` ☰

    table }

  }
  { Related to merging

    table { lll
           ☰ `--[no-]recurse-submodules[=yes|on-demand|no]` ☰
           ☰ `--commit`, `--no-commit` ☰
      `-e` ☰ `--edit`, `--no-edit` ☰
           ☰ `--cleanup=<mode>` ☰
           ☰ `--ff`, `--no-ff`, `--ff-only` ☰
      `-S` ☰ `--gpt-sign[=<keyid>]`, `--no-gpg-sign` ☰
           ☰ `--log[=<n>]`, `--no-log` ☰
           ☰ `--signoff`, `--no-signoff` ☰
      `-n` ☰ `--stat`, `--no-stat` ☰  Do or don't show a *diffstat* at the end of the merge. This value can also be configured with the option `merge.stat`.
           ☰ `--squash`, `--no-squash` ☰
           ☰ `--no-verify` ☰
      `-s` ☰ `--strategy=<strategy>` ☰
      `-X` ☰ `--strategy-option=<option>` ☰
           ☰ `--verify-signatures`, `--no-verify-signatures` ☰
           ☰ `--summary`, `--no-summary` ☰
           ☰ `--autostash`, `--no-autostash` ☰
           ☰ `--allow-unrelated-histories` ☰
      `-r` ☰ `--rebase[=false|true|merges|preserve|interactive]` ☰
           ☰ `--no-rebase` ☰
    table }
  }
  { Other

    table { lll
         `-q` ☰ `--quiet` ☰ This is passed to both underlying git-fetch to squelch reporting of during transfer, and underlying git-merge to squelch output during merging.
         `-v` ☰ `--verbose` ☰ Pass `--verbose` to `→ development/version-control-systems/git/commands/fetch` and → development/version-control-systems/git/commands/merge[`git merge`]
    table }
  }

}


sa:
  The `→ development/version-control-systems/git/options/http/sslCAInfo` → development/version-control-systems/git/options[config option].

  → development/version-control-systems/git/commands/push[`git push`]

  → development/version-control-systems/git/commands
