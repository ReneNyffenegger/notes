$ git diff

`git diff` show changes between
  • the → development/version-control-systems/git/working-tree[working tree] and the → development/version-control-systems/git/_git/index_[index]
  • the → development/version-control-systems/git/working-tree[working tree] and a → development/version-control-systems/git/objects/tree[tree]
  • the → development/version-control-systems/git/_git/index_[index] and a → development/version-control-systems/git/objects/tree[tree]
  • a → development/version-control-systems/git/objects/tree[tree] and another → development/version-control-systems/git/objects/tree[tree]
  • a → development/version-control-systems/git/objects/blob[blob object] and another → development/version-control-systems/git/objects/blob[blob object]
  • a (regular) file and another (regular) file

Show differences between two → development/version-control-systems/git/objects/commit[commits]:
code {
git diff 2a532db 5949ddb
code }

Use `--cached` to compare staging area with repository. `--staged` is a synonym for `--cached`. Without `--cached` (or `--staged`), `git diff` compares → development/version-control-systems/git/working-tree to repository:
code {
git diff --cached
code }

The following command shows the differences of a given file between its *current local HEAD* and the modified (uncommitted) changes to this file:
code {
git diff HEAD path/to/file.txt
code }

The diff between the original repository and the local HEAD(?):
code {
git diff  master  origin/master
code }



sa:

  → development/version-control-systems/git/commands/difftool[`git difftool`]

  → development/version-control-systems/git/commands

  The shell command `→ Linux/shell/commands/diff`.
