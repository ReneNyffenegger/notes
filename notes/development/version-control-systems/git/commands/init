$ git init

`git init` creates an empty git → development/version-control-systems/git/repository[repository] or reinitializes an existing one.

Without the `--bare` option, the created repository is called a → development/version-control-systems/git/working-directory.

The main purpose of executing `git init` in an existing → development/version-control-systems/git/repository is to
  • update added templates, or to
  • move the repository to another place (option `--separate-git-dir`).

{ Initialize (create) a new repository

  Create a new (and empty) directory and `cd` into it:
code {
PS> mkdir repo
PS> cd    repo
code }

  Make this directory a repository:
code {
PS> git init
Initialized empty Git repository in P:/ath/to/repo/.git/
code }

  The repository is stored in a directory named → development/version-control-systems/git/_git[`.git`]
  
  Destroy the repository:
code {
cd ..
rmdir -recurse --force repo
code }

}

sa:

  Executing `git init` installs some sample hook-scripts under → development/version-control-systems/git/_git/hooks[`.git/hooks`]. These scripts come with the suffix `.sample` which needs to be removed
  to make them operational.

  → http://renenyffenegger.ch/development/git-internals/init/index.html[Git internals: init]

  → development/version-control-systems/git/commands

  → Linux/fhs/usr/share/git-core/templates
