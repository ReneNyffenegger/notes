$ git push
@ push

Update remote → development/version-control-systems/git/ref[refs] along with associated → development/version-control-systems/git/objects[objects].

A `git push` does roughly the same as a → development/version-control-systems/git/commands/fetch[`git fetch`], but in the opposite direction.

A `git push`, contrary to → development/version-control-systems/git/commands/pull[`git pull`] never performs a → development/version-control-systems/git/merge.


Pushing a → development/version-control-systems/git/branch[branch] means to get the branch's head ref from a remote
→ development/version-control-systems/git/repository[repository], find out if it is a direct ancestor to the branch's local
head ref, and in that case, putting all objects, which are → development/version-control-systems/git/objects/commit#reachable[reachable] from the local head ref, and which are missing from the remote
repository, into the remote → development/version-control-systems/git/objects/database[object database], and updating the remote
head ref.
-
If the remote head is not an ancestor of the local head, the push fails.

{ -u / --set-upstream

code {
$ git → development/version-control-systems/git/commands/clone …
$ git → development/version-control-systems/git/commands/checkout -b V1.1
  … hack hack hack …
$ git → development/version-control-systems/git/commands/commit …
$ git push
fatal: The current branch V1.1 has no upstream branch.
To push the current branch and set the remote as upstream, use …

$ git push --set-upstream origin V1.1
code }

  

  Note, there is also the command → development/version-control-systems/git/commands/branch[`git branch --set-upstream`], which is deprecated.

}

sa:
 `→ development/version-control-systems/git/commands/pull`
