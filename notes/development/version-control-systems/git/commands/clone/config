$ git clone - Effects on the .git/config file

The purpose of the following snippets is to demonstrate the effect of → development/version-control-systems/git/commands/clone[`git clone`] on the
`→ development/version-control-systems/git/_git/config` file.

{ Create an empty repository

  First, we need to create a → development/version-control-systems/git/repository (→ development/version-control-systems/git/commands/init[`git init` etc]):
  gh|about-git|/commands/clone/config/init.ps1||

}
{ Add some content to the repo

  A file is → development/version-control-systems/git/commands/add[added] and → development/version-control-systems/git/commands/commit[commited]:
  gh|about-git|/commands/clone/config/add-file.ps1||

}
{ Cloning the repository:

  The repository is cloned:
  gh|about-git|/commands/clone/config/clone.ps1||

}
{ Content of .git/config

  gh|about-git|/commands/clone/config/cat-config.ps1||

  The content of `→ development/version-control-systems/git/_git/config` is:
code {
[core]
        repositoryformatversion = 0
        filemode = false
        bare = false
        logallrefupdates = true
        symlinks = false
        ignorecase = true
[remote "origin"]
        url = C:/…/git/commands/clone/config/repo
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
        remote = origin
        merge = refs/heads/master
code }

}

sa:

  → development/version-control-systems/git/commands/clone/include-personal-access-token-in-URL[Using a Personal Access Token in the URL] when cloning a repository.

  → development/version-control-systems/git/commands/clone[`git clone`]
