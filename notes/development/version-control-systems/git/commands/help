$ git help

Display help information about git or a → development/version-control-systems/git/commands[git command]

{ -a

 `git help -a` (or `--all`) prints all available → development/version-control-systems/git/commands[commands].

 `git help <command>` shows information about `<command>`. (For example by opening the help file in a → development/web/browser).

}
{ -g

 `git help -g` (or `--guides`) prints a list of *concept guides*:
code {
$ git help -g
The Git concept guides are:
   attributes          Defining attributes per path
   cli                 Git command-line interface and conventions
   core-tutorial       A Git core tutorial for developers
   credentials         Providing usernames and passwords to Git
   cvs-migration       Git for CVS users
   diffcore            Tweaking diff output
   everyday            A useful minimum set of commands for Everyday Git
   faq                 Frequently asked questions about using Git
   glossary            A Git Glossary
   hooks               Hooks used by Git
   ignore              Specifies intentionally untracked files to ignore
   modules             Defining submodule properties
   namespaces          Git namespaces
   remote-helpers      Helper programs to interact with remote repositories
   repository-layout   Git Repository Layout
   revisions           Specifying revisions and ranges for Git
   submodules          Mounting one repository inside another
   tutorial            A tutorial introduction to Git
   tutorial-2          A tutorial introduction to Git: part two
   workflows           An overview of recommended workflows with Git
…
code }

}
{ -c #git-help-c

 `git help -c` (or `--config`) lists all available → development/version-control-systems/git/options names.

}

sa:

  → development/version-control-systems/git/options/help[Git options in the help section]

  `git --help …`

  → development/version-control-systems/git/commands
