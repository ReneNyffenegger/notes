$ git difftool

`git difftool` uses → development/version-control-systems/git/commands/diff[`git diff`] to get differences, but displays them using common diff tools.
-
These «common diff tools» can be queried with
code {
git difftool --tool-help
code }

`git difftool` accepts the same options and arguments as → development/version-control-systems/git/commands/diff[`git diff`]

{ Specifying the executable to be run

  Start → development/vim[gvim] in diff mode for each file that has changed between the → development/version-control-systems/git/objects/commit[commits] that are identified with `2a532db` and `5949ddb`:
code {
git difftool --no-prompt --extcmd="gvim.exe -d"  2a532db 5949ddb
code }

}
{ Using --tool

  Seems like it's doing the same as above:
code {
git difftool --no-prompt --tool  gvimdiff 2a532db 5949ddb
code }

}

{ Configuring diff tool

  The default value for the `--tool` option can be configured with the `diff.tool` → development/version-control-systems/git/options[option]:
code {
→ development/version-control-systems/git/commands/config --global diff.tool gvimdiff
code }

  Do not prompt before starting the executable to show a difference (as though `--no-prompt` was used when invoking `git difftool`):
code {
git config --global difftool.prompt false
code }

}

{ Comparing directories

code {
git difftool --dir-diff --tool=… HEAD~ HEAD
code }

}


sa:

  

  → development/version-control-systems/git/commands/diff-files[`git diff-files`]

  → development/version-control-systems/git/commands
