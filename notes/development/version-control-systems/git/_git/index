$ .git (Git repository directory)
@ .git

The `.git` directory contains the revision history of a → development/version-control-systems/git/repository.


{ Initial files and directories

  The GIT directory is created with the `→ development/version-control-systems/git/commands/init` command.
  -
  This command will create the following files and subdirectories
    • The → development/version-control-systems/git/_git/objects[`object`] directory to store → development/version-control-systems/git/objects
    • The → development/version-control-systems/git/_git/refs/heads[`refs/heads`] directory
    • The → development/version-control-systems/git/_git/refs/tags[`refs/tags`] directory
    • The → development/version-control-systems/git/_git/HEAD[`HEAD`] file
    • The → development/version-control-systems/git/_git/config[`config`] file

 `git init` will also copy the content of so-called → development/version-control-systems/git/_git/_template-directory into the GIT directory.

}
{ Determine location of git dir

  The absolute location of a → development/version-control-systems/git/working-tree[working tree's] git directory can be determined with
code {
→ development/version-control-systems/git/commands/rev-parse --git-dir
code }

  See also → development/version-control-systems/git/working-tree#git-determine-dirs-working-tree[Determine interesting directories] of a
  working tree.

}
{ Structure #_git-dir-structure

   Some files and directories that might be found in the GIT-directory include:
code {
|   CHERRY_PICK_HEAD               | Records the commits that are being cherry-picked when executing 'git cherry-pick'
│   COMMIT_EDITMSG
│   config
│   description
│   FETCH_HEAD                     | The branch (and commit id?) of the remote repository from which the last 'git fetch' retrieved objects.
│   HEAD                           | The commit on which the changes in the working tree are based
│   index
|   MERGE_HEAD                     | Records the commits that are being merged by 'git merge' (Not available before executing git merge)
│   ORIG_HEAD                      | Value of HEAD before executing «drastic» commands so as to be able to undo the changes of such commands
│   packed-refs
|   pid                            | Process id of webserver if using gitweb?
│  
├───branches                       | (slightly) deprecated directory to store shorthands for URLs for git fetch, git pull and git push
├───gitweb                         | Used for «gitweb». Created, for example(?), when running → development/version-control-systems/git/commands/instaweb
│   │   gitweb_config.perl
│   │   lighttpd.conf              | → web/webserver/lighttpd configuration file
│   │
│   ├───lighttpd
│   │       error.log
│   │
│   └───tmp
├───hooks                          | Scripts to be invoked when certain events occur in a repository.
├───info
│       exclude
├───logs                           | Records changes to refs.
│   │   HEAD
│   │
│   └───refs
│       ├───heads
│       │       nameOfBranch       | Records changes to tip of branch named 'nameOfBranch'
│       ├───remotes
│       │   └───NameOfRemote       | A typical name for NameOfRemote remote is 'origin'
│       │       └───feature
│       │           └───version1
│       └───remotes
├───objects
│   ├───xx                         | xx are two hexadecimal characters, → development/version-control-systems/git/objects[git object] whose SHA-1  start with xx are stored under this directory
│   ├───info
│   └───pack
├───refs
│   ├───heads
│   │   └───remotes
│   ├───remotes
│   │   └───NameOfRemote           | Another remote
│   │       └───feature
│   │           └───version1
│   └───tags
│           rel.1.1
│           rel.1.2
│           rel.2.0
└───remotes                        | Lecacy way to store shorthands for URLs and default refnames to be used for interaction with «remote» repositories.
code }

}
{ Determining the .git directory

code {
→ development/version-control-systems/git/commands/rev-parse --git-dir
→ development/version-control-systems/git/commands/rev-parse --absolute-git-dir
code }

}

{ Finding files in git repository with find

  In order to find files in a → development/version-control-systems/git/repository[git repository] with
  → Linux/shell/commands/find, the directory `./.git` can be excluded with
  → Linux/shell/commands/find#find-prune[-prune].

}
{ GIT_DIR environment variable

  If the → development/environment-variable[environment variable] `GIT_DIR` is set, its value determines the location of the `.git` directory.

}


sa:

  The `core.repositoryformatversion` → development/version-control-systems/git/options.

  The → development/version-control-systems/git/commands#git-common-option[`--git-dir` command line option].
