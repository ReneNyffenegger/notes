$ .git/hooks

Hooks are customization scripts used by various → development/version-control-systems/git/commands[git commands]. These scripts allow a developer to add functionality
or checking.

A hook can abort a command if something doesn't meet a requirement.

When → development/version-control-systems/git/commands/init[`git init`] is executed, some sample hooks are installed. But they are initially disabled. In order to enable these, the `.sample` suffiex needs to be removed from the files.

The default directory for hooks is in the directory `hooks` below the → development/version-control-systems/git/_git[GIT directory (usually `.git`)]. This default can be changed with the
`core.hooksPath` → development/version-control-systems/git/options[option].

{ Commit related hooks

  table { ll
    `pre-commit` ☰ The first hook that is run, used to check the quality of the state to be commited. Returning non-zero aborts commit process.
    `prepare-commit-msg` ☰ Run before commit editor message is shown.
    `commit-msg` ☰ Has as parameter the path of the file that contains the commit message.
    `post-commit` ☰ Called when commit process is done.
  table }

}
{ Email related hooks


  table { ll
   `applypatch-msg` ☰
   `pre-applypatch` ☰ Run when `git am` is executed.
   `post-applypatch` ☰
  table }

}
{ Other client sidehooks

  table { ll

    `pre-rebase` ☰ 
    `post-rewrite` ☰ Run, for example, by `git commit --amend` or `git rebase` (but not `git filter-branch`)
    `post-checkout` ☰ Executed after running `git checkout`
    `post-merge` ☰ Executed after running `git merge`
    `pre-push` ☰ Run as part of `git-push` after the remote refs have been updated but before any objects have been transferred.
    `pre-auto-gc` ☰ Invoked before git's garbage collection is invoked (see also `git gc --auto`).

  table }

}
{ Server side hooks

  table { ll
   `pre-receive` ☰
   `update` ☰
   `post-receive` ☰
  table }

}
{ TODO

  table { ll
   `fsmonitor-watchman` ☰
   `post-update` ☰
   `pre-merge-commit` ☰
  table }
}

sa:
  → development/version-control-systems/git/GIT_COMMON_DIR

  → development/version-control-systems/git/_git#_git-dir-structure[`.git` directory structure]
