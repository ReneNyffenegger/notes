$ Adding my tq84 branch to github repositories


Clone forked → development/version-control-systems/git/repository.
code {
git → development/version-control-systems/git/commands/clone https://github.com/ReneNyffenegger/forked-repo
code }

Only one → development/version-control-systems/git/branch?
code {
git branch
code }

Create the `tq84` branch
code {
git checkout -b tq84
code }

Add → https://github.com/ReneNyffenegger/tq84-c-debug[tq84-c-debug] submodule.
code {
cd foo/bar/baz
git → development/version-control-systems/git/commands/submodule add https://github.com/ReneNyffenegger/tq84-c-debug
code }

Go back to the repositories root
code {
cd ../../..
code }

Note the added `.gitmodules` file:
code {
git → development/version-control-systems/git/commands/status .
code }

Commit:
code {
git → development/version-control-systems/git/commands/commit . -m "Added submodule tq84-c-debug"
code }

Push tq84 branch
code {
git → development/version-control-systems/git/commands/push -u origin tq84
code }

{ Synchronizing forked repo from original repository

code {
git → development/version-control-systems/git/commands/checkout master
git → development/version-control-systems/git/commands/pull https://github.com/OriginalOwner/repo 
git → development/version-control-systems/git/commands/push https://github.com/ReneNyffenegger/forked-repo
code }

code {
git → development/version-control-systems/git/commands/checkout tq84
git → development/version-control-systems/git/commands/merge master
code }

}
{ Empty submodule ...

Apparently, the submodule can still be empty on another machine.

The following git command might help:
code {
git submodule update --init --force --remote
code }

}
{ Cloning on anther machine

  After cloning, the tq84 branch seems not visble expcept when using `git branch -a`.

code {
git branch -a
code }

  Neverttheless, it *seems* it can be checked out:
code {
git checkout tq84
code }

}
sa:
  → development/version-control-systems/git/github
