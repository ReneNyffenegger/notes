$ GIT: Inspect each version of a file

The `→ Linux/kernel/source/Makefile` for the → Linux/kernel[Linux kernel] defines 5 variables at the beginning: → Linux/kernel/source/Makefile#linux-Makefile-version-vars[`VERSION`, `PATCHLEVEL` etc].

The following simple loop iterates over each version of the Makefile found in the → development/version-control-systems/git/repository[git repository]
and uses → development/version-control-systems/git/commands/checkout[`git checkout`] combined with `→ Linux/shell/commands/grep` to extract the values of these variables.

The → development/version-control-systems/git/objects/commit id and the values are then printed to → development/stdin-stdout-stderr[stdout]:
code {
filename=→ Linux/kernel/source/Makefile

for commit in $(→ development/version-control-systems/git/commands/log → development/version-control-systems/git/commands/_options/format-pretty[--pretty=format]:%H -- $filename); do

    → development/version-control-systems/git/commands/checkout[git checkout] -q $commit $filename

    version=$(     grep → Linux/shell/commands/grep#grep-P[-P] -o '(?<=^VERSION = ).*'      $filename)
    patchlevel=$(  grep → Linux/shell/commands/grep#grep-P[-P] -o '(?<=^PATCHLEVEL = ).*'   $filename)
    sublevel=$(    grep → Linux/shell/commands/grep#grep-P[-P] -o '(?<=^SUBLEVEL = ).*'     $filename)
    extraversion=$(grep → Linux/shell/commands/grep#grep-P[-P] -o '(?<=^EXTRAVERSION = ).*' $filename)
    name=$(        grep → Linux/shell/commands/grep#grep-P[-P] -o '(?<=^NAME = ).*'         $filename)

    printf "%s %d.%02d.%d%-5s %s\n" $commit $version $patchlevel $sublevel "$extraversion" "$name"
done

# reset the file to its state in the current commit
→ development/version-control-systems/git/commands/checkout[git checkout] HEAD $filename
code }
