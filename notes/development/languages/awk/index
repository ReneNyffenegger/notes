
code {
awk [POSIX or GNU style options] -f progfile [--] file …
awk [POSIX or GNU style options] [--] 'program' file …
code }

{ Options

  { POSIX options

    table { lll

`-f progfile` ☰            `--file=progfile` ☰
`-F fs` ☰                  `--field-separator=fs` ☰
`-v var=val` ☰             `--assign=var=val` ☰

   table }

  }

  { Other options?

    table { llll

     `-b` ☰                     `--characters-as-bytes` ☰ ☰
     `-c` ☰                     `--traditional` ☰ ☰
     `-C` ☰                     `--copyright` ☰ ☰
     `-d` ☰ `--dump-variables` ☰ `[file`] ☰
     `-D` ☰               `--debug` ☰ `[file`] ☰
     `-e` ☰  `--source=` ☰ `'program-text'` ☰
     `-E` ☰  `--exec=` ☰ `file` ☰ 
     `-g` ☰  `--gen-pot` ☰ ☰
     `-h` ☰                     `--help` ☰ ☰
     `-i` ☰ `--include=` ☰ `includefile` ☰
     `-l` ☰             `--load=` ☰ `library` ☰
     `-L` ☰       `--lint[=]` ☰ `[fatal|invalid|no-ext]` ☰
     `-M` ☰                     `--bignum` ☰ ☰
     `-N` ☰                     `--use-lc-numeric` ☰ ☰
     `-n` ☰ `--non-decimal-data` ☰ ☰
     `-o` ☰ `--pretty-print[=]` ☰ `[file]` ☰
     `-O` ☰ `--optimize` ☰ ☰
     `-p` ☰ `--profile[=]` ☰ `[file]` ☰
     `-P` ☰ `--posix` ☰ ☰
     `-r` ☰ `--re-interval` ☰ ☰
     `-s` ☰ `--no-optimize` ☰ ☰
     `-S` ☰ `--sandbox` ☰ ☰
     `-t` ☰ `--lint-old` ☰ ☰
     `-V` ☰ `--version` ☰ ☰

  table }

  }
}
{ Variables

  Some intersting variables include:
  table { lll
    `NR` ☰ The cumulative processed record number, starting with 1 ☰ `ls -1 | awk '{ printf("%2d %s\n", NR, $0) }'`
    `FNR` ☰ The record number of the currently processed file ☰
    `$n` ☰ The n-th field in the current record, for `n` = `0`, the entire record. `$FS` refers to the last field (see `NF`) ☰ `ls -l | awk '{ print $3 " " $9 }'`
    `NF` ☰ Number of fields ☰ `→ Linux/shell/commands/head -1 → Linux/fhs/etc/passwd | awk -F: '{ print NF }'`
    `FILENAME` ☰ Name of the current input file ☰
    `OFS` ☰ Output field separator ☰
  table }

}
{ Misc

  Unfortunately, `awk` does → https://stackoverflow.com/a/29458947/180275[not support Perl style regular expressions].

}

sa:

  → development/languages/awk/examples

 `→ Linux/shell/commands/cut`

  Using `awk` to create a → Linux/shell/commands/mount#mount-awk[left aligned output] of `→ Linux/shell/commands/mount`.

  Other → development/languages[programming languages] etc.

links:
  → https://github.com/ReneNyffenegger/about-awk
