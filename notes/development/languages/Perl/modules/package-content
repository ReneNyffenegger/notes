$ Perl module: package content

The content of an untarred Perl module package for `Foo::Bar::Baz` might look like so:
code {
├── bin
│   └── exec-foo-far-baz
├── Changes
├── lib
│   └── Foo
│       └── Bar
│           └── Baz.pm
├── Makefile.PL
├── MANIFEST
├── META.yml
├── README
└── t
    └── 01-basic.t
code }

Executable scripts under `./bin` are installed under → Linux/fhs/usr/local/lib.

The `*.pm` module files are (or might be) installed under → Linux/fhs/usr/local/share/perl/VER_SIO_N/index[/user/local/share/V.ER.SION/Foo/Bar/Baz.pm]

The only files that are strictly necessary are `Makefile.PL`, `MANIFEST` and `lib/Foo/Bar/Baz.pm`.

{ README

  The content of `README` should describe the purpose of a Perl module.

  → development/languages/Perl/CPAN shows this file's content so that potential users of the module can decide if they really need or want it.


}
{ INSTALL

  `INSTALL` should inform a user how the module is supposed to be installed.j

}
{ Makefile.PL

  `Makefile.PL` is a → development/languages/Perl[Perl] script that, when executed, creates a `Makefile`.

  `Makefile.PL` usually uses the method `WriteMakefile()` found in → development/languages/Perl/modules/ExtUtils/MakeMaker.

}
{ MANIFEST #manifest

  `MANIFEST` is a file that lists the files in a distribution.

  This file can be created and updated with `→ development/make manifest`.

  Related to → development/languages/Perl/modules/ExtUtils/Manifest

}
{ MANIFEST.SKIP

  `MANIFEST.SKIP` contains a → development/languages/Perl/regular-expressions[regular expression] per line. Files that are matched by the regexp are not
  included into the distributed file.

  Each file that matches one of these regular expression is not added to → #manifest[`MANIFEST`] when `make manifest` is executed.

  A regular expression might be commented with `#...`. Therefore, to match `#` these must be escaped: `\#`.

code {
\.git
\.swp$
Foo-Bar-.*\.tar\.gz
blib
README.md
MANIFEST\.bak$
Makefile$
Makefile.old
code }

}
{ META.json

  The `META.json` file describes the distribution, its contents and the requirement for building and installing the distribution.

  In older distributions, the file was called `META.yml`.

  Apparently, the `META.json` file is created with `make distdir`.

  There's also a `MYMETA.json` which is generated at *configure time* rather than at *release time*.

}
{ Changes #changes

  `Changes` logs the modifications to the module.

   The *format* is described in → development/languages/Perl/modules[Perl module] → development/languages/Perl/modules/CPAN/Changes/Spec[CPAN::Changes::Spec].

}
