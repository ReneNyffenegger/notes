$ Perl module LWP::UserAgent

gh|PerlModules|/LWP/UserAgent/script.pl||

{ Showing the request's and the response's headers

  The following example shows the headers that were sent with the request and the
  headers that the user agent received from the web server:
gh|PerlModules|/LWP/UserAgent/show-headers.pl||

}
{ $response->decoded_content

  A user agent can use the HTTP header *Accept-encoding* to indicate that it is prepared to receive compressed data from the server.

  If the server then chooses to send its data gzip'ed (which it is not required to do), it will send the header *Content-Encoding* with the value
  of the algorithm used for compression.

  The following example passes `gzip` with that header and checks whether the server has actually set the *Content-Encoding* header.

  If it did, the response will be taken from `$response->decoded_content` which contains the uncompressed data.

  gh|PerlModules|/LWP/UserAgent/decoded_content.pl||

}

sa:
  → development/languages/Perl/modules/index[Perl modules]

  The `get` function of `LWP::UserAgent` returns a → development/languages/Perl/modules/HTTP/Response[`HTTP::Response`] object.

  `LWP::UserAgent` needs (method `request()`) or creates (methods `get()`, `post()` etc) a → development/languages/Perl/modules/HTTP/Request[`HTTP::Request`] object to process a HTTP request.

  → development/languages/Perl/modules/HTTP/Async[`HTTP::Async`] can be used to download resources in parallel rather than sequential.
