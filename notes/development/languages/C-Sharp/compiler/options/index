$ C# compiler options

Compiler options (possibly except `@`) start with a slash (`/`) or a hyphen (`-`). Both are equivalent.

table { ll

   @ ☰
   addmodule ☰
   appconfig ☰
   baseaddress ☰
   bugreport ☰
   checked ☰
   codepage ☰
   → development/languages/C-Sharp/compiler/options/debug[debug] ☰
   → development/languages/C-Sharp/compiler/options/define[define] ☰ defines SYMBOLS to be queried in the source code with `#ifdef SYMBOLNAME`.
   delaysign ☰
   deterministic ☰
   doc ☰
   errorreport ☰ if and how compiler errors are reported to → Microsoft. Compare with *Windows Error Reporting (WER)*.
   filealign ☰
   fullpaths ☰
   help - ? ☰
   highentropyva ☰
   keycontainer ☰
   keyfile ☰
   langversion ☰
   lib ☰
   → development/languages/C-Sharp/compiler/options/link[link] ☰  `-link:/path/to/assembly.dll` makes the → Windows/development/COM type information in `assembly.dll` available to the project being compiled.
   linkresource ☰
   main ☰
   moduleassemblyname ☰
   noconfig ☰
   nologo ☰
   nostdlib ☰ prevent import of → Windows/dirs/Windows/Microsoft_NET/Framework64/mscorlib_dll[`mscorlib.dll`]
   nowarn ☰ compare with `-warn:n`
   nowin32manifest ☰
   optimize ☰
   out ☰
   pathmap ☰
   pdb ☰
   → development/languages/C-Sharp/compiler/options/platform[platform] ☰ specifies the platform (bitness etc.) of the produced file
   preferreduilang ☰
   publicsign ☰
   recurse ☰
   → development/languages/C-Sharp/compiler/options/reference[reference] ☰
   refout ☰
   refonly ☰
   resource ☰
   subsystemversion ☰
   unsafe ☰ allows to compile code that is denoted to be `unsafe`
   utf8output ☰
   warn ☰ Sets the warning level to 0 (least) through 4 (most). 4 is the default. Compare with `-nowarn` and `-warnaserror`.
   warnaserror ☰
   win32icon ☰
   win32manifest ☰
   win32res ☰
  

table }
