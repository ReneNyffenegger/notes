$ C# compiler options

Compiler options (possibly except `@`) start with a slash (`/`) or a hyphen (`-`). Both are equivalent.

table { lll

    ☰ ☰ → Windows/development/Microsoft-Build-Engine[MSBuild] syntax
   @ ☰ Specifies a response file that contins other compiler options to be used for this compilation ☰ ResponseFiles 
   addmodule ☰ Adds a module (which is created with `-target:module`) to this assembly ☰ AddModules
   appconfig ☰ Specifies an application configuration file containing assembly binding settings ☰ ApplicationConfiguration 
   baseaddress ☰ ☰
   bugreport ☰ ☰
   checked ☰  Specifies whether an integer arithmetic statement that results in a value that is outside the range of the data type causes a run-time exception ☰ CheckForOverflowUnderflow 
   checksumalgorithm ☰ Specifies algorithm for calculating source file checksum stored in the → Windows/development/Debugging/symbol-files[symbol file (PDB)] ☰ ChecksumAlgorithm
   codepage ☰ Specifies the codepage to use when opening source files. ☰ CodePage
   → development/languages/C-Sharp/compiler/options/debug[debug] ☰ Emits debugging information ☰ DebugType
   → development/languages/C-Sharp/compiler/options/define[define] ☰ Defines SYMBOLS to be queried in the source code with `#ifdef SYMBOLNAME`. ☰ DefineConstants
   delaysign ☰  Delay-sign the assembly using only the public portion of the strong name key. Compare with `-publicsign` ☰ DelaySign
   deterministic ☰ Makes sure that compiling the same source multiple times results in the exact byte stream ☰ Deterministic
   doc ☰ Generates XML doc file from `///` comments ☰ DocumentationFile 
   errorendlocation ☰ Lets the compiler output the column and line number of the end of each error message ☰ ErrorEndLocation
   errorlog ☰ Names a file that logs compiler and analyzer diagnostics ☰ ErrorLog
   errorreport ☰ if and how compiler errors are reported to → Microsoft. Compare with *Windows Error Reporting (WER)*. ☰
   filealign ☰ Specifies the alignment used for output file sections. ☰ FileAlignment 
   fullpaths ☰ Lets the compiler generate fully qualified paths ☰ GenerateFullPaths 
   help - ? ☰ ☰
   highentropyva ☰ Enables high-entropy Address Space Layout Randomization (ASLR) ☰ HighEntropyVA
   keycontainer ☰ Specifies a strong name key container ☰ KeyContainer
   keyfile ☰ Specifies a strong name key file ☰ KeyFile
   langversion ☰ Specifies the language version (such as `default`, `latest` (=`latestmajor`), `preview`, `10.0` etc.) ☰ LangVersion 
   lib ☰ Specifies additional directories to search in for references. ☰ AdditionalLibPaths
   → development/languages/C-Sharp/compiler/options/link[link] ☰ `-link:/path/to/assembly.dll` makes the → Windows/development/COM type information in `assembly.dll` available to the project being compiled. ☰ EmbedInteropTypes
   linkresource ☰ Links the specified resource to this assembly ☰ LinkResources
   main ☰ Specifies the type that contains the entry point ☰ MainEntryPoint, StartupObject 
   moduleassemblyname ☰ Names the assembly that this module will be a part of. ☰ ModuleAssemblyName
   noconfig ☰ Causes the `CSC.RSP` file (which lists all assemblies that are shipped with the .NET framework) not to be included ☰ NoConfig
   nologo ☰ Suppresses the copyright message ☰ NoLogo
   nostdlib ☰ prevents importing the standard library → Windows/dirs/Windows/Microsoft_NET/Framework64/mscorlib_dll[`mscorlib.dll`] ☰ NoStandardLib
   nowarn ☰ compare with `-warn:n` ☰
   nowin32manifest ☰ ☰
   nullable ☰ Enable nullable context or nullable warning ☰ Nullable
   optimize ☰ Enables code optimazation ☰ Optimize
   out ☰ Name of the assembly being generated ☰ OutputAssembly
   pathmap ☰ Specifies a mapping for source path names output by the compiler. ☰ PathMap
   pdb ☰ Specifies the debug information file ☰ PdbFile
   → development/languages/C-Sharp/compiler/options/platform[platform] ☰ Specifies which version of the CLR can run the produced assembly ☰ PlatformTarget
   preferreduilang ☰ Specifies the preferred output language name. ☰ PreferredUILang
   publicsign ☰ Publically signs the assembly. Compare with `-delaysign` ☰ PublicSign
   recurse ☰ ☰
   → development/languages/C-Sharp/compiler/options/reference[reference] ☰ Specifies an assembly with metadata to be referenced ☰ References
   refout ☰ Generates a reference assembly ☰ ProduceReferenceAssembly
   refonly ☰ ☰
   reportanalyzer ☰ Reports additional analyzer information such as execution time ☰ ReportAnalyzer
   resource ☰ Embed the specified resource. Can be abbreviated with `-res` ☰ Resources
   ruleset ☰ Specifies a ruleset file that disables specific diagnostics ☰ CodeAnalysisRuleSet
   subsystemversion ☰ Specifies subsystem version of this assembly ☰ SubsystemVersion
   target ☰ For example used to create a → Windows/development/Portable-Executable/DLL (`-target:library`). ☰ TargetType
   unsafe ☰ Allows to compile code that is denoted to be `unsafe` ☰ AllowUnsafeBlocks 
   utf8output ☰ Lets the compiler print messages in UTF-8 ☰ Utf8Output
   warn ☰ Sets the warning level to 0 (least) through 4 (most). 4 is the default. Compare with `-nowarn` and `-warnaserror`. ☰ WarningLevel
   warnaserror ☰ Treat all warnings as error ☰ TreatWarningsAsErrors, WarningsAsErrors, WarningsNotAsErrors
   win32icon ☰ References metadata from the specified assembly file or files ☰ Win32Icon
   win32manifest ☰ Specifies a Win32 manifest file (`.xml`) ☰ Win32Manifest
   win32res ☰ Specifies a Win32 resource file ☰ Win32Resource
  

table }
