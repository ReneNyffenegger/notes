$ Examples for Visual Basic for Application accessing the Windows API

The examples need the declarations of the respective Windwos API functions and memory structures
which are found → development/languages/VBA/Win-API[here].

→ development/languages/VBA/Win-API/examples/CreateWindowEx[hello World] uses `CreateWindowEx` to create a window and write *hello world* into it. Apart from that, it does nothing except waiting
for the window to be destroyed.

→ development/languages/VBA/Win-API/examples/GetUserName[Determining the user] associated with the current thread with `GetUserName`.

→ development/languages/VBA/Win-API/examples/Sleep[Sleeping] for a specified duration in milliseconds.

→ development/languages/VBA/Win-API/examples/ShellExecute[ShellExecute] can be used to open a specific file with its default
application or to start a specific application.

→ development/languages/VBA/Win-API/examples/GetWindowRect[Determining the dimensions of a window] with `GetWindowRect`.

→ development/languages/VBA/Win-API/examples/GetLocaleInfo[GetLocaleInfo].

→ development/languages/VBA/Win-API/examples/GetComputerName[Determining the Net Bios Name] of the computer with `GetComputerName`.

→ development/languages/VBA/Win-API/examples/GetTempPath[GetTempPath] returns the name of the temporary directory.

→ development/languages/VBA/Win-API/examples/GetTempFileName[GetTempFileName] can be used to create a *temporary* (and if desired: unique) filename.

→ development/languages/VBA/Win-API/examples/clipboard[Examples related to the clipboard].

→ development/languages/VBA/Win-API/examples/Beep[Beep] sounds a given frequency for a given period of time.

→ development/languages/VBA/Win-API/examples/FormatMessage[FormatMessage] shows how `FormatMessage` can be used to create the text for a Windows error number.

→ development/languages/VBA/Win-API/examples/SendMessage[SendMessage] sends messages (such as WM_SETTEXT) to other windows.

→ development/languages/VBA/Win-API/examples/SetWindowPos[SetWindowPos] with `HWND_TOPMOST` places a window permanently to the
top most position so that is always visible.

→ development/languages/VBA/Win-API/examples/EnumWindows[EnumWindows] iterates over all windows and calls a callback function.
-
→ development/languages/VBA/Win-API/examples/EnumChildWindows[EnumChildWindows] iterates over all descendents of a window, not only its (immediate) children.

This example uses → development/languages/VBA/Win-API/examples/FindWindow[FindWindowEx] to find a notepad's edit control.

→ development/languages/VBA/Win-API/examples/VkKeyScanEx[VkKeyScanEx] can be used to determine what a user would have to type on his keyboard so that it results in a desired character.
This can then be used in → development/languages/VBA/Win-API/examples/SendInput[SendInput].

→ development/languages/VBA/Win-API/examples/SendInput[SendInput] simulates a user pressing some keys to start notepad and enter some text into it.

→ development/languages/VBA/Win-API/examples/key-press[key press]

→ development/languages/VBA/Win-API/examples/SetWindowsHookEx[SetWindowsHookEx]

This example uses → development/languages/VBA/Win-API/examples/EnumWindows[`EnumWkindows`] to find a window by the text it contains in the
title and then calls `ShowWindow` followed by `SetForeGroundWindow` to → development/languages/VBA/Win-API/examples/Bring-window-to-top[bring it to the top].
