$ VBA: Conditional compilation: preprocessing the source code with #if … #end if

The → development/languages/VBA/compiler-directives[VBA compiler directives] `#if … then` and `#end if` allow to only compile the respective enclosed portions of source code if a certain condition is defined.

These compiler directives act similar to the → development/languages/C-C-plus-plus/preprocessor/ifdef[`#ifdef`] preprocessor directive in → development/languages/C-C-plus-plus[C and C++].

gh|about-VBA|/compiler-directives/conditional-compilation/if-then-else.bas||

{ «Commenting out» sections of code

 `#if 0 then … #end if` allows to quickly «comment out» a section of code:

  gh|about-VBA|/compiler-directives/conditional-compilation/if-0.bas||

  The «commented» section of the code can be included again by changing the `0` to `1`.

}
{ Nesting directives

  It's possible to nest `#if … #end if` statements:
  gh|about-VBA|/compiler-directives/conditional-compilation/nested.vb||

}
sa:

  The → development/languages/VBA/compiler-directives/winX[predefined `win64`, `win32` and `win16`] and
  → development/languages/VBA/compiler-directives/vbaX[`vba6` and `vba7`] compiler directive constants.

  The → development/languages/VBA/language/statements/if[VBA `if` statement]

  → development/languages/VBA[Visual Basic for Application]
