

Apparently, `WinHttp.WinHttpRequest.5.1` allows for greater control over → development/web/HTTP requests than `MSXML2.ServerXMLHTTP`.

{ Adding reference for Microsoft WinHTTP Services

  In order to programatically add the reference in a VBA project, the following code might be used:
code {
call application.VBE.activeVBProject.references.addFromGuid("{662901fc-6951-4854-9eb2-d9a2570f2b2e}", 5, 1)
code }

}

{ GET request #winhttp-GET

  The following → development/languages/VBA[Visual Basic for Application] example tries to make a → development/web/HTTP GET request.

  gh|about-VBA|/object-libraries/Windows-HTTP-Services/GET.bas||

  Compare with the corresponding → development/languages/VBA/Useful-object-libraries/MSXML#msxml-GET[MSXML example].

}
{ POST request

  A POST request is formulated similarly to a GET request with the POST's body passed as parameter to the `.send` method.

}
{ setRequestHeader

code {
httpReq.setRequestHeader "Cookie", "ReqClientId=4c8d9896-6321-4f05-3aef-737536cd1882"
code }

  Apparently, `setRequestHeader` can only be called *after* `open()` was called.

}
{ setAutoLogonPolicy

 `setAutoLogonPolicy` sets the *automatic logon policy* to one of the following possible values:
   • `autoLogonPolicy_always`
   • `autoLogonPolicy_never`
   • `autoLogonPolicy_onlyIfBypassProxy`

code {
httpReq.setAutoLogonPolicy autoLogonPolicy_always
code }

  Setting the logon policy is sometimes required if the → web/webserver[HTTP server] requires → development/web/HTTP/authentication[authentication]. (If the server requests the client to be authenticated, it sends
  the 401 → development/web/HTTP/status-code.

}

sa:
  → development/languages/VBA/Useful-object-libraries

  → development/web/HTTP
