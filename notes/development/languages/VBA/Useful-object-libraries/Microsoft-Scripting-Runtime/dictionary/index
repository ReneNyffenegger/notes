$ VBA: Microsoft Scripting Runtime - dictionary

The → development/languages/VBA/Useful-object-libraries/Microsoft-Scripting-Runtime[Scripting Runtime] has a *dictionary* object which allows to index variables by keys or numbers. In other
→ development/languages[programming languages], this feature is also referred to as *hashes* or *associative arrays*.

In order to use the `dictionary` object (or the scripting runtime for that mattter), the respective reference needs to be added:
code {
thisWorkbook.→ Microsoft/Office/Visual-Basic-Editor/Object-Model/VBProject[vbProject].→ Microsoft/Office/Visual-Basic-Editor/Object-Model/Reference[references].addFromGuid _
        → development/UUID-GUID[GUID]   :="{420B2830-E718-11CF-893D-00A0C9054228}" , _
        major  :=  1                                      , _
        minor  :=  0
code }

{ Adding and removing keys

  An attempt to add an already existing key throws an → development/languages/VBA/language/error_handling[error] with number 457.
  -
  An attempt to remove an unexisting key throws an error with number 32811.

  gh|about-VBA|/object-libraries/microsoft-scripting-runtime/dictionary/add-remove.bas||

}
{ removeAll

  All keys of a given dictionary can be removed with `removeAll`:

  gh|about-VBA|/object-libraries/microsoft-scripting-runtime/dictionary/removeAll.bas||

}
{ Determine if key is present #vba-dictionary-isEmpty

  → development/languages/VBA/functions#vba-isEmpty[`isEmpty(dict, key)`] allows to check whether a key is present in the dictionary:

  gh|about-VBA|/object-libraries/microsoft-scripting-runtime/dictionary/isEmpty.bas||

}
{ for each in #vba-dictionary-for-each-in

  gh|about-VBA|/object-libraries/microsoft-scripting-runtime/dictionary/for-each-in.bas||
  
  See also → development/languages/VBA/collection#vba-collection-for-each[for each in] on collections 

}
{ uBound and lBound #vba-dictionary-ulBound

  → development/languages/VBA/functions/lBound-uBound[`lBound` and `uBound`] can be applied on a dictionary's `items` and `keys`:

   gh|about-VBA|/object-libraries/microsoft-scripting-runtime/dictionary/luBound.bas||

}

sa:

  A dictionary can not only store → development/languages/VBA/language/datatypes/object[objects], it can even be indexed by objects,
  → development/languages/VBA/Useful-object-libraries/Microsoft-Scripting-Runtime/dictionary/obj#vba-dict-key-obj[see here].

  → development/languages/VBA/Useful-object-libraries/Microsoft-Scripting-Runtime/index

  → https://github.com/VBA-tools/VBA-Dictionary[VBA-Dictionary (github)] is a *drop-in replacement* for `Scripting.Dictionary` that promises to behave exactly the same.
