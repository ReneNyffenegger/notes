$ VBA statement: dim
@ dim

The `dim` statement allows to declare the → development/languages/VBA/language/datatypes[data type] of → development/languages/VBA/language/variables[variables].
-
Don't confuse `dim` with → development/languages/VBA/language/statements/declare[`declare`].

The `→ development/languages/VBA/language/statements/option/explicit[`option explicit`] statement ensures that variables are declared with a `dim` statement.

In order to declare a global variable, the → development/languages/VBA/language/statements/public[`public`] statement is needed.

{ dim … as new … #vba-dim-as-new

  The following special construct declare and initializes an object-→ development/languages/VBA/language/variables[variable] in one statement:
code {
dim obj as new → development/languages/VBA/language/classes[someClass]
code }

  However, the object is initialized only when it is first referenced, see
  → development/languages/VBA/language/classes/constructor-destructor/beware-of-dim-as-new[beware of the `dim … as new …` statement].

}


sa:
  
  The → development/languages/VBA/language/statements/const[`const`] statement.

  → development/languages/VBA/language/statements
