$ VBA statements

table { ll

→ development/languages/VBA/language/statements/appActivate[appActivate] ☰ Activates the window with a given title (caption) or taks id.
beep ☰ Makes some noise, possibly in order to get the attention of a user.
→ development/languages/VBA/language/statements/call[`call`] ☰ To enter (»call«) a → development/languages/VBA/language/subs-and-functions[sub], a function or a procedure in a DLL
chdir ☰ Specifies the new current working dir.
chdrive ☰ Specifies the new current drive.
close ☰  Closes an input or output file.
→ development/languages/VBA/language/statements/const[`const`] ☰  → development/languages/VBA/language/statements/dim[Declares] a constant value.
date ☰ Sets the current system date. Compare with `time`.
→ development/languages/VBA/language/statements/declare[`declare`] ☰ Used to locate and call functions in → Windows/development/Portable-Executable/DLL[DLLs].
deleteSetting ☰ Deletes an entry in the Windows/registry[registry]. See also `saveSetting`.
→ development/languages/VBA/language/statements/deftype[`deftype`] ☰ Specifies the default → development/languages/VBA/language/datatypes[datatype] at module level.
→ development/languages/VBA/language/statements/dim[`dim`] ☰  Declares → development/languages/VBA/language/variables[variables] and associates them with a → development/languages/VBA/language/datatypes[datatype].
→ development/languages/VBA/language/statements/do-while[`do … loop`] ☰ 
→ development/languages/VBA/language/statements/end[`end`] ☰ Ends some blocks (→ development/languages/VBA/language/subs-and-functions[subs/functions], → development/languages/VBA/language/statements/if[`if`] statements etc. Compare with `exit`.
→ development/languages/VBA/language/statements/enum[`enum`] ☰ Declares an enumeration type.
erase ☰ Re-initializes the elements in an → development/languages/VBA/language/arrays[array].
error ☰ Simulates an error.
event ☰ Declares an event. See also → development/languages/VBA/language/statements/raiseEvent[`raiseEvent`]
exit ☰ Exits some kind of block. Compare with → development/languages/VBA/language/statements/end[`end`].
→ development/languages/VBA/language/statements/exit#vba-exit-for[`exit for`] ☰ 
filecopy ☰ Copies a file.
→ development/languages/VBA/language/statements/for[`for`] (TODO: for each … next, for … next) ☰ 
→ development/languages/VBA/language/statements/for#vba-for-each[`for each`] ☰ Iterates over items in a → development/languages/VBA/language/arrays[array] or a collection.
function ☰ 
get ☰ Reads data from a file.
gosub … return ☰ Calls a *subroutine* with a sub/function.
goto ☰ Similar to `gosub` but does not allow for a `return` statement.
→ development/languages/VBA/language/statements/if (if … then / if … then … else) ☰ 
implements ☰ Used in connection with → development/languages/VBA/language/interfaces/index[interfaces].
→ development/languages/VBA/language/statements/input[`input#`] ☰ Reads from a file.
→ development/languages/VBA/language/statements/kill[`kill`] ☰ Deletes one or more file (with wildcards)
let ☰  Assignes a value to a variable. `let` is optional.
line input# ☰  Reads a line from a (text) file.
load ☰ 
lock, unlock ☰ 
lset ☰ 
mid ☰ Replaces characters within (in the *middle*) of a string-variable.
mkdir ☰ Creates a directory.
name ☰ Renames files and directories.
→ development/languages/VBA/language/statements/on-error[`on error`] ☰ Poor man's error handling
on...gosub, on...goto ☰ 
→ development/languages/VBA/language/statements/open ☰ Open a file. See also `reset`.
option base ☰ Specifies the default number for the first element in an → development/languages/VBA/language/arrays[array]
→ development/languages/VBA/language/statements/option/compare[`option compare`] ☰ Specifies how strings are compared: binary (case sensitive) or text (case insenstive).
→ development/languages/VBA/language/statements/option/explicit[`option explicit`] ☰ Requires variables to be declared with → development/languages/VBA/language/statements/dim[`dim`].
option private ☰ 
→ development/languages/VBA/language/statements/print ☰  Writes to a file. Compare with `put#`
private ☰ 
property get ☰ 
property let ☰ 
property set ☰ 
→ development/languages/VBA/language/statements/public[`public`] ☰ declares global → development/languages/VBA/language/variables[variables].
put ☰ Writes to a file. Compare with `print`.
→ development/languages/VBA/language/statements/raiseEvent[`raiseEvent`] ☰ Raises an event (that was declared with `event`)
randomize ☰ Initializes the random number generator.
redim ☰ Re-dimensions an → development/languages/VBA/language/arrays[array].
rem ☰ Starts a comment (remark). The apostrophe can also be used instead.
reset ☰ Closes all files that were opened with `open`.
→ development/languages/VBA/language/statements/resume[`resume`] ☰ Resumes (normal?) control flow after an error was handled.
rmdir ☰ Removes a directory.
rset ☰ 
saveSetting ☰ Stores a value in the → Windows/registry[registry]. See also `deleteSetting`.
seek ☰ 
→ development/languages/VBA/language/statements/select ☰ 
→ development/languages/VBA/language/statements/sendKeys[`sendKeys`] ☰  Simulates typing into the active window
→ development/languages/VBA/language/statements/set[`set`] ☰ Might call → Windows/development/COM/IUnknown#iunknown-addref[`AddRef`] of the object's → development/languages/VBA/IUnknown[`IUnknown`].
setattr ☰ Sets a file's attributes (such as read only, hidden etc.)
static ☰ Declares a static value in a → development/languages/VBA/language/subs-and-functions[sub/function]. Such variables keep their value accross calls.
stop ☰ Stops execution (but does not → development/languages/VBA/language/statements/end[`end`] it).
sub ☰ 
time ☰ Sets the copmuter system time. Compare with `date`.
`type` ☰ Creates a → development/languages/VBA/language/datatypes/user-defined[user defined datatype].
unload ☰ 
→ development/languages/VBA/language/statements/while[`while...wend`] ☰ Loop over a series of statements as long a given condition is → development/languages/VBA/language/datatypes/boolean[`true`].
width # ☰ 
with ☰ 
→ development/languages/VBA/language/statements/write[`write#`] ☰ writes *machine-readable* text to files.

table }

sa:

  → development/languages/VBA/language
