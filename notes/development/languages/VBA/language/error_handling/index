$ VBA error handling
@ error handling


→ development/languages/VBA/language/error_handling/erl

{ Error handler Terminology

  An *error handler* is neither a → development/languages/VBA/language/subs-and-functions[sub nor a function], rather, its a section of a sub or function that starts
  with a *label*.

  Such an *error handler* is said to be ~enabled~ if was turned on with a → development/languages/VBA/language/error_handling/on_error_goto[`on error goto <label>`] statement.

  When an enabled error handler *is handling* an error, the error handler is said to be ~active~.

}
{ Error handling policy of a sub or function #vba-error-handling-policy

  A → development/languages/VBA/language/subs-and-functions[sub or function] runs under a *error handling policy*.

  The policy that is in effect when a *runtime error* occurs specifies how that error is handled.

  VBA has five policies:
    • Default: stop current procedure andn return the error object (→ development/languages/VBA/objects/err[`err`]) to the calling procedure and proceed according to calling procedure's error policy.
    • Resume next: execute next → development/languages/VBA/language/statements[statement].
    • Goto: Set current procedure's policy to *default* and continue at the *label* that is associated with → development/languages/VBA/language/error_handling/on_error_goto[`on error goto`].
    • Retry 
    • Ignore
    • Terminate

  A sub's or function's error handling policy is changed iwth the → development/languages/VBA/language/statements/on-error[`on error`] statement.

}

sa:

  The → development/languages/VBA/language/statements/on-error[`on error`] and the
  → development/languages/VBA/language/statements/resume[`resume`] statements.

  The VBA → development/languages/VBA/objects/err[`err`] object.

  → development/languages/VBA/language
