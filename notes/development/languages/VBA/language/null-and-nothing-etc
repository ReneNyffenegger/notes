$ VBA: null, nothing and more (or less)

{ nothing #vba-nothing

 `nothing` is a → development/languages/VBA/language/identifier/literal[literal identifier] that is only applicable to → development/languages/VBA/language/variables[variables] that are declared as → development/languages/VBA/language/datatypes/object[objects]
 or → development/languages/VBA/language/datatypes/variant[variant].

 The value `nothing` represents an object whose *object reference* (which seems to be a memory address) is 0.

? An object variable is considered *nothing* if its reference count is zero. For such variables, → development/languages/VBA/functions/objPtr[`objPtr`] returns 0.

  { Checking if an object is nothing

    There is no `isNothing()` function in VBA (see → development/languages/VBA/functions/isX[`is…()`] functions).

    An object can be tested for nothingness with the `is nothing` construct:
code {
if obj is nothing then
   …
end if
code }

    The opposite  is possible with `not obj is nothing` (not with `obj is not nothing`):
code {
if not obj is nothing then
   …
end if
code }

    Also, the function → development/languages/VBA/functions/typeName[`typeName(obj)`] returns the → development/languages/VBA/language/datatypes/string[string] `"Nothing"` if `obj` is `nothing`.

  }

  { Set obj = Nothing | IUnknown::Release

    Setting an object variable to nothing (`set obj = nothing`) is basically the same as calling → Windows/development/COM/IUnknown#iunknown-release[`IUnknown::Release`] for the object.

  }

}
{ empty #vba-empty

  The value of a (→ development/languages/VBA/language/datatypes/variant[variant]) variable is empty if it has not yet been assigned a value. Thus,
  empty signals that the variable is not initialized.

  Such a variable evaluates to `0` (zero) in numeric and to `""` (empty string) in string context.

  In order to test whether a variant is empty, the special function → development/languages/VBA/functions#vba-isEmpty[`isEmpty(…)`] can be used.

 `empty` (like `nothing`) is a → development/languages/VBA/language/identifier/literal[literal identifier].

  See also the → development/languages/VBA/language/subs-and-functions/optional-parameters/keyword-isMissing[`isMissing()`] function.

  { TODO

    What is the relationship to `vbEmpty`?

  }

}
{ null #vba-null

  The value `null` indicates that a variable contains invalid and/or inexistent data.

  The `null` value can only be assigned to a → development/languages/VBA/language/datatypes/variant[variant] variable.

  Any operation that involves null values evaluates to null.

  gh|about-VBA|/language/null-and-nothing/null.bas||

  Compare with the → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/DBNull[`System.DBNull`] and the → development/databases/SQL/data-types/null[SQL `null` value].

  { Checking for a null value

    To determine if a variable is `null`, the → development/languages/VBA/functions[function] `isNull(…)` is used:
code {
if isNull(v) t hen
   …
end if
code }

  }
  { TODO

    What is the relationship to `vbNull`.

  }

}
{ TODO

  There is even a `vbNullString` and a `vbNullChar`

}
sa:
  → development/languages/VBA/language/subs-and-functions/optional-parameters/keyword-isMissing[`isMissing()`]

  → development/languages/VBA/language/error_handling#vba-runtime-errors[Runtime error] 94 (Invalid use of Null)
