$ VBA: interfaces

{ Iexample

  An interface is a class file that contains *stubs* of functions and subs. Within this file, there is no language construct (such as a `interface` keyword) that indicates that this is an interface.

  gh|about-VBA|/language/interfaces/example/Iexample.cls||

}
{ Implementing the interface

  The following two classes (named `Foo` and `Bar`) implement the interface.

  The source code requires the keyword `implements`, followed by the name of the interface, that a class wants to implement.

  The methods that are declared in the interface have a prefix with the name of the interface and an underscore. In this example, this
  is `IExample_aSub` and `IExample_aFunc`.

  gh|about-VBA|/language/interfaces/example/Foo.cls||

  gh|about-VBA|/language/interfaces/example/Bar.cls||

}
{ Using the interfaces

  When using interfaces, the variables that store an object that implements an interface can be declared with the name name of the interface: `dim ex_1 as Iexample` and assigned a new implementation of that interface
  with `set ex_1 = new Foo`.

  gh|about-VBA|/language/interfaces/example/main.bas||

}

sa:
  → development/languages/VBA/language/classes[VBA classes]

  → development/languages/VBA/language

links:
  Vitosh: → https://www.vitoshacademy.com/vba-interfaces-in-vba-how-and-why[VBA – Interfaces in VBA How And Why?] and the corresponding
  → https://github.com/Vitosh/VBA_personal/tree/master/Interfaces[github repository].
