$ VBA operators

→ development/languages/VBA has two kinds of operators:
  • *Unary* operators with *prefix notation* (such as `- syz`)
  • *Binary* operators with *infix notation* (such as `foo + bar`)

{ and

  The `and` operator can be used to check whether a specific bit is set
  gh|about-VBA|/language/operators/and.bas||

}
{ addressOf

  The → development/languages/VBA/language/operators/addressOf[`addressOf`] operator evaluates to the address of the
  name of the → development/languages/VBA/language/subs-and-functions[sub/function] that follows it.
  -
  It is usually used for → development/languages/VBA/Win-API[Win API] callbacks.

}
{ like #vba-like

  `like` allows to perform text-pattern matching. It is still far from → development/languages/VBA/regular-expressions[regular expressions].

  gh|about-VBA|/language/operators/like.bas||

}
{ Other operators

  `-`
  
  `&`
  
  `*`
  
  `/`
  
  `\`
  
  `^`
  
  `+`
  
  `=`
  
  `arithmetic`
  
  `comparison`
  
  `concatenation`
  
  `eqv`
  
  `imp`
  
  `is`
  
  `logical`
  
  `mod`

  → development/languages/VBA/language/operators/new[`new`]
  
  `not`
  
  `or`
  
  `xor`

}

sa:
  → development/languages/VBA/language[VBA].
