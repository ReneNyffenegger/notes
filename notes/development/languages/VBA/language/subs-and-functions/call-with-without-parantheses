$ VBA: Calling a sub or function with or without parentheses

When calling → development/languages/VBA/language/subs-and-functions[a sub or a function] in a → development/languages/VBA[VBA] program, there are cases when parentheses
are required and cases when they are not allowed and cases when either is fine.

{ Sub and function without assigning return value

  The rules for parentheses are the same for functions and subs *if* the return value of a function is not assigned to a → development/languages/VBA/language/variables[variable].

  In this case, the following rules apply
  table { llll
       ☰  ~No parameters~ ☰ ~1 parameter~ ☰ ~2 or more parameters~
    With → development/languages/VBA/language/statements/call[`call` statement] ☰ optional ☰ required ☰ required
    Without → development/languages/VBA/language/statements/call[`call` statement] ☰ not allowed ☰ optional ☰ not allowed

  table }

}
{ Assigning return value of function

  If the return value of a function is assigned to a function, the rules are the same as if using the `call` statement:
  table { lll
       ~No parameters~ ☰ ~1 parameter~ ☰ ~2 or more parameters~
      optional ☰ required ☰ required 
  table }

}
{ Basic test case

  These rules can be verified with this simple → development/languages/VBA[VBA] code snippet:
  gh|about-VBA|/language/subs-and-functions/call-with-without-parantheses/basics.bas||

}

