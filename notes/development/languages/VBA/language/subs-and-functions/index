$ VBA: subs and functions

  → development/languages/VBA/language/subs-and-functions/optional-parameters[optional parameters]

  → development/languages/VBA/language/subs-and-functions/returning-values[returning values]

  → development/languages/VBA/language/subs-and-functions/byVal-byRef[byVal / byRef]


{ Returning from functions

  Although there seems to be a `return` statement in VBA (in order to return to a `goto`), the way to return from a function is to use
 `exit function`.

  Exiting a sub or function (`exit sub`, `exit function`, `end sub`, `end function`) → development/languages/VBA/objects/err#clearing-err-object[clears the `err` object].

}
{ Dynamicall calling subs

  See → Microsoft/Office/Excel/Object-Model/Application#excel-application-run[application.run] and
  → development/languages/VBA/functions#vba-callByName[`callByName`].

}
sa:
  → development/languages/VBA/language/statements/call

  → development/languages/VBA/language/subs-and-functions/parameters[Function/sub parameters]

  → development/languages/VBA/language/subs-and-functions/property[`property set` and `get` functions].

  Subs and functions can be described with the → development/languages/VBA/attribute/vb_description[`VB_Description`] attribute.

  → development/languages/VBA/language/arrays/pass-to-func[Passing arrays] to functions.

  A `sub` or `function` runs under a specific → development/languages/VBA/language/error_handling#vba-error-handling-policy[error handling policy].
