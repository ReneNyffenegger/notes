$ VBA: date and time related functions

date

→ development/languages/VBA/functions/dateAdd[dateAdd] adds an time-interval to a date.

dateDiff

datePart

`dt = → development/languages/VBA/functions/time-date/dateSerial-timeSerial[dateSerial](yr, mn, dy)`

`dt = dateValue("August 28, 1970")`

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`day`]

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`minute`]

fileDateTime

formatDateTime

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`hour`]

isDate

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`month`]

monthName

→ development/languages/VBA/functions#vba-now[`now()`]

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`second`]

time

→ development/languages/VBA/functions/timer[timer]

`→ development/languages/VBA/functions/time-date/dateSerial-timeSerial[timeSerial](hr, mi, ss)`

timeValue

weekday

weekdayName

→ development/languages/VBA/functions/time-date/year-month-day-hour-minute-second[`year`]

{ Determine first and last day of a month

code {
option explicit

sub main() ' {
    dim dt as date
    dt = now()

    debug.print "First day of month is: " & first_of_month(dt)
    debug.print "Last day of month is:  " & last_of_month(dt)
end sub ' }

function first_of_month(dt as date) as date ' {
    first_of_month = dateSerial(year(dt), month(dt), 1)
end function ' }

function last_of_month(dt as date) as date ' {
    last_of_month = dateAdd("m", 1, dateAdd("d", -1, first_of_month(dt)))
end function ' }
code }

}

sa:

  → development/languages/VBA/modules/Common/Date-Time[Date and time related VBA modules/classes]

  → development/languages/VBA/functions[VBA functions]
