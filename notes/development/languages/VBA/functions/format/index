$ VBA function: format

{ Left and right aligning text

  Using a number of at-signs (`@`) left padds (that is: right aligns) text with the number of characters being the same as the number of at-signs:
code {
print debug.print format("foo", string(10, "@")) & "<"
code }

  In order to left-align the text, the format string must be prepended with an exclamation mark (`!`):
code {
print debug.print format("bar", "!" & string(10, "@")) & "<"
code }

}
{ Formatting numbers with leading and trailing zeros

code {
debug.print( format(42, "0000") & "<" ) 
0042<
code }

code {
debug.print( format(15.3, "0000.00") )
0015.30
code }


}
{ Aligning numbers on their decimal separators

  The following example shows how `format` can be used to align a number on its decimal separator:

  gh|about-VBA|/functions/format.bas||

}
{ Escape character

  The escape character is the backslash (`\`). It causes the following character to be printed literally

  Some characters, such as `a` or `b` don't have a special meaning in `format` and don't necessarily need to be escaped. Characters, that have a special meaning include
 `c` or `0`, so they're escaped in the following statement to print them literally:
code {
debug.print(format(12.345, "ab\c\0 00.00"))
code }


}
sa:
  â†’ development/languages/VBA/language/datatypes/date/format[Converting dates into strings].
