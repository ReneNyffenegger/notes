$ VBA functions
@functions



{ callByName #vba-callByName

  
 `callByName` operates on classes/objects. So, we need to first create a class:
  gh|about-VBA|/functions/callByName/tq84Obj.bas||

  Now, we can call methods/subs etc on the class with `callByName`:
  gh|about-VBA|/functions/callByName/callMethodByName.bas||

  In → Microsoft/Office/Excel[Excel] forms, the special keyword `me` can be used to refer to *itself*.

  In order to dynamically call → development/languages/VBA/language/subs-and-functions[ordinary subs], use
  → Microsoft/Office/Excel/Object-Model/Application#excel-application-run[application.run] (if the function
  runs in → Microsoft/Office/Excel, → Microsoft/Office/Word etc.)

}
{ choose #vba-choose

  gh|about-VBA|/functions/choose.bas||

  Compare with → development/languages/VBA/language/statements/select[`select`].

}
{ environ #vba-environ

  `environ("ENVVAR")` returns the value of the → development/environment-variable[environment variable] `ENVVAR`.

}
{ format

  The following example shows how `format` can be used to align a number on its decimal seperator:

  gh|about-VBA|/functions/format.bas||

}
{ freeFile #freeFile

  `freeFile` finds the next availabe number for → development/languages/VBA/language/statements/open[open]

  gh|about-VBA|/functions/freeFile.bas||

}
{ mid

  `mid` is the equivalent of the function which is called
  → development/languages/Perl/functions/substr[`substr`] or similar in other → development/languages[programming languages].

code {
dim result as string
result = mid("The foo bar", 5, 3) ' Assign "foo" to result
code }

}
{ isEmpty #vba-isEmpty

  `isEmpty` can be used to determine if a → development/languages/VBA/language/datatypes/variant[variant] was initialized. On other
  → development/languages/VBA/language/datatypes[datatypes], this seems not possible (or probably more accuratly, they are automatically initialized).
  -
  The following example displays that the variant variable is empty but the others are not.

  gh|about-VBA|/functions/isEmpty.bas||

  Apparently, `isEmpty` is used in → Microsoft/Office/Excel[Excel] to determine if a cell is empty.

}
{ isError

  `isError` can for example be used in → Microsoft/Office/Excel[Excel] to check if a cell contains an error (which is displayed as `#N/A`).

}
{ replace

  gh|about-VBA|/functions/replace.bas||

}
{ rtrim

  `rtrim` removes trailing spaces on a string's right side:
  gh|about-VBA|/functions/rtrim.bas||

}
{ shell #vba-shell

  `shell` can be used to start a program (application). The returned *task id* can be used
  in the → development/languages/VBA/language/statements/appActivate[`appActivate`] statement.

  gh|about-VBA|/functions/shell.bas||

}
{ split

  gh|about-VBA|/functions/split.bas||

}
{ uBound #vba-ubound

  TODO: → development/languages/VBA/language/arrays[arrays]

}
{ Other functions

abs

→ development/languages/VBA/language/arrays[array]

asc

atn


chr

command

conversion functions: `asc`, `cBool`, `cByte`, `cCur`, `cDate`, `cDec`, `cDbl`, `chr`, `cInt`, `cLng`, `cLngLng`, `cLngPtr`, `cSng`, `cStr`, `cVar`, `cvErr`, `hex`, `oct`, `str`, `val`.

cos

createObject: to create an *Active X Object*.

curDir

cVErr



dDB

derived Math

dir

doEvents

eOF

error

exp

fileAttr

fileDateTime

fileLen

filter

formatCurrency

formatNumber

formatPercent

fV

getAllSettings

getAttr

getObject

getSetting

hex


iIf

iMEStatus

input

inputBox

inStr

inStrRev

int, Fix

iPmt

iRR

isArray

isMissing

isNull

isNumeric

isObject

join

lBound

lCase

left

len

loc

lOF

log

lTrim, RTrim, and Trim

macID

macScript

math

mid

mIRR

msgBox

now

nPer

nPV

oct

partition

pmt

pPmt

pV

qBColor

rate

rGB

right

rnd

round

seek

sgn

shell

sin

sLN

space

spc

sqr

str

strComp

strConv

string

strReverse

switch

sYD

tab

tan

type Conversion

typeName

uCase

val

varType


}

sa:
  → development/languages/VBA
