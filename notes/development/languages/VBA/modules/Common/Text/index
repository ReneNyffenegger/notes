$ VBA Module Text [Common]

{ Functions


  table { ll
    `regexpSplit` ☰ splits a given input string on a → development/languages/JavaScript/objects/String/regular-expression[regular expression].  (See also → development/languages/VBA/regular-expressions[regular expressions in VBA]).
    → #vba-rpad-lpad[`rpad` and `lpad`] ☰ pad a string on the left or right side with spaces, or optionally any other character.
    → development/languages/VBA/modules/Common/Text/parsePossibleDate[`parsePossibleDate`] ☰ is a (very β) attempt to parse → development/languages/VBA/language/datatypes/string[strings] (more correctly: a → development/languages/VBA/language/datatypes/variant[variant]) that might contain dates and if matched, return such a → development/languages/VBA/language/datatypes/date[date]. If the value could not be mached, it returns → development/languages/VBA/functions/conversion/cDate[`cvDate(null)`].
  table }

  { rpad / lpad #vba-rpad-lpad

    `rpad("abc", 5, "*")` results in `abc**`.

    `lpad("xyz", 5, "*")` results in `**xyz`.

  }

}
{ Source code

  gh|VBAModules|/Common/Text.vb||

}
{ History

  table { ll
    V.2 ☰ Use → development/languages/VBA/language/subs-and-functions/byVal-byRef[`byVal]` in `rpad` and `lpad`
    V.3 ☰ Let `parsePossibleDate` also parse `MMM DD, YYYY` expression
  table }

}

sa:

  → development/languages/VBA/modules/Common/Text/StringBuffer[StringBuffer] is a → development/languages/VBA/language/classes[class] that wraps a string buffer
  when lots of strings need to be concatenaded for better performance.

  → development/languages/VBA/modules
