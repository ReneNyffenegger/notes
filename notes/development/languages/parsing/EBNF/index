$ Extended Backus-Naur Form (EBNF)
@ EBNF

EBNF is a notation for a *syntax free → development/languages/parsing/grammar* and is based on a suggestion of *Nikolaus Wirth* (1977).

Non terminal symbols start with an upper letter (for example `Statement`).
-
Terminal symbols start with lower case letter (for example `ident`) or are written in bold (the so-called »reserved words«).
  • `[ … ]`: optional, zero or one time
  • `{ … }`: repetition, zero, one or more times
  • `( … )`: grouping
  • `|`: alternative, either the left or the right site
  • `,`: addition (stronger than alterntive)
  • `0 |…| 9`: range of values
  • `"text"`: Terminal symbols (for example `"if"`) are quoted so that also characters that are used for EBNF can be defined
  • `.`: Each rule has an explicit final character to make it clear where the rule ends.

code {
letter := ( "a" |…| "z" | ( "A" |…| "Z" ) .
number := ( "0" |…| "9" )                 .
code }

sa:
  → development/web/RFC#rfc-5234 

  → development/languages/parsing/EBNF/syntactic-metalanguage

  → misc/ISO 14977

links:
  Gunther Rademacher has written a → https://www.bottlecaps.de/rr/ui[Railroad Diagram Generator] that creates syntax diagrams from context-free grammars specified in EBNF.
