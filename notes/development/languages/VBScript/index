
VBScript programs are executed within a *host environment* such as → development/languages/WSH[Windows Script Host], Internet Explorer or Internet Information Services.

{ Datatypes

  VBScript only has *one* datatype: the → development/languages/VBA/language/datatypes/variant.

}
{ Functions

  Functions that are offered by VBScript:
    • abs
    • array
    • asc
    • atn
    • cBool
    • cByte
    • cCur
    • cDate
    • cDbl
    • chr
    • cInt
    • cLng
    • conversions
    • cos
    • createObject
    • cSng
    • cStr
    • date
    • dateAdd
    • dateDiff
    • datePart
    • dateSerial
    • dateValue
    • day
    • escape
    • eval
    • exp
    • filter
    • formatCurrency
    • formatDateTime
    • formatNumber
    • formatPercent
    • getLocale
    • getObject
    • getRef
    • hex
    • hour
    • inputBox
    • inStr
    • inStrRev
    • int, Fix
    • isArray
    • isDate
    • isEmpty
    • isNull
    • isNumeric
    • isObject
    • join
    • lBound
    • lCase
    • left
    • len
    • loadPicture
    • log
    • lTrim; RTrim; and Trim
    • maths
    • mid
    • minute
    • month
    • monthName
    • msgBox
    • now
    • oct
    • replace
    • rGB
    • right
    • rnd
    • round
    • scriptEngine
    • scriptEngineBuildVersion
    • scriptEngineMajorVersion
    • scriptEngineMinorVersion
    • second
    • setLocale
    • sgn
    • sin
    • space
    • split
    • sqr
    • strComp
    • string
    • strReverse
    • tan
    • time
    • → development/languages/VBScript/language/functions/_date-time-related/timer[timer]
    • timeSerial
    • timeValue
    • typeName
    • uBound
    • uCase
    • unescape
    • varType
    • weekday
    • weekdayName
    • year

}
{ Statements

  • `call`
  • `dim`, → development/languages/VBScript/language/const[`const`], `public` and `private` to declare variables.
  • `do … loop`, → development/languages/VBScript/language/for/to[`for … next`] and `while … wend`
  • `erase`
  • → development/languages/VBScript/language/for-each[`for each … next`]
  • `function … end function` and `sub … end sub`
  • → development/languages/VBScript/language/if[`if … then … elseIf … else … end if`]
  • `on error`
  • → development/languages/VBScript/language/option-explicit[`option explicit`]
  • `randomize` to initialize the random number generator (I am sort of impressed)
  • `redim` to change the size of an array
  • `set`

}
{ Objects

  • Dictionary (Compare with → development/languages/VBA/Useful-object-libraries/Microsoft-Scripting-Runtime/dictionary[dictionary of Microsoft Scripting Runtime])
  • Drive and Drives
  • File and Files
  • Folder and Folders
  • FileSystemObjects (See → development/languages/VBA/Useful-object-libraries/Microsoft-Scripting-Runtime/fileSystemObject[`Scripting.FileSystemObject`])
  • TextStream
  • Err

}
{ Comparison to VBA

  VBScript is not → development/languages/VBA[Visual Basic for Applications].

  VBA is a richer language than VBScript and comes with a somewhat more sophisticated development environment.

  VBA is included with → Microsoft/Office[Microsoft Office] and allows to create complete applications with those products.

  VBScript, on the other hand, is not primarly aimed at developing applications, but rather to quickly script something.

}
{ TODO

  Apparently, VBScripts are embeddebale in other programs using *Microsoft Script Control* (`msscript.ocx`).

}

sa:

  → development/languages/VBScript/language/arguments[arguments]

  Other → development/languages[programming languages] etc.

  Allegedly, VBScript script files cannot start with a → development/Unicode/BOM[BOM].

  → development/languages/VBScript/examples/measure-elapsed-time[Measure elapsed time in VBScript]

  Tyring to print → development/languages/VBScript/examples/colored-output[colored output with escape characters]. It does not seem to work.
