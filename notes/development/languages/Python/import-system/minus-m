$ Python import system: Using the -m command line option

The command line option `-m` runs a module as a script. If the module is a package (that is essentially a directory), it runs (or tries to run) `__main__.py`.
-
This is demonstrated with the following simple example: A directory, named `minusM`, contains three files:
  • `__init__.py`,
  • `__main__.py` and
  • `mod.py`

Their content is one → development/languages/Python/built-in-functions/print[`print()`] statement only:
`__init__.py`:
gh|about-Python|/import-system/minusM/__init__.py||

`__main__.py`:
gh|about-Python|/import-system/minusM/__main__.py||

`__mod__.py`:
gh|about-Python|/import-system/minusM/mod.py||

If the Python interpreter is started in the directory that contains `minusM` like so:
code {
python -m minusM
code }
the following is printed:
code {
minusM: __init__.py
minusM: __main__.py
code }

If the interpreter is started like so:
code {
python -m minusM.mod
code }
this is printed:
code {
minusM: __init__.py
minusM.mod
code }
