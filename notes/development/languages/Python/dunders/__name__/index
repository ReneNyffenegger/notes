$ Python: __name__
@ __name__

The predefined global → development/languages/Python/variables `__name__` is a → development/languages/Python/types/string[string] whose value corresponds to the
module where it is evaluated.
-
If the source code that contains `__name__` is executed as a script (rather than → development/languages/Python/statements/import[imported]), the value of `__name__` is `__main__`.

This behavior can be demonstrated with the following simple Python source file (`tq84.py`):
gh|about-Python|/dunders/__name__/tq84.py||

This script prints *This source is run as a script* if it is executed from the command line like so:
code {
$ python tq84.py
code }

Conversely, it prints *This source was imported, __main__ = tq84* if it is imported from another script like so:
gh|about-Python|/dunders/__name__/import-tq84.py||


sa:

`__name__` is one of the names that is present in the top level scope (`→ development/languages/Python/dunders/__name__[__name__] == '__main__'`) as returned by → development/languages/Python/built-in-functions/dir[`dir()`].

  → development/languages/Python/dunders[Other dunders]
