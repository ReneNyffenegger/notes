$ Python: __getattr__

The → development/languages/Python/dunders[dunder] method `__getattr__(self, name)` is called when a user of an object tries to access a member or method that does not exist. In such a case, the name of the inexistant member/method
is passed to `__getattr__(self, name)`.

In the following example, the → development/languages/Python/class `Cls` defines `__getattr__`. When it is called, it creates an instance of a `Cls.notAvailableMember` object. If the inexesting member was called in
«property context», the member method `__str__` of `notAvailableMember` is called. If the inexisting member was called in «method context», the
→ development/languages/Python/dunders/__call__[`__call__` method] is called.

gh|about-Pythyon|/about/Python/dunders/__getattr__.py||

sa:

  The `__getattr__` method is useful to access members of a dictionary with a dot, as explained in → https://stackoverflow.com/a/32107024/180275[this Stackoverflow answer].
  
  The → development/languages/Python/built-in-functions/getattr[`getattr()` built-in function].

  → development/languages/Python/dunders[Other dunders]
