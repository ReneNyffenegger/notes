$ Python: open()

`open` is used to open a file for reading or writing. The function returns a → development/languages/Python/standard-library/io#python-io-file-object[file object].

{ Writing a file

  The following example is a Python script that prints its own content. (→ development/languages/Python/dunders/__file__[`__file__`] evaluates to the filename of the script):
  gh|about-python|/builtin-functions/open/demo.py||

}
{ Using open together with a with statement

  Because the file that is opened should eventually be closed, it is advisable to use `open()` together with a → development/languages/Python/statements/with[`with` statement].
  gh|about-python|/builtin-functions/open/with.py||

  As soon as the `with` is exited, the file will be closed automatically.

}
{ Using next()

  The → development/languages/Python/objects that is returned by `open(…, 'r')` is an → development/languages/Python/iterable/iterator. Thus, it is possible to read a line from
  the file being read with → development/languages/Python/built-in-functions/next[`next()`].

 `next()` throws a `StopIteration` → development/languages/Python/exception-handling[exception] when there are no more lines to be read:
  gh|about-python|/builtin-functions/open/next.py||

}
{ open is io.open #py-open-is-io-open

 `open()` is defined in the function → development/languages/Python/standard-library/io#py-io-open[`open()` of the `io` module]. This can be verified with the
  → development/languages/Python/operators/is[`is` operator]:
  gh|about-python|/builtin-functions/open/open-is-io.open.py||

}

sa:

  → development/languages/Python/built-in-functions/open/iterate-over-each-line-in-file[Iterate over each line in a fiel].
  -
  → development/languages/Python/built-in-functions/open/iter[Using `iter()` and `open()`] to iterate over each line in a file.

  `open()` can also be used to open a reference to → development/languages/Python/standard-library/sys/stdin-stdout-stderr#stdout-or-file[`sys.stdin`, `sys.stdout` or `sys.stderr`].

  The standard library → development/languages/Python/standard-library/os[`os`] has functions to
  → development/languages/Python/standard-library/os#py-os-create-dirs[create directories] and to
  → development/languages/Python/standard-library/os#py-os-remove-files-dirs[remove files and directories]

  The standard library → development/languages/Python/standard-library/os/path[`os.path`] has some functions related to files and filename manipulation.
  -
  Especially interesting are those that → development/languages/Python/standard-library/os/path#py-os-path-check-existence[check for the existence of files and directories].



  → development/languages/Python/built-in-functions
