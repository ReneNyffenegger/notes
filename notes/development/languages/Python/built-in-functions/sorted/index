$ Python: sorted
@ sorted

gh|about-python|/builtin-functions/sorted/simple.py||

{ Sorting a list based on a characteristic their elements #py-sorted-key

 `sorted()` has an optional `key` → development/languages/Python/functions/parameters[parameter] that can be used to sort the elements based on a given characteristic rather than the elements themselves.

  In the following example, `key` transforms each element to their uppercase equivalent to sort strings alphabetically. Without using the `key` parameter, uppercase letters are sorted before lowercase letters:
  gh|about-python|/builtin-functions/sorted/key.py||

  Compare with the same functionality in the → development/languages/Python/types/list/sort#py-sort-key[`sort()` method].

}
{ Sorting user defined types #py-sorted-udt

  In order to be able to use `sorted` on user defined types, the type needs to implement the
  → development/languages/Python/dunders/__lt__[`__lt__`] → development/languages/Python/dunders[dunder].

  gh|about-python|/builtin-functions/sorted/user-defined-class.py||

  If `__lt__` hadn't been defined, sorting these object would have resulted in a `TypeError` exception (*TypeError: '<' not supported between instances of 'CLS' and 'CLS'*).

}

sa:

  → development/languages/Python/types/list/sort[`list.sort()`]

  → development/languages/Python/built-in-functions
