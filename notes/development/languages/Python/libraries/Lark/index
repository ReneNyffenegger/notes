$ Python library: Lark

Lark implements the â†’ https://www.wikiwand.com/en/Earley_parser[Earley parser] algorithm, thus it is able to parse *all* context-free grammars. In addition, Lark supports
*scannerless mode*, so terminals (tokens) can be resolved at parse time.

Terminals are represented by uppercase names.

In a grammer, comments can be introduced with a double slash (`//`).

{ Parse digits and characters

  gh|about-Python|/libraries/Lark/digit-char.py||

}
{ Ignoring white space (%ignore)

  Many programming languages ignore white space. So, we define `WS` and use `%ignore WS`:
  gh|about-Python|/libraries/Lark/digit-char-WS.py||

}
{ Importing WS (%import common.WS)

  Because white space play such a fundamental role, Lark allows to import their definition with
 `%import common.WS` and then use their definition to ignore them with `%ignore WS`:
  gh|about-Python|/libraries/Lark/digit-char-import-common.WS.py||

}
