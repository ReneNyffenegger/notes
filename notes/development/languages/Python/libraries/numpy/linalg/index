$ numpy.linalg
@ linalg

`numpy.linalg` implements low-level standard linear algebra algorithms.

table { ll

  `__all__` ☰ `list` object
  `__builtins__` ☰ `dict` object
  `__cached__` ☰ `str` object
  `cholesky()` ☰ Function
  `cond()` ☰ Function
  `det()` ☰ Function
  `__doc__` ☰ `str` object
  `eig()` ☰ Function
  `eigh()` ☰ Function
  `eigvals()` ☰ Function
  `eigvalsh()` ☰ Function
  `__file__` ☰ `str` object
  `inv()` ☰ Function
  `linalg` ☰ Module
  `LinAlgError` ☰ ?
  `__loader__` ☰ ?
  `lstsq()` ☰ Function
  `matrix_power()` ☰ Function
  `matrix_rank()` ☰ Function
  `multi_dot()` ☰ Function
  `__name__` ☰ `str` object
  `norm()` ☰ Function
  `__package__` ☰ `str` object
  `__path__` ☰ `list` object
  `pinv()` ☰ Function
  `qr()` ☰ Function
  `slogdet()` ☰ Function
  `solve()` ☰ Function
  `__spec__` ☰ ?
  `svd()` ☰ Function
  `tensorinv()` ☰ Function
  `tensorsolve()` ☰ Function
  `test` ☰ ?
  `_umath_linalg` ☰ Module

table }

sa:
  → development/languages/Python/libraries/SciPy/linalg[scipy.linalg] has some → development/languages/Python/libraries/SciPy/linalg#scipy-numpy-linalg[overlap in the functionality] with `numpy.linalg`.

 `→ development/languages/Python/libraries/numpy`
