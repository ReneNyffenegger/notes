$ Python library: numpy
@ numpy

code {
>>> import numpy as np
>>> a = np.array([1,2,3])
>>> a.sum()
6
>>> a**2
array([1, 4, 9])
code }

`shape` determines the dimensions:
code {
>>> x = np.array([ [1,2,3],
                   [4,5,6] ])
>>> x.shape
(2, 3)
code }

`T` transposes:
code {
>>> y = x.T
>>> y
array([[1, 4],
       [2, 5],
       [3, 6]])

>>> y.shape
(3, 2)
code }

Random numbers:
code {
>>> np.random.seed(42)
>>> np.random.random()
0.3745401188473625

>>> np.random.random(5)
array([0.95071431, 0.73199394, 0.59865848, 0.15601864, 0.15599452])

>>> np.random.random( (2, 3) )
array([[0.05808361, 0.86617615, 0.60111501],
       [0.70807258, 0.02058449, 0.96990985]])
code }

Create arrays of *zeros* and *ones*:
code {
>>> np.zeros(4)
array([0., 0., 0., 0.])

>>> np.ones(3)
array([1., 1., 1.])
code }

Stacking arrays
code {
>>> x = np.array([ [0, 1, 2],
                   [3, 4, 5] ])
>>> y = np.array([ [6, 7   ],
                   [8, 9   ] ])
>>> np.hstack( (x,y) )
array([[0, 1, 2, 6, 7],
       [3, 4, 5, 8, 9]])
code }

{ linspace

  gh|about-python|/libraries/numpy/linspace.py||

}
{ mean

  gh|about-python|/libraries/numpy/mean.py||

}
{ average

  gh|about-python|/libraries/numpy/average.py||

}

sa:
  *numpy* is a prerequisite for nanoGPT
