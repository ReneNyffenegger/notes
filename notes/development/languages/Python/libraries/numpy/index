$ Python library: numpy
@ numpy

`numpy` provides many function that operate on or manipulate *n-dimensional array objects*.

code {
>>> import numpy as np
>>> a = np.array([1,2,3])
>>> a.sum()
6
>>> a**2
array([1, 4, 9])
code }

`shape` determines the dimensions:
code {
>>> x = np.array([ [1,2,3],
                   [4,5,6] ])
>>> x.shape
(2, 3)
code }

`T` transposes:
code {
>>> y = x.T
>>> y
array([[1, 4],
       [2, 5],
       [3, 6]])

>>> y.shape
(3, 2)
code }

Random numbers:
code {
>>> np.random.seed(42)
>>> np.random.random()
0.3745401188473625

>>> np.random.random(5)
array([0.95071431, 0.73199394, 0.59865848, 0.15601864, 0.15599452])

>>> np.random.random( (2, 3) )
array([[0.05808361, 0.86617615, 0.60111501],
       [0.70807258, 0.02058449, 0.96990985]])
code }

Create arrays of *zeros* and *ones*:
code {
>>> np.zeros(4)
array([0., 0., 0., 0.])

>>> np.ones(3)
array([1., 1., 1.])
code }

`linspace(s, e, n`) create an array with `n` evenly spread out values between `s` and `e`:
code {
>>> np.linspace(-1, 1, 5)
array([-1. , -0.5,  0. ,  0.5,  1. ])
code }

Stacking arrays
code {
>>> x = np.array([ [0, 1, 2],
                   [3, 4, 5] ])
>>> y = np.array([ [6, 7   ],
                   [8, 9   ] ])
>>> np.hstack( (x,y) )
array([[0, 1, 2, 6, 7],
       [3, 4, 5, 8, 9]])
code }

{ linspace

  gh|about-python|/libraries/numpy/linspace.py||

}
{ mean

  gh|about-python|/libraries/numpy/mean.py||

}
{ average

  gh|about-python|/libraries/numpy/average.py||

}
{ Members of numpy

  table { ll

   `abs` ☰ ?
   `absolute` ☰ ?
   `add` ☰ ?
   `add_docstring()` ☰ Built-in function
   `add_newdoc()` ☰ Function
   `_add_newdoc_ufunc()` ☰ Built-in function
   `add_newdoc_ufunc()` ☰ Built-in function
   `all()` ☰ Function
   `allclose()` ☰ Function
   `ALLOW_THREADS` ☰ `int` object
   `alltrue()` ☰ Function
   `amax()` ☰ Function
   `amin()` ☰ Function
   `angle()` ☰ Function
   `any()` ☰ Function
   `append()` ☰ Function
   `apply_along_axis()` ☰ Function
   `apply_over_axes()` ☰ Function
   `arange()` ☰ Built-in function
   `arccos` ☰ ?
   `arccosh` ☰ ?
   `arcsin` ☰ ?
   `arcsinh` ☰ ?
   `arctan` ☰ ?
   `arctan2` ☰ ?
   `arctanh` ☰ ?
   `argmax()` ☰ Function
   `argmin()` ☰ Function
   `argpartition()` ☰ Function
   `argsort()` ☰ Function
   `argwhere()` ☰ Function
   `around()` ☰ Function
   `array()` ☰ Creates an `→ development/languages/Python/libraries/numpy/ndarray` object
   `array2string()` ☰ Function
   `array_equal()` ☰ Function
   `array_equiv()` ☰ Function
   `array_repr()` ☰ Function
   `array_split()` ☰ Function
   `array_str()` ☰ Function
   `asanyarray()` ☰ Built-in function
   `asarray()` ☰ Built-in function
   `asarray_chkfinite()` ☰ Function
   `ascontiguousarray()` ☰ Built-in function
   `asfarray()` ☰ Function
   `asfortranarray()` ☰ Built-in function
   `asmatrix()` ☰ Function
   `atleast_1d()` ☰ Function
   `atleast_2d()` ☰ Function
   `atleast_3d()` ☰ Function
   `average()` ☰ Function
   `AxisError` ☰ `numpy.AxisError` class
   `bartlett()` ☰ Function
   `base_repr()` ☰ Function
   `binary_repr()` ☰ Function
   `bincount()` ☰ Function
   `bitwise_and` ☰ ?
   `bitwise_not` ☰ ?
   `bitwise_or` ☰ ?
   `bitwise_xor` ☰ ?
   `blackman()` ☰ Function
   `block()` ☰ Function
   `bmat()` ☰ Function
   `bool_` ☰ `numpy.bool_` class
   `broadcast` ☰ `numpy.broadcast` class
   `broadcast_arrays()` ☰ Function
   `broadcast_shapes()` ☰ Function
   `broadcast_to()` ☰ Function
   `BUFSIZE` ☰ `int` object
   `busdaycalendar` ☰ `numpy.busdaycalendar` class
   `busday_count()` ☰ Function
   `busday_offset()` ☰ Function
   `byte` ☰ `numpy.int8` class
   `byte_bounds()` ☰ Function
   `bytes_` ☰ `numpy.bytes_` class
   `c_` ☰ ?
   `can_cast()` ☰ Function
   `cast` ☰ ?
   `cbrt` ☰ ?
   `cdouble` ☰ `numpy.complex128` class
   `ceil` ☰ ?
   `cfloat` ☰ `numpy.complex128` class
   `char` ☰ Module
   `character` ☰ `numpy.character` class
   `chararray` ☰ `numpy.chararray` class
   `choose()` ☰ Function
   `CLIP` ☰ `int` object
   `clip()` ☰ Function
   `clongdouble` ☰ `numpy.complex256` class
   `clongfloat` ☰ `numpy.complex256` class
   `column_stack()` ☰ Function
   `common_type()` ☰ Function
   `compare_chararrays()` ☰ Built-in function
   `compat` ☰ Module
   `complex_` ☰ `numpy.complex128` class
   `complex128` ☰ `numpy.complex128` class
   `complex256` ☰ `numpy.complex256` class
   `complex64` ☰ `numpy.complex64` class
   `complexfloating` ☰ `numpy.complexfloating` class
   `ComplexWarning` ☰ `numpy.ComplexWarning` class
   `compress()` ☰ Function
   `concatenate()` ☰ Function
   `conj` ☰ ?
   `conjugate` ☰ ?
   `convolve()` ☰ Function
   `copy()` ☰ Function
   `_CopyMode` ☰ ?
   `copysign` ☰ ?
   `copyto()` ☰ Function
   `corrcoef()` ☰ Function
   `correlate()` ☰ Function
   `cos` ☰ ?
   `cosh` ☰ ?
   `count_nonzero()` ☰ Function
   `cov()` ☰ Function
   `cross()` ☰ Function
   `csingle` ☰ `numpy.complex64` class
   `ctypeslib` ☰ Module
   `cumprod()` ☰ Function
   `cumproduct()` ☰ Function
   `cumsum()` ☰ Function
   `DataSource` ☰ `numpy.DataSource` class
   `datetime64` ☰ `numpy.datetime64` class
   `datetime_as_string()` ☰ Function
   `datetime_data()` ☰ Built-in function
   `deg2rad` ☰ ?
   `degrees` ☰ ?
   `delete()` ☰ Function
   `deprecate()` ☰ Function
   `deprecate_with_doc()` ☰ Function
   `diag()` ☰ Function
   `diagflat()` ☰ Function
   `diag_indices()` ☰ Function
   `diag_indices_from()` ☰ Function
   `diagonal()` ☰ Function
   `diff()` ☰ Function
   `digitize()` ☰ Function
   `disp()` ☰ Function
   `_distributor_init` ☰ Module
   `divide` ☰ ?
   `divmod` ☰ ?
   `dot()` ☰ Function
   `double` ☰ `numpy.float64` class
   `dsplit()` ☰ Function
   `dstack()` ☰ Function
   `dtype` ☰ ?
   `e` ☰ `float` object
   `ediff1d()` ☰ Function
   `einsum()` ☰ Function
   `einsum_path()` ☰ Function
   `emath` ☰ Module
   `empty()` ☰ Creates an `→ development/languages/Python/libraries/numpy/ndarray` object.j
   `empty_like()` ☰ Function
   `equal` ☰ ?
   `ERR_CALL` ☰ `int` object
   `ERR_DEFAULT` ☰ `int` object
   `ERR_IGNORE` ☰ `int` object
   `ERR_LOG` ☰ `int` object
   `ERR_PRINT` ☰ `int` object
   `ERR_RAISE` ☰ `int` object
   `errstate` ☰ `numpy.errstate` class
   `ERR_WARN` ☰ `int` object
   `euler_gamma` ☰ `float` object
   `exp` ☰ ?
   `exp2` ☰ ?
   `expand_dims()` ☰ Function
   `expm1` ☰ ?
   `extract()` ☰ Function
   `eye()` ☰ Function
   `fabs` ☰ ?
   `False_` ☰ ?
   `fastCopyAndTranspose()` ☰ Built-in function
   `fft` ☰ Module
   `fill_diagonal()` ☰ Function
   `_financial_names` ☰ `list` object
   `find_common_type()` ☰ Function
   `finfo` ☰ `numpy.finfo` class
   `fix()` ☰ Function
   `flatiter` ☰ `numpy.flatiter` class
   `flatnonzero()` ☰ Function
   `flexible` ☰ `numpy.flexible` class
   `flip()` ☰ Function
   `fliplr()` ☰ Function
   `flipud()` ☰ Function
   `float_` ☰ `numpy.float64` class
   `float128` ☰ `numpy.float128` class
   `float16` ☰ `numpy.float16` class
   `float32` ☰ `numpy.float32` class
   `float64` ☰ `numpy.float64` class
   `floating` ☰ `numpy.floating` class
   `FLOATING_POINT_SUPPORT` ☰ `int` object
   `float_power` ☰ ?
   `floor` ☰ ?
   `floor_divide` ☰ ?
   `fmax` ☰ ?
   `fmin` ☰ ?
   `fmod` ☰ ?
   `format_float_positional()` ☰ Function
   `format_float_scientific()` ☰ Function
   `format_parser` ☰ `numpy.format_parser` class
   `FPE_DIVIDEBYZERO` ☰ `int` object
   `FPE_INVALID` ☰ `int` object
   `FPE_OVERFLOW` ☰ `int` object
   `FPE_UNDERFLOW` ☰ `int` object
   `frexp` ☰ ?
   `frombuffer()` ☰ Built-in function
   `from_dlpack()` ☰ Built-in function
   `fromfile()` ☰ Built-in function
   `fromfunction()` ☰ Function
   `fromiter()` ☰ Built-in function
   `frompyfunc()` ☰ Built-in function
   `fromregex()` ☰ Function
   `fromstring()` ☰ Built-in function
   `full()` ☰ Function
   `full_like()` ☰ Function
   `gcd` ☰ ?
   `generic` ☰ `numpy.generic` class
   `genfromtxt()` ☰ Function
   `geomspace()` ☰ Function
   `get_array_wrap()` ☰ Function
   `getbufsize()` ☰ Function
   `geterr()` ☰ Function
   `geterrcall()` ☰ Function
   `geterrobj()` ☰ Built-in function
   `get_include()` ☰ Function
   `get_printoptions()` ☰ Function
   `_get_promotion_state()` ☰ Built-in function
   `_globals` ☰ Module
   `gradient()` ☰ Function
   `greater` ☰ ?
   `greater_equal` ☰ ?
   `half` ☰ `numpy.float16` class
   `hamming()` ☰ Function
   `hanning()` ☰ Function
   `heaviside` ☰ ?
   `histogram()` ☰ Function
   `histogram2d()` ☰ Function
   `histogram_bin_edges()` ☰ Function
   `histogramdd()` ☰ Function
   `hsplit()` ☰ Function
   `hstack()` ☰ Function
   `hypot` ☰ ?
   `i0()` ☰ Function
   `identity()` ☰ Function
   `iinfo` ☰ `numpy.iinfo` class
   `imag()` ☰ Function
   `in1d()` ☰ Function
   `index_exp` ☰ ?
   `indices()` ☰ Function
   `inexact` ☰ `numpy.inexact` class
   `Inf` ☰ `float` object
   `inf` ☰ `float` object
   `Infinity` ☰ `float` object
   `info()` ☰ Function
   `infty` ☰ `float` object
   `inner()` ☰ Function
   `insert()` ☰ Function
   `int_` ☰ `numpy.int64` class
   `int16` ☰ `numpy.int16` class
   `int32` ☰ `numpy.int32` class
   `int64` ☰ `numpy.int64` class
   `int8` ☰ `numpy.int8` class
   `intc` ☰ `numpy.int32` class
   `integer` ☰ `numpy.integer` class
   `interp()` ☰ Function
   `intersect1d()` ☰ Function
   `intp` ☰ `numpy.int64` class
   `invert` ☰ ?
   `is_busday()` ☰ Function
   `isclose()` ☰ Function
   `iscomplex()` ☰ Function
   `iscomplexobj()` ☰ Function
   `isfinite` ☰ ?
   `isfortran()` ☰ Function
   `isin()` ☰ Function
   `isinf` ☰ ?
   `isnan` ☰ ?
   `isnat` ☰ ?
   `isneginf()` ☰ Function
   `isposinf()` ☰ Function
   `isreal()` ☰ Function
   `isrealobj()` ☰ Function
   `isscalar()` ☰ Function
   `issctype()` ☰ Function
   `issubclass_()` ☰ Function
   `issubdtype()` ☰ Function
   `issubsctype()` ☰ Function
   `iterable()` ☰ Function
   `ix_()` ☰ Function
   `kaiser()` ☰ Function
   `kernel_version` ☰ `tuple` object
   `kron()` ☰ Function
   `lcm` ☰ ?
   `ldexp` ☰ ?
   `left_shift` ☰ ?
   `less` ☰ ?
   `less_equal` ☰ ?
   `lexsort()` ☰ Function
   `lib` ☰ Module
   `linalg` ☰ Module
   `linspace()` ☰ Function
   `little_endian` ☰ `bool` object
   `load()` ☰ Function
   `loadtxt()` ☰ Function
   `log` ☰ ?
   `log10` ☰ ?
   `log1p` ☰ ?
   `log2` ☰ ?
   `logaddexp` ☰ ?
   `logaddexp2` ☰ ?
   `logical_and` ☰ ?
   `logical_not` ☰ ?
   `logical_or` ☰ ?
   `logical_xor` ☰ ?
   `logspace()` ☰ Function
   `longcomplex` ☰ `numpy.complex256` class
   `longdouble` ☰ `numpy.float128` class
   `longfloat` ☰ `numpy.float128` class
   `longlong` ☰ `numpy.longlong` class
   `lookfor()` ☰ Function
   `ma` ☰ Module
   `mask_indices()` ☰ Function
   `_mat` ☰ Module
   `mat()` ☰ Function
   `math` ☰ Module
   `matmul` ☰ ?
   `matrix` ☰ `numpy.matrix` class
   `max()` ☰ Function
   `MAXDIMS` ☰ `int` object
   `maximum` ☰ ?
   `maximum_sctype()` ☰ Function
   `MAY_SHARE_BOUNDS` ☰ `int` object
   `MAY_SHARE_EXACT` ☰ `int` object
   `may_share_memory()` ☰ Function
   `mean()` ☰ Function
   `median()` ☰ Function
   `memmap` ☰ `numpy.memmap` class
   `meshgrid()` ☰ Function
   `mgrid` ☰ ?
   `min()` ☰ Function
   `minimum` ☰ ?
   `min_scalar_type()` ☰ Function
   `mintypecode()` ☰ Function
   `mod` ☰ ?
   `modf` ☰ ?
   `ModuleDeprecationWarning` ☰ `numpy.ModuleDeprecationWarning` class
   `moveaxis()` ☰ Function
   `msort()` ☰ Function
   `multiply` ☰ ?
   `NAN` ☰ `float` object
   `NaN` ☰ `float` object
   `nan` ☰ `float` object
   `nanargmax()` ☰ Function
   `nanargmin()` ☰ Function
   `nancumprod()` ☰ Function
   `nancumsum()` ☰ Function
   `nanmax()` ☰ Function
   `nanmean()` ☰ Function
   `nanmedian()` ☰ Function
   `nanmin()` ☰ Function
   `nanpercentile()` ☰ Function
   `nanprod()` ☰ Function
   `nanquantile()` ☰ Function
   `nanstd()` ☰ Function
   `nansum()` ☰ Function
   `nan_to_num()` ☰ Function
   `nanvar()` ☰ Function
   `nbytes` ☰ ?
   → development/languages/Python/libraries/numpy/ndarray[`ndarray`] ☰ `A class that represents a multidimensional array of items of the same data type.
   `ndenumerate` ☰ `numpy.ndenumerate` class
   `ndim()` ☰ Function
   `ndindex` ☰ `numpy.ndindex` class
   `nditer` ☰ `numpy.nditer` class
   `negative` ☰ ?
   `nested_iters()` ☰ Built-in function
   `newaxis` ☰ `NoneType` object
   `nextafter` ☰ ?
   `NINF` ☰ `float` object
   `_no_nep50_warning()` ☰ Function
   `nonzero()` ☰ Function
   `not_equal` ☰ ?
   `_NoValue` ☰ ?
   `numarray` ☰ `str` object
   `number` ☰ `numpy.number` class
   `NZERO` ☰ `float` object
   `obj2sctype()` ☰ Function
   `object_` ☰ `numpy.object_` class
   `ogrid` ☰ ?
   `oldnumeric` ☰ `str` object
   `ones()` ☰ Function
   `ones_like()` ☰ Function
   `outer()` ☰ Function
   `packbits()` ☰ Function
   `pad()` ☰ Function
   `partition()` ☰ Function
   `percentile()` ☰ Function
   `pi` ☰ `float` object
   `piecewise()` ☰ Function
   `PINF` ☰ `float` object
   `place()` ☰ Function
   `poly()` ☰ Function
   `poly1d` ☰ `numpy.poly1d` class
   `polyadd()` ☰ Function
   `polyder()` ☰ Function
   `polydiv()` ☰ Function
   `polyfit()` ☰ Function
   `polyint()` ☰ Function
   `polymul()` ☰ Function
   `polynomial` ☰ Module
   `polysub()` ☰ Function
   `polyval()` ☰ Function
   `positive` ☰ ?
   `power` ☰ ?
   `printoptions()` ☰ Function
   `prod()` ☰ Function
   `product()` ☰ Function
   `promote_types()` ☰ Built-in function
   `ptp()` ☰ Function
   `put()` ☰ Function
   `put_along_axis()` ☰ Function
   `putmask()` ☰ Function
   `_pyinstaller_hooks_dir()` ☰ Function
   `_pytesttester` ☰ Module
   `PZERO` ☰ `float` object
   `quantile()` ☰ Function
   `r_` ☰ ?
   `rad2deg` ☰ ?
   `radians` ☰ ?
   `RAISE` ☰ `int` object
   `random` ☰ Module
   `RankWarning` ☰ `numpy.RankWarning` class
   `ravel()` ☰ Function
   `ravel_multi_index()` ☰ Function
   `real()` ☰ Function
   `real_if_close()` ☰ Function
   `rec` ☰ Module
   `recarray` ☰ `numpy.recarray` class
   `recfromcsv()` ☰ Function
   `recfromtxt()` ☰ Function
   `reciprocal` ☰ ?
   `record` ☰ `numpy.record` class
   `remainder` ☰ ?
   `repeat()` ☰ Function
   `require()` ☰ Function
   `reshape()` ☰ Function
   `resize()` ☰ Function
   `result_type()` ☰ Function
   `right_shift` ☰ ?
   `rint` ☰ ?
   `roll()` ☰ Function
   `rollaxis()` ☰ Function
   `roots()` ☰ Function
   `rot90()` ☰ Function
   `round()` ☰ Function
   `round_()` ☰ Function
   `row_stack()` ☰ Function
   `s_` ☰ ?
   `safe_eval()` ☰ Function
   `save()` ☰ Function
   `savetxt()` ☰ Function
   `savez()` ☰ Function
   `savez_compressed()` ☰ Function
   `ScalarType` ☰ `tuple` object
   `sctype2char()` ☰ Function
   `sctypeDict` ☰ `dict` object
   `sctypes` ☰ `dict` object
   `searchsorted()` ☰ Function
   `select()` ☰ Function
   `setbufsize()` ☰ Function
   `setdiff1d()` ☰ Function
   `seterr()` ☰ Function
   `seterrcall()` ☰ Function
   `seterrobj()` ☰ Built-in function
   `set_numeric_ops()` ☰ Built-in function
   `set_printoptions()` ☰ Function
   `_set_promotion_state()` ☰ Built-in function
   `set_string_function()` ☰ Function
   `setxor1d()` ☰ Function
   `shape()` ☰ Function
   `shares_memory()` ☰ Function
   `SHIFT_DIVIDEBYZERO` ☰ `int` object
   `SHIFT_INVALID` ☰ `int` object
   `SHIFT_OVERFLOW` ☰ `int` object
   `SHIFT_UNDERFLOW` ☰ `int` object
   `short` ☰ `numpy.int16` class
   `show_config()` ☰ Function
   `show_runtime()` ☰ Function
   `sign` ☰ ?
   `signbit` ☰ ?
   `signedinteger` ☰ `numpy.signedinteger` class
   `sin` ☰ ?
   `sinc()` ☰ Function
   `single` ☰ `numpy.float32` class
   `singlecomplex` ☰ `numpy.complex64` class
   `sinh` ☰ ?
   `size()` ☰ Function
   `sometrue()` ☰ Function
   `sort()` ☰ Function
   `sort_complex()` ☰ Function
   `source()` ☰ Function
   `spacing` ☰ ?
   `split()` ☰ Function
   `sqrt` ☰ ?
   `square` ☰ ?
   `squeeze()` ☰ Function
   `stack()` ☰ Function
   `std()` ☰ Function
   `str_` ☰ `numpy.str_` class
   `string_` ☰ `numpy.bytes_` class
   `subtract` ☰ ?
   `sum()` ☰ Function
   `swapaxes()` ☰ Function
   `take()` ☰ Function
   `take_along_axis()` ☰ Function
   `tan` ☰ ?
   `tanh` ☰ ?
   `tensordot()` ☰ Function
   `test` ☰ ?
   `Tester` ☰ `numpy.testing._private.nosetester.NoseTester` class
   `testing` ☰ Module
   `tile()` ☰ Function
   `timedelta64` ☰ `numpy.timedelta64` class
   `TooHardError` ☰ `numpy.TooHardError` class
   `trace()` ☰ Function
   `tracemalloc_domain` ☰ `int` object
   `transpose()` ☰ Function
   `trapz()` ☰ Function
   `tri()` ☰ Function
   `tril()` ☰ Function
   `tril_indices()` ☰ Function
   `tril_indices_from()` ☰ Function
   `trim_zeros()` ☰ Function
   `triu()` ☰ Function
   `triu_indices()` ☰ Function
   `triu_indices_from()` ☰ Function
   `True_` ☰ ?
   `true_divide` ☰ ?
   `trunc` ☰ ?
   `typecodes` ☰ `dict` object
   `typename()` ☰ Function
   `ubyte` ☰ `numpy.uint8` class
   `ufunc` ☰ `numpy.ufunc` class
   `_UFUNC_API` ☰ `PyCapsule` object
   `UFUNC_BUFSIZE_DEFAULT` ☰ `int` object
   `UFUNC_PYVALS_NAME` ☰ `str` object
   `uint` ☰ `numpy.uint64` class
   `uint16` ☰ `numpy.uint16` class
   `uint32` ☰ `numpy.uint32` class
   `uint64` ☰ `numpy.uint64` class
   `uint8` ☰ `numpy.uint8` class
   `uintc` ☰ `numpy.uint32` class
   `uintp` ☰ `numpy.uint64` class
   `ulonglong` ☰ `numpy.ulonglong` class
   `unicode_` ☰ `numpy.str_` class
   `union1d()` ☰ Function
   `unique()` ☰ Function
   `unpackbits()` ☰ Function
   `unravel_index()` ☰ Function
   `unsignedinteger` ☰ `numpy.unsignedinteger` class
   `unwrap()` ☰ Function
   `use_hugepage` ☰ `int` object
   `ushort` ☰ `numpy.uint16` class
   `vander()` ☰ Function
   `var()` ☰ Function
   `vdot()` ☰ Function
   `vectorize` ☰ `numpy.vectorize` class
   `_version` ☰ Module
   `version` ☰ Module
   `VisibleDeprecationWarning` ☰ `numpy.VisibleDeprecationWarning` class
   `void` ☰ `numpy.void` class
   `vsplit()` ☰ Function
   `vstack()` ☰ Function
   `where()` ☰ Function
   `who()` ☰ Function
   `WRAP` ☰ `int` object
   `zeros()` ☰ Creates an `→ development/languages/Python/libraries/numpy/ndarray` whose elements are filled with zeros.
   `zeros_like()` ☰ Function

  table }

}

sa:
  *numpy* is a prerequisite for nanoGPT
