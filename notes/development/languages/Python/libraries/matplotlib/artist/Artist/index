$ matplotlib.artist.Artist

Every element being plotted with matplotlib is represented by a class that inherits from the abstract base class `matplotlib.artist.Artist`.
-
In fact, → development/languages/Python/libraries/matplotlib/figure/Figure[`Figure`] is the top level `Artist` object: it contains everything to be plotted.

`Artist` objects use 
 → development/languages/Python/libraries/matplotlib/backend_bases/Renderer[`matplotlib.backend_bases.Renderer`] objects to render data into a
→ development/languages/Python/libraries/matplotlib/backend_bases/FigureCanvas[`matplotlib.backend_bases.FigureCanvas`] (i. e. most, if not all, visible things in a plot is an `Artist` object).

There are two types of `Artist` objects:
   • Primitives (`Line2D`, `Rectangle`, `Text`, `AxesImage`, …)
   • Containers (where primitves are placed in: → development/languages/Python/libraries/matplotlib/axis/Axis[`Axis`], → development/languages/Python/libraries/matplotlib/axes[`Axes`] and → development/languages/Python/libraries/matplotlib/figure/Figure[`Figure`])


{ Common properties

  Every `Artist` object has the following properties:
  table { ll 

     `alpha` ☰ The transparency - a scalar from `0 … 1`
     `animated` ☰ A Boolean that is used to facilitate animated drawing
     `axes` ☰ The Axes that the Artist lives in, possibly `None`
     `clip_box` ☰ The bounding box that clips the Artist
     `clip_on` ☰ Whether clipping is enabled
     `clip_path` ☰ The path the artist is clipped to
     `contains` ☰ A picking function to test whether the artist contains the pick point
     `figure` ☰ The figure instance the artist lives in, possibly `None`
     `label` ☰ A text label (e.g., for auto-labeling)
     `picker` ☰ A python object that controls object picking
     `transform` ☰ The transformation (used to change the → development/languages/Python/libraries/matplotlib#mpl-coordinates[coordinate system]). See also the `transFigure` property of the → development/languages/Python/libraries/matplotlib/figure/Figure[`Figure`] object.
     `visible` ☰ A boolean whether the artist should be drawn
     `zorder` ☰ Arawing order (number)
     `rasterized` ☰ A Boolean, specifying if vectors are turned into raster graphics (for compression & EPS transparency)

  table }

  { Accessing and modifying properties

    `ax.get_alpha()`,  `ax.set_alpha(a)`, `ax.set(alpha=0.5, zorder=2)`.

     List all properties (for example when working interactively): `matplotlib.artist.getp(ax)` (or simply `getp()` in pyplot).

     Apparently, there are plans to get rid of old fashined getters and setters in favor of properties or traits.


  }

}

sa:


  `matplotlib.artist.ArtistInspector` allows to inspect `Artist` objects.
