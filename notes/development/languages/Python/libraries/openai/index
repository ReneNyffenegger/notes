$ Python library: openai

{ answer.py

 `answer.py` is a simple → development/languages/Python script that allows to ask simple questions and let them have answered by → https://openai.com/[openai]:
code {
$ ./answer.py What does SQL stand for

SQL stands for Structured Query Language.
code }

  gh|about-python|/libraries/openai/answer.py||

}
{ Library members

  table { ll

    `aiosession` ☰ `ContextVar` object
    `__all__` ☰ `list` object
    `__annotations__` ☰ `dict` object
    `api_base` ☰ `str` object
    `APIError` ☰ `openai.error.APIError` class
    `api_key` ☰ `str` object
    `api_key_path` ☰ `NoneType` object
    `api_requestor` ☰ Module
    `api_resources` ☰ Module
    `api_type` ☰ `str` object
    `api_version` ☰ `NoneType` object
    `app_info` ☰ `NoneType` object
    `Audio` ☰ `openai.api_resources.audio.Audio` class
    `__builtins__` ☰ `dict` object
    `ca_bundle_path` ☰ `NoneType` object
    `__cached__` ☰ `str` object
    `ChatCompletion` ☰ `openai.api_resources.chat_completion.ChatCompletion` class
    `Completion` ☰ `openai.api_resources.completion.Completion` class
    `ContextVar` ☰ `ContextVar` class
    `Customer` ☰ `openai.api_resources.customer.Customer` class
    `datalib` ☰ Module
    `debug` ☰ `bool` object
    `Deployment` ☰ `openai.api_resources.deployment.Deployment` class
    `__doc__` ☰ `NoneType` object
    `Edit` ☰ `openai.api_resources.edit.Edit` class
    `Embedding` ☰ `openai.api_resources.embedding.Embedding` class
    `enable_telemetry` ☰ `bool` object
    `Engine` ☰ `openai.api_resources.engine.Engine` class
    `error` ☰ Module
    `ErrorObject` ☰ `openai.api_resources.error_object.ErrorObject` class
    `File` ☰ `openai.api_resources.file.File` class
    `__file__` ☰ `str` object
    `FineTune` ☰ `openai.api_resources.fine_tune.FineTune` class
    `Image` ☰ `openai.api_resources.image.Image` class
    `InvalidRequestError` ☰ `openai.error.InvalidRequestError` class
    `__loader__` ☰ ?
    `log` ☰ `NoneType` object
    `Model` ☰ `openai.api_resources.model.Model` class
    `Moderation` ☰ `openai.api_resources.moderation.Moderation` class
    `__name__` ☰ `str` object
    `OpenAIError` ☰ `openai.error.OpenAIError` class
    `openai_object` ☰ Module
    `openai_response` ☰ Module
    `Optional` ☰ ?
    `organization` ☰ `NoneType` object
    `os` ☰ Module
    `__package__` ☰ `str` object
    `__path__` ☰ `list` object
    `proxy` ☰ `NoneType` object
    `__spec__` ☰ ?
    `TYPE_CHECKING` ☰ `bool` object
    `util` ☰ Module
    `verify_ssl_certs` ☰ `bool` object

  table }

}
