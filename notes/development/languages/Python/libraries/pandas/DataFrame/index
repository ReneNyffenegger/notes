$ Python pandas: DataFrame

A *DataFrame* is a 2 dimensional data structure.

It seems to me as though they're modelled after the → development/languages/R/data-structures/data-frame[R data frame].

gh|about-python|/libraries/pandas/DataFrame/DataFrame.py||

{ fillna

  gh|about-python|/libraries/pandas/DataFrame/fillna.py||

}
{ modify column

  gh|about-python|/libraries/pandas/DataFrame/modify-column.py||

}
{ pivot table

  gh|about-python|/libraries/pandas/DataFrame/pivot_table.py||

}

{ Members of a DataFrame

  table { ll

     `abs()` ☰
     `_accessors` ☰ `set`
     `_accum_func()` ☰
     `add()` ☰
     `_add_numeric_operations()` ☰
     `add_prefix()` ☰
     `add_suffix()` ☰
     `agg()` ☰
     `_agg_by_level()` ☰
     `_agg_examples_doc` ☰ `str`
     `aggregate()` ☰
     `_agg_summary_and_see_also_doc` ☰ `str`
     `align()` ☰
     `_align_frame()` ☰
     `_align_series()` ☰
     `all()` ☰
     `any()` ☰
     `_append()` ☰
     `append()` ☰
     `apply()` ☰
     `applymap()` ☰
     `_arith_method()` ☰
     `asfreq()` ☰
     `_as_manager()` ☰
     `asof()` ☰
     `assign()` ☰
     `astype()` ☰
     `at` ☰ `pandas.core.indexing._AtIndexer`
     `at_time()` ☰
     `_attrs` ☰ `dict`
     `attrs` ☰ `dict`
     `axes` ☰ `list`
     `_AXIS_LEN` ☰ `int`
     `_AXIS_ORDERS` ☰ `list`
     `_AXIS_TO_AXIS_NUMBER` ☰ `dict`
     `backfill()` ☰
     `between_time()` ☰
     `bfill()` ☰
     `bool()` ☰
     `_box_col_values()` ☰
     `boxplot()` ☰
     `_can_fast_transpose` ☰ `bool`
     `_check_inplace_and_allows_duplicate_labels()` ☰
     `_check_inplace_setting()` ☰
     `_check_is_chained_assignment_possible()` ☰
     `_check_label_or_level_ambiguity()` ☰
     `_check_setitem_copy()` ☰
     `_clear_item_cache()` ☰
     `clip()` ☰
     `_clip_with_one_bound()` ☰
     `_clip_with_scalar()` ☰
     `_cmp_method()` ☰
     `columns` ☰ `pandas.core.indexes.base.Index`
     `combine()` ☰
     `combine_first()` ☰
     `_combine_frame()` ☰
     `compare()` ☰
     `_consolidate()` ☰
     `_consolidate_inplace()` ☰
     `_construct_axes_dict()` ☰
     `_construct_axes_from_arguments()` ☰
     `_constructor` ☰ `type`
     `_constructor_sliced` ☰ `type`
     `_construct_result()` ☰
     `_convert()` ☰
     `convert_dtypes()` ☰
     `copy()` ☰
     `corr()` ☰
     `corrwith()` ☰
     `count()` ☰
     `_count_level()` ☰
     `cov()` ☰
     `cummax()` ☰
     `cummin()` ☰
     `cumprod()` ☰
     `cumsum()` ☰
     `_data` ☰ `pandas.core.internals.managers.BlockManager`
     `describe()` ☰
     `diff()` ☰
     `_dir_additions()` ☰
     `_dir_deletions()` ☰
     `_dispatch_frame_op()` ☰
     `div()` ☰
     `divide()` ☰
     `dot()` ☰
     `drop()` ☰
     `_drop_axis()` ☰
     `drop_duplicates()` ☰
     `_drop_labels_or_levels()` ☰
     `droplevel()` ☰
     `dropna()` ☰
     `dtypes` ☰ `pandas.core.series.Series`
     `duplicated()` ☰
     `empty` ☰ `bool`
     `_ensure_valid_index()` ☰
     `eq()` ☰
     `equals()` ☰
     `eval()` ☰
     `ewm()` ☰
     `expanding()` ☰
     `explode()` ☰
     `ffill()` ☰
     `fillna()` ☰
     `filter()` ☰
     `_find_valid_index()` ☰
     `first()` ☰
     `first_valid_index()` ☰
     `_flags` ☰ `pandas.core.flags.Flags`
     `flags` ☰ `pandas.core.flags.Flags`
     `floordiv()` ☰
     `_from_arrays()` ☰
     `from_dict()` ☰
     `from_records()` ☰
     `ge()` ☰
     `get()` ☰
     `_get_agg_axis()` ☰
     `_get_axis()` ☰
     `_get_axis_name()` ☰
     `_get_axis_number()` ☰
     `_get_axis_resolvers()` ☰
     `_get_block_manager_axis()` ☰
     `_get_bool_data()` ☰
     `_get_cleaned_column_resolvers()` ☰
     `_get_column_array()` ☰
     `_get_index_resolvers()` ☰
     `_getitem_bool_array()` ☰
     `_get_item_cache()` ☰
     `_getitem_multilevel()` ☰
     `_get_label_or_level_values()` ☰
     `_get_numeric_data()` ☰
     `_get_value()` ☰
     `_gotitem()` ☰
     `groupby()` ☰
     `gt()` ☰
     `_HANDLED_TYPES` ☰ `tuple`
     `head()` ☰
     `_hidden_attrs` ☰ `frozenset`
     `hist()` ☰
     `iat` ☰ `pandas.core.indexing._iAtIndexer`
     `id` ☰ `pandas.core.series.Series`
     `idxmax()` ☰
     `idxmin()` ☰
     `iloc` ☰ `pandas.core.indexing._iLocIndexer`
     `index` ☰ `pandas.core.indexes.range.RangeIndex`
     `_indexed_same()` ☰
     `infer_objects()` ☰
     `info()` ☰
     `_info_axis` ☰ `pandas.core.indexes.base.Index`
     `_info_axis_name` ☰ `str`
     `_info_axis_number` ☰ `int`
     `_info_repr()` ☰
     `_init_mgr()` ☰
     `_inplace_method()` ☰
     `insert()` ☰
     `_internal_names` ☰ `list`
     `_internal_names_set` ☰ `set`
     `interpolate()` ☰
     `_is_copy` ☰ `NoneType`
     `_iset_item()` ☰
     `isetitem()` ☰
     `_iset_item_mgr()` ☰
     `_iset_not_inplace()` ☰
     `_is_homogeneous_type` ☰ `bool`
     `isin()` ☰
     `_is_label_or_level_reference()` ☰
     `_is_label_reference()` ☰
     `_is_level_reference()` ☰
     `_is_mixed_type` ☰ `bool`
     `isna()` ☰
     `isnull()` ☰
     `_is_view` ☰ `bool`
     `_item_cache` ☰ `dict`
     `items()` ☰
     `_iter_column_arrays()` ☰
     `iteritems()` ☰
     `iterrows()` ☰
     `itertuples()` ☰
     `_ixs()` ☰
     `join()` ☰
     `_join_compat()` ☰
     `keys()` ☰
     `kurt()` ☰
     `kurtosis()` ☰
     `last()` ☰
     `last_valid_index()` ☰
     `le()` ☰
     `loc` ☰ `pandas.core.indexing._LocIndexer`
     `_logical_func()` ☰
     `_logical_method()` ☰
     `lookup()` ☰
     `lt()` ☰
     `mad()` ☰
     `mask()` ☰
     `max()` ☰
     `_maybe_cache_changed()` ☰
     `_maybe_update_cacher()` ☰
     `mean()` ☰
     `median()` ☰
     `melt()` ☰
     `memory_usage()` ☰
     `merge()` ☰
     `_metadata` ☰ `list`
     `_mgr` ☰ `pandas.core.internals.managers.BlockManager`
     `min()` ☰
     `_min_count_stat_function()` ☰
     `mod()` ☰
     `mode()` ☰
     `mul()` ☰
     `multiply()` ☰
     `ndim` ☰ `int`
     `ne()` ☰
     `_needs_reindex_multi()` ☰
     `nlargest()` ☰
     `notna()` ☰
     `notnull()` ☰
     `nsmallest()` ☰
     `nunique()` ☰
     `pad()` ☰
     `pct_change()` ☰
     `pipe()` ☰
     `pivot()` ☰
     `pivot_table()` ☰
     `plot` ☰ `pandas.plotting._core.PlotAccessor`
     `pop()` ☰
     `pow()` ☰
     `prod()` ☰
     `product()` ☰
     `_protect_consolidate()` ☰
     `quantile()` ☰
     `query()` ☰
     `radd()` ☰
     `rank()` ☰
     `rdiv()` ☰
     `_reduce()` ☰
     `_reduce_axis1()` ☰
     `reindex()` ☰
     `_reindex_axes()` ☰
     `_reindex_columns()` ☰
     `_reindex_index()` ☰
     `reindex_like()` ☰
     `_reindex_multi()` ☰
     `_reindex_with_indexers()` ☰
     `_rename()` ☰
     `rename()` ☰
     `rename_axis()` ☰
     `reorder_levels()` ☰
     `replace()` ☰
     `_replace_columnwise()` ☰
     `_repr_data_resource_()` ☰
     `_repr_fits_horizontal_()` ☰
     `_repr_fits_vertical_()` ☰
     `resample()` ☰
     `_reset_cache()` ☰
     `_reset_cacher()` ☰
     `reset_index()` ☰
     `rfloordiv()` ☰
     `rmod()` ☰
     `rmul()` ☰
     `rolling()` ☰
     `round()` ☰
     `rpow()` ☰
     `rsub()` ☰
     `rtruediv()` ☰
     `sample()` ☰
     `_sanitize_column()` ☰
     `select_dtypes()` ☰
     `sem()` ☰
     `_series` ☰ `dict`
     `_set_axis()` ☰
     `set_axis()` ☰
     `_set_axis_name()` ☰
     `_set_axis_nocheck()` ☰
     `set_flags()` ☰
     `set_index()` ☰
     `_set_is_copy()` ☰
     `_set_item()` ☰
     `_setitem_array()` ☰
     `_setitem_frame()` ☰
     `_set_item_frame_value()` ☰
     `_set_item_mgr()` ☰
     `_setitem_slice()` ☰
     `_set_value()` ☰
     `shape` ☰ `tuple`
     `shift()` ☰
     `size` ☰ `numpy.int64`
     `skew()` ☰
     `_slice()` ☰
     `slice_shift()` ☰
     `sort_index()` ☰
     `sort_values()` ☰
     `squeeze()` ☰
     `stack()` ☰
     `_stat_axis` ☰ `pandas.core.indexes.range.RangeIndex`
     `_stat_axis_name` ☰ `str`
     `_stat_axis_number` ☰ `int`
     `_stat_function()` ☰
     `_stat_function_ddof()` ☰
     `std()` ☰
     `style` ☰ Returns a `Styler` object (which has a `_repr_html_()` method, which makes it poosible for the data frame to be rendered in a → development/Notebook-interface/Jupyter)
     `sub()` ☰
     `subtract()` ☰
     `sum()` ☰
     `swapaxes()` ☰
     `swaplevel()` ☰
     `T` ☰ `pandas.core.frame.DataFrame`
     `tail()` ☰
     `_take()` ☰
     `take()` ☰
     `_take_with_is_copy()` ☰
     `to_clipboard()` ☰
     `to_csv()` ☰
     `to_dict()` ☰
     `_to_dict_of_blocks()` ☰
     `to_excel()` ☰
     `to_feather()` ☰
     `to_gbq()` ☰
     `to_hdf()` ☰
     `to_html()` ☰
     `to_json()` ☰
     `to_latex()` ☰
     `to_markdown()` ☰
     `to_numpy()` ☰
     `to_orc()` ☰
     `to_parquet()` ☰
     `to_period()` ☰
     `to_pickle()` ☰
     `to_records()` ☰
     `to_sql()` ☰
     `to_stata()` ☰
     `to_string()` ☰
     `to_timestamp()` ☰
     `to_xarray()` ☰
     `to_xml()` ☰
     `transform()` ☰
     `transpose()` ☰
     `truediv()` ☰
     `truncate()` ☰
     `txt` ☰ `pandas.core.series.Series`
     `_typ` ☰ `str`
     `tz_convert()` ☰
     `tz_localize()` ☰
     `unstack()` ☰
     `update()` ☰
     `_update_inplace()` ☰
     `_validate_dtype()` ☰
     `value_counts()` ☰
     `_values` ☰ `numpy.ndarray`
     `values` ☰ `numpy.ndarray`
     `var()` ☰
     `_where()` ☰
     `where()` ☰
     `xs()` ☰

  table }

  { _repr_ methods #pandas-df-repr

   `_repr_…` methods make → development/languages/Python/IPython#ipython-rich-display[rich display] possible in → development/languages/Python/IPython.

    table { ll

     `_repr_html_()` ☰
     `_repr_latex_()` ☰

    table }

  }

}
