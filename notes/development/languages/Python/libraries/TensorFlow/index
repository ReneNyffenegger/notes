
{ Installation

code {
pip install tensorflow
code }

  CPU-only:
code {
pip install tensorflow-cpu
code }

}
{ reflection

  table { ll

    `abs()` ☰
    `acos()` ☰
    `acosh()` ☰
    `add()` ☰
    `add_n()` ☰
    `AggregationMethod` ☰ ?
    `__all__` ☰ `list` object
    `_api` ☰ Module
    `_API_MODULE` ☰ Module
    `approx_top_k()` ☰
    `argmax()` ☰
    `argmin()` ☰
    `argsort()` ☰
    `as_dtype()` ☰
    `asin()` ☰
    `asinh()` ☰
    `Assert()` ☰
    `assert_equal()` ☰
    `assert_greater()` ☰
    `assert_less()` ☰
    `assert_rank()` ☰
    `as_string()` ☰
    `atan()` ☰
    `atan2()` ☰
    `atanh()` ☰
    `audio` ☰ Module
    `autodiff` ☰ Module
    `autograph` ☰ Module
    `batch_to_space()` ☰
    `bfloat16` ☰ ?
    `bitcast()` ☰
    `bitwise` ☰ Module
    `bool` ☰ ?
    `boolean_mask()` ☰
    `broadcast_dynamic_shape()` ☰
    `broadcast_static_shape()` ☰
    `broadcast_to()` ☰
    `__builtins__` ☰ `dict` object
    `__cached__` ☰ `str` object
    `case()` ☰
    `cast()` ☰
    `clip_by_global_norm()` ☰
    `clip_by_norm()` ☰
    `clip_by_value()` ☰
    `_compat` ☰ Module
    `compat` ☰ Module
    `__compiler_version__` ☰ `str` object
    `complex()` ☰
    `complex128` ☰ ?
    `complex64` ☰ ?
    `concat()` ☰
    `cond()` ☰
    → development/languages/Python/libraries/TensorFlow/config[`config`] ☰ Module
    `constant()` ☰
    `constant_initializer` ☰ ?
    `control_dependencies()` ☰
    `conv()` ☰
    `conv2d_backprop_filter_v2()` ☰
    `conv2d_backprop_input_v2()` ☰
    `convert_to_tensor()` ☰
    `cos()` ☰
    `cosh()` ☰
    `CriticalSection` ☰ ?
    `cumsum()` ☰
    `_current_file_location` ☰ `str` object
    `_current_module` ☰ Module
    `custom_gradient()` ☰
    `__cxx11_abi_flag__` ☰ `int` object
    `__cxx_version__` ☰ `int` object
    `data` ☰ Module
    `debugging` ☰ Module
    `device()` ☰
    `DeviceSpec` ☰ ?
    `distribute` ☰ Module
    `_distutils` ☰ Module
    `divide()` ☰
    `__doc__` ☰ `str` object
    `double` ☰ ?
    `dtensor` ☰ Module
    `DType` ☰ ?
    `dtypes` ☰ Module
    `dynamic_partition()` ☰
    `dynamic_stitch()` ☰
    `edit_distance()` ☰
    `eig()` ☰
    `eigvals()` ☰
    `einsum()` ☰
    `ensure_shape()` ☰
    `equal()` ☰
    `errors` ☰ Module
    `estimator` ☰ Module
    `_estimator_module` ☰ `str` object
    `executing_eagerly()` ☰
    `exp()` ☰
    `expand_dims()` ☰
    `experimental` ☰ Module
    `extract_volume_patches()` ☰
    `eye()` ☰
    `feature_column` ☰ Module
    `_fi` ☰ Module
    `__file__` ☰ `str` object
    `fill()` ☰
    `fingerprint()` ☰
    `float16` ☰ ?
    `float32` ☰ ?
    `float64` ☰ ?
    `floor()` ☰
    `foldl()` ☰
    `foldr()` ☰
    `function()` ☰
    `gather()` ☰
    `gather_nd()` ☰
    `get_current_name_scope()` ☰
    `get_logger()` ☰
    `get_static_value()` ☰
    `__git_version__` ☰ `str` object
    `gradients()` ☰
    `GradientTape` ☰ ?
    `grad_pass_through()` ☰
    `Graph` ☰ ?
    `graph_util` ☰ Module
    `greater()` ☰
    `greater_equal()` ☰
    `group()` ☰
    `guarantee_const()` ☰
    `half` ☰ ?
    `hessians()` ☰
    `histogram_fixed_width()` ☰
    `histogram_fixed_width_bins()` ☰
    `identity()` ☰
    `identity_n()` ☰
    `image` ☰ Module
    `import_graph_def()` ☰
    `IndexedSlices` ☰ ?
    `IndexedSlicesSpec` ☰ ?
    `_initializers` ☰ Module
    `initializers` ☰ Module
    `init_scope()` ☰
    `inside_function()` ☰
    `_inspect` ☰ Module
    `int16` ☰ ?
    `int32` ☰ ?
    `int64` ☰ ?
    `int8` ☰ ?
    `__internal__` ☰ Module
    `io` ☰ Module
    `is_symbolic_tensor()` ☰
    `is_tensor()` ☰
    `_keras` ☰ Module
    `keras` ☰ Module
    `_keras_module` ☰ `str` object
    `_keras_package` ☰ `str` object
    `_kernel_dir` ☰ `str` object
    `_LazyLoader` ☰ ?
    `less()` ☰
    `less_equal()` ☰
    `linalg` ☰ Module
    `linspace()` ☰
    `lite` ☰ Module
    `_ll` ☰ Module
    `__loader__` ☰ ?
    `load_library()` ☰
    `load_op_library()` ☰
    `_logging` ☰ Module
    `logical_and()` ☰
    `logical_not()` ☰
    `logical_or()` ☰
    `lookup` ☰ Module
    `_losses` ☰ Module
    `losses` ☰ Module
    `_major_api_version` ☰ `int` object
    `make_ndarray()` ☰
    `make_tensor_proto()` ☰
    `map_fn()` ☰
    `math` ☰ Module
    `matmul()` ☰
    `matrix_square_root()` ☰
    `maximum()` ☰
    `meshgrid()` ☰
    `_metrics` ☰ Module
    `metrics` ☰ Module
    `minimum()` ☰
    `mlir` ☰ Module
    `Module` ☰ ?
    `_module_dir` ☰ `str` object
    `_module_util` ☰ Module
    `__monolithic_build__` ☰ `int` object
    `multiply()` ☰
    `__name__` ☰ `str` object
    `name_scope` ☰ ?
    `_names_with_underscore` ☰ `list` object
    `negative()` ☰
    `nest` ☰ Module
    `newaxis` ☰ `NoneType` object
    `nn` ☰ Module
    `no_gradient()` ☰
    `nondifferentiable_batch_function()` ☰
    `no_op()` ☰
    `norm()` ☰
    `not_equal()` ☰
    `numpy_function()` ☰
    `one_hot()` ☰
    `ones()` ☰
    `ones_initializer` ☰ ?
    `ones_like()` ☰
    `Operation` ☰ ?
    `__operators__` ☰ Module
    `_optimizers` ☰ Module
    `optimizers` ☰ Module
    `OptionalSpec` ☰ ?
    `_os` ☰ Module
    `__package__` ☰ `str` object
    `pad()` ☰
    `parallel_stack()` ☰
    `__path__` ☰ `list` object
    `_plugin_dir` ☰ `str` object
    `pow()` ☰
    `print()` ☰
    `profiler` ☰ Module
    `py_function()` ☰
    `qint16` ☰ ?
    `qint32` ☰ ?
    `qint8` ☰ ?
    `quantization` ☰ Module
    `queue` ☰ Module
    `quint16` ☰ ?
    `quint8` ☰ ?
    `ragged` ☰ Module
    `ragged_fill_empty_rows()` ☰
    `ragged_fill_empty_rows_grad()` ☰
    `RaggedTensor` ☰ ?
    `RaggedTensorSpec` ☰ ?
    `random` ☰ Module
    `random_index_shuffle()` ☰
    `random_normal_initializer` ☰ ?
    `random_uniform_initializer` ☰ ?
    `range()` ☰
    `rank()` ☰
    `raw_ops` ☰ Module
    `realdiv()` ☰
    `recompute_grad()` ☰
    `reduce_all()` ☰
    `reduce_any()` ☰
    `reduce_logsumexp()` ☰
    `reduce_max()` ☰
    `reduce_mean()` ☰
    `reduce_min()` ☰
    `reduce_prod()` ☰
    `reduce_sum()` ☰
    `RegisterGradient` ☰ ?
    `register_tensor_conversion_function()` ☰
    `repeat()` ☰
    `required_space_to_batch_paddings()` ☰
    `reshape()` ☰
    `resource` ☰ ?
    `reverse()` ☰
    `reverse_sequence()` ☰
    `roll()` ☰
    `round()` ☰
    `_running_from_pip_package()` ☰
    `_s` ☰ `str` object
    `saturate_cast()` ☰
    `saved_model` ☰ Module
    `scalar_mul()` ☰
    `scan()` ☰
    `scatter_nd()` ☰
    `searchsorted()` ☰
    `security` ☰ Module
    `sequence_mask()` ☰
    `sets` ☰ Module
    `shape()` ☰
    `shape_n()` ☰
    `sigmoid()` ☰
    `sign()` ☰
    `signal` ☰ Module
    `sin()` ☰
    `sinh()` ☰
    `_site` ☰ Module
    `_site_packages_dirs` ☰ `list` object
    `size()` ☰
    `slice()` ☰
    `sort()` ☰
    `space_to_batch()` ☰
    `space_to_batch_nd()` ☰
    `sparse` ☰ Module
    `SparseTensor` ☰ ?
    `SparseTensorSpec` ☰ ?
    `__spec__` ☰ ?
    `split()` ☰
    `sqrt()` ☰
    `square()` ☰
    `squeeze()` ☰
    `stack()` ☰
    `stop_gradient()` ☰
    `strided_slice()` ☰
    `string` ☰ ?
    `strings` ☰ Module
    `subtract()` ☰
    `summary` ☰ Module
    `switch_case()` ☰
    `_sys` ☰ Module
    `sysconfig` ☰ Module
    `tan()` ☰
    `tanh()` ☰
    `Tensor` ☰ ?
    `TensorArray` ☰ ?
    `TensorArraySpec` ☰ ?
    `tensordot()` ☰
    `tensor_scatter_nd_add()` ☰
    `tensor_scatter_nd_max()` ☰
    `tensor_scatter_nd_min()` ☰
    `tensor_scatter_nd_sub()` ☰
    `tensor_scatter_nd_update()` ☰
    `TensorShape` ☰ ?
    `TensorSpec` ☰ ?
    `test` ☰ Module
    `_tf2` ☰ Module
    `_tf_api_dir` ☰ `str` object
    `_tf_dir` ☰ `str` object
    `tile()` ☰
    `timestamp()` ☰
    `tools` ☰ Module
    `tpu` ☰ Module
    `train` ☰ Module
    `transpose()` ☰
    `truediv()` ☰
    `truncatediv()` ☰
    `truncatemod()` ☰
    `tsl` ☰ Module
    `tuple()` ☰
    `types` ☰ Module
    `TypeSpec` ☰ ?
    `type_spec_from_value()` ☰
    `_typing` ☰ Module
    `uint16` ☰ ?
    `uint32` ☰ ?
    `uint64` ☰ ?
    `uint8` ☰ ?
    `UnconnectedGradients` ☰ ?
    `unique()` ☰
    `unique_with_counts()` ☰
    `unravel_index()` ☰
    `unstack()` ☰
    `Variable` ☰ ?
    `VariableAggregation` ☰ ?
    `variable_creator_scope()` ☰
    `VariableSynchronization` ☰ ?
    `variant` ☰ ?
    `vectorized_map()` ☰
    `__version__` ☰ `str` object
    `version` ☰ Module
    `where()` ☰
    `while_loop()` ☰
    `xla` ☰ Module
    `zeros()` ☰
    `zeros_initializer` ☰ ?
    `zeros_like()` ☰
  table }

}


sa:
  → development/languages/Python/libraries/TensorFlow/Keras[Keras] is the high-level API of the TensorFlow API.
