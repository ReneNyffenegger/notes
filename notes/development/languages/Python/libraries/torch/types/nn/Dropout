$ torch.nn.Dropout

Set elements of the input tensor to zero with a given probability (here: `p`) and adjust the the other elements with `1/(1-p)`.

code {
→ development/languages/Python/statements/import → development/languages/Python/libraries/torch

torch.manual_seed(27)

p = 0.25

drp = torch.nn.Dropout( p )
tns = → development/languages/Python/libraries/torch/types/Tensor([ [-1.0,2.0] , [4.0,5.0] ])
           

→ development/languages/Python/built-in-functions/print(tns)
#
#  tensor([[-1.,  2.],
#          [ 4.,  5.]])


→ development/languages/Python/built-in-functions/print(drp(tns))
#
#  tensor([[-0.0000, 2.6667],
#          [5.3333, 6.6667]])
code }


sa:
  Hinton et al: → https://arxiv.org/abs/1207.0580[Improving neural networks by preventing co-adaptation of feature detectors]
