$ PyTorch namespace: torch.nn.functional

`torch.nn.functional` contains
  • Functions in/for the `torch.nn` library (other parts of the library contain classes)
  • Loss and activation functions
  • Convenience functions for creating → development/Data/science/Machine-learning/neural-networks (such as pooling functions) 
  • Miscellaneous functions (convolutions, linear layers etc.)

Generally, `torch.nn.functional` is imported into the namespace `F`:
code {
→ development/languages/Python/statements/import torch.nn.functional as F
code }

{ Members


   table { ll
    `adaptive_avg_pool1d()` ☰
    `adaptive_avg_pool2d()` ☰
    `adaptive_avg_pool3d()` ☰
    `_adaptive_max_pool1d()` ☰
    `adaptive_max_pool1d()` ☰
    `adaptive_max_pool1d_with_indices()` ☰
    `_adaptive_max_pool2d()` ☰
    `adaptive_max_pool2d()` ☰
    `adaptive_max_pool2d_with_indices()` ☰
    `_adaptive_max_pool3d()` ☰
    `adaptive_max_pool3d()` ☰
    `adaptive_max_pool3d_with_indices()` ☰
    `_add_docstr()` ☰
    `affine_grid()` ☰
    `alpha_dropout()` ☰
    `assert_int_or_pair()` ☰
    `avg_pool1d()` ☰
    `avg_pool2d()` ☰
    `avg_pool3d()` ☰
    `batch_norm()` ☰
    `bilinear()` ☰
    `binary_cross_entropy()` ☰
    `binary_cross_entropy_with_logits()` ☰
    `boolean_dispatch()` ☰
    `BroadcastingList1` ☰ ?
    `BroadcastingList2` ☰ ?
    `BroadcastingList3` ☰ ?
    `Callable` ☰ ?
    `_canonical_mask()` ☰
    `celu()` ☰
    `celu_()` ☰
    `channel_shuffle()` ☰
    `conv1d()` ☰
    `conv2d()` ☰
    `conv3d()` ☰
    `conv_tbc()` ☰
    `conv_transpose1d()` ☰
    `conv_transpose2d()` ☰
    `conv_transpose3d()` ☰
    `cosine_embedding_loss()` ☰
    `cosine_similarity()` ☰
    `cross_entropy()` ☰
    `ctc_loss()` ☰
    `dropout()` ☰
    `dropout1d()` ☰
    `dropout2d()` ☰
    `dropout3d()` ☰
    `DType` ☰ `int` class
    `elu()` ☰
    `elu_()` ☰
    `embedding()` ☰
    `embedding_bag()` ☰
    `feature_alpha_dropout()` ☰
    `fold()` ☰
    `_fractional_max_pool2d()` ☰
    `fractional_max_pool2d()` ☰
    `fractional_max_pool2d_with_indices()` ☰
    `_fractional_max_pool3d()` ☰
    `fractional_max_pool3d()` ☰
    `fractional_max_pool3d_with_indices()` ☰
    `gaussian_nll_loss()` ☰
    `gelu()` ☰
    `_get_softmax_dim()` ☰
    `glu()` ☰
    `grad` ☰ Module
    `grid_sample()` ☰
    `GRID_SAMPLE_INTERPOLATION_MODES` ☰ `dict` object
    `GRID_SAMPLE_PADDING_MODES` ☰ `dict` object
    `group_norm()` ☰
    `gumbel_softmax()` ☰
    `handle_torch_function()` ☰
    `hardshrink()` ☰
    `hardsigmoid()` ☰
    `hardswish()` ☰
    `hardtanh()` ☰
    `hardtanh_()` ☰
    `has_torch_function()` ☰
    `has_torch_function_unary()` ☰
    `has_torch_function_variadic()` ☰
    `hinge_embedding_loss()` ☰
    `huber_loss()` ☰
    `_infer_size()` ☰
    `_in_projection()` ☰
    `_in_projection_packed()` ☰
    `instance_norm()` ☰
    `interpolate()` ☰
    `kl_div()` ☰
    `l1_loss()` ☰
    `layer_norm()` ☰
    `leaky_relu()` ☰
    `leaky_relu_()` ☰
    `linear()` ☰
    `List` ☰ ?
    `_list_with_default()` ☰
    `local_response_norm()` ☰
    `logsigmoid()` ☰
    `log_softmax()` ☰
    `lp_pool1d()` ☰
    `lp_pool2d()` ☰
    `margin_ranking_loss()` ☰
    `math` ☰ Module
    `_max_pool1d()` ☰
    `max_pool1d()` ☰
    `max_pool1d_with_indices()` ☰
    `_max_pool2d()` ☰
    `max_pool2d()` ☰
    `max_pool2d_with_indices()` ☰
    `_max_pool3d()` ☰
    `max_pool3d()` ☰
    `max_pool3d_with_indices()` ☰
    `max_unpool1d()` ☰
    `max_unpool2d()` ☰
    `max_unpool3d()` ☰
    `_mha_shape_check()` ☰
    `mish()` ☰
    `mse_loss()` ☰
    `multi_head_attention_forward()` ☰
    `multilabel_margin_loss()` ☰
    `multilabel_soft_margin_loss()` ☰
    `multi_margin_loss()` ☰
    `native_channel_shuffle()` ☰
    `nll_loss()` ☰
    `_no_grad_embedding_renorm_()` ☰
    `_none_or_dtype()` ☰
    `normalize()` ☰
    `one_hot()` ☰
    `Optional` ☰ ?
    `_overload()` ☰
    `pad()` ☰
    `_pair()` ☰
    `pairwise_distance()` ☰
    `pdist()` ☰
    `pixel_shuffle()` ☰
    `pixel_unshuffle()` ☰
    `poisson_nll_loss()` ☰
    `prelu()` ☰
    `_Reduction` ☰ Module
    `relu()` ☰
    `relu_()` ☰
    `relu6()` ☰
    `reproducibility_notes` ☰ `dict` object
    `rrelu()` ☰
    `rrelu_()` ☰
    `scaled_dot_product_attention()` ☰
    `selu()` ☰
    `selu_()` ☰
    `sigmoid()` ☰
    `silu()` ☰
    `_single()` ☰
    `smooth_l1_loss()` ☰
    `soft_margin_loss()` ☰
    `softmax()` ☰
    `softmin()` ☰
    `softplus()` ☰
    `softshrink()` ☰
    `softsign()` ☰
    `sparse_support_notes` ☰ `dict` object
    `_sym_int()` ☰
    `tanh()` ☰
    `tanhshrink()` ☰
    `Tensor` ☰ ?
    `tf32_notes` ☰ `dict` object
    `_threshold()` ☰
    `threshold()` ☰
    `threshold_()` ☰
    `torch` ☰ Module
    `_triple()` ☰
    `triplet_margin_loss()` ☰
    `triplet_margin_with_distance_loss()` ☰
    `Tuple` ☰ ?
    `TYPE_CHECKING` ☰ `bool` object
    `unfold()` ☰
    `Union` ☰ ?
    `_unpool_output_size()` ☰
    `upsample()` ☰
    `upsample_bilinear()` ☰
    `upsample_nearest()` ☰
    `utils` ☰ Module
    `_verify_batch_size()` ☰
    `_verify_spatial_size()` ☰
    `_VF` ☰ Module
    `warnings` ☰ Module

  table }

}
