$ Python standard library: random
@ random

{ Properties and methods

code {
import random
for e in sorted(dir(random), key=lambda s: s.lower()): print(e)
code }

   table { ll
   `__all__` ☰
   `__builtins__` ☰
   `__cached__` ☰
   `__doc__` ☰
   `__file__` ☰
   `__loader__` ☰
   `__name__` ☰
   `__package__` ☰
   `__spec__` ☰
   `_accumulate` ☰
   `_acos` ☰
   `_bisect` ☰
   `_ceil` ☰
   `_cos` ☰
   `_e` ☰
   `_exp` ☰
   `_floor` ☰
   `_index` ☰
   `_inst` ☰
   `_isfinite` ☰
   `_log` ☰
   `_ONE` ☰
   `_os` ☰
   `_pi` ☰
   `_random` ☰
   `_repeat` ☰
   `_Sequence` ☰
   `_Set` ☰
   `_sha512` ☰
   `_sin` ☰
   `_sqrt` ☰
   `_test` ☰
   `_test_generator` ☰
   `_urandom` ☰
   `_warn` ☰
   `betavariate` ☰
   `BPF` ☰
   `choice` ☰
   `choices` ☰
   `expovariate` ☰
   `gammavariate` ☰
   `gauss` ☰
   `getrandbits` ☰
   `getstate` ☰
   `LOG4` ☰
   `lognormvariate` ☰
   `normalvariate` ☰
   `NV_MAGICCONST` ☰
   `paretovariate` ☰
   `randbytes` ☰
   `randint` ☰
   `Random` ☰
   `random` ☰
   `randrange` ☰
   `RECIP_BPF` ☰
   `sample` ☰
   `seed` ☰
   `setstate` ☰
   `SG_MAGICCONST` ☰
   `shuffle` ☰
   `SystemRandom` ☰
   `triangular` ☰
   `TWOPI` ☰
   `uniform` ☰
   `vonmisesvariate` ☰
   `weibullvariate` ☰

  table }
}
{ random()

 `random.random()` returns a random number in the range 0 … 1.
  gh|about-python|/standard-library/random/random_.py||

}
{ choice #py-random-choice

 `random.choice(seq)` returns a random element from a sequence.

  gh|about-python|/standard-library/random/choice.py||

}
{ sample

  gh|about-python|/standard-library/random/sample.py||

}

sa:
  → development/languages/Python/standard-library
