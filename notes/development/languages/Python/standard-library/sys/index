$ Python - sys

gh|about-python|/standard-library/sys/script.py||

{ version_info

  gh|about-python|/standard-library/sys/version_info.py||

}
{ path #python-sys-path

 `sys.path` contains a list of directories that are searched for modules/packages when they are tried to be → development/languages/Python/statements/import[imported].

  The directories in this list include:
    • The directory of the script that is running. 
    • The directories that are listed in the `PYTHONPATH` → development/environment-variable[environment variable].
    • Defaults that are dependent on the installation (compilation?)

  The entries in `sys.path` may be modified after Python has initialized itself.

  If → development/languages/Python is started with the `-s` → development/languages/Python/command-line/options[command line option], the *user site directory* is not added to `sys.path`.

  Python allows to create *virtual environments* which is added to `sys.path` when activated, see the → development/languages/Python module → development/languages/Python/standard-library/venv[`venv`].

}
{ modules #python-sys-modules

 `modules` is a cache for all → development/languages/Python#python-packages-modules[modules] that were → development/languages/Python/statements/import[imported].

  gh|about-python|/standard-library/sys/modules.py||

}
{ executable #python-sys-executable

 `sys.executable` prints the *absolute path* of the Python interpreter (executable).

}
{ argv #py-sys-argv

  gh|about-python|/standard-library/sys/argv.py||

}
sa:

  → development/languages/Python/standard-library/sys/stdin-stdout-stderr[`sys.stdin`, `sys.stdout` and `sys.stderr`]

  → development/languages/Python/standard-library/sys/getrefcount[`sys.getrefcount(obj)`] returns the → development/languages/Python/objects/reference-counter[reference counter] of `obj`.

  → development/languages/Python/standard-library
