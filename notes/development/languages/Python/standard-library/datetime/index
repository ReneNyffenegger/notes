$ Python standard library: datetime
@ datetime

The Python module `datetime` provides date and time calculations.

{ strptime #py-datetime-strptime

  gh|about-python|/standard-library/datetime/datetime/strptime.py||

  Compare with the → development/languages/R/functions/strptime[R function `strptime`] and the
  → development/languages/Perl/modules/DateTime/Format/Strptime[Perl module `DateTime::Format::Strptime`].

}
{ datetime.toordinal

 `datetime.toordinal(…)` returns the number of days since December 31, 1 BC at 00:00 in the proleptic Gregorian date:
  gh|about-python|/standard-library/datetime/datetime/toordinal.py||

}
{ datetime.date

  gh|about-python|/standard-library/datetime/date/script.py||

}
{ datetime.timedelta

  gh|about-python|/standard-library/datetime/timedelta/script.py||

}
{ Calculating the Julian Day Number #calc-jd-py

  The following snippet can be used to calculate the → Wissenschaft/misc/Bestimmung-von-Daten#julianischer-tag[Julian Day]:
code {
import datetime
import sqlite3

print ( datetime.date(2025,10,27).toordinal()+1721424.5 )

#
#   Verify with with sqlite3 julianday function:
#
print (sqlite3.connect(':memory:').cursor().execute("select julianday('2025-10-27')").fetchone()[0])
code }

}

sa:
  
  The standard library → development/languages/Python/standard-library/dateutil[`dateutil`] provides extensions to `datetime`.
