$ Python: printf using ctypes

The `→ development/languages/Python/standard-library/ctypes` standard library allows use the → development/languages/C-C-plus-plus/C/libc[standard C lib's] implementation of `→ development/languages/printf`.

Note that the use of → development/languages/Python/literals#py-string-literals[`b'…'` literals] is required when calling `printf`.

{ Linux

code {
import ctypes

libc = ctypes.cdll.LoadLibrary("libc.so.6")

chars_printed = libc.printf(b'num: %d, txt: %s\n', 42, b'Hello World')
code }

}
{ Windows

  
code {
import ctypes

libc = ctypes.cdll.msvcrt

chars_printed = libc.printf(b'num: %d, txt: %s\n', 42, b'Hello World')
code }

}

sa:
  → development/languages/Python/types/string/format[`string.format()`]

links:
  → https://stackoverflow.com/a/72287226/180275[This Stackoverflow answer] was very helpful and served as basis for the information on this page.
