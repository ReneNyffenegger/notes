$ Python standard library: csv

The `csv` module allows to read and write → development/Data/exchange/formats/CSV files.

A script to read a csv file line by line:
gh|about-python|/standard-library/csv/script.py||

The read csv file could be:
gh|about-python|/standard-library/csv/data.csv||


{ Methods and properties

code {
import csv
for e in sorted(dir(csv), key=lambda s: s.lower()): print(e)
code }

  table { ll
    `__all__` ☰
    `__builtins__` ☰
    `__cached__` ☰
    `__doc__` ☰
    `__file__` ☰
    `__loader__` ☰
    `__name__` ☰
    `__package__` ☰
    `__spec__` ☰
    `__version__` ☰
    `_Dialect` ☰
    `Dialect` ☰ A class that specifies how different aspects of CSV files, such as double quotes, white spaces, delimiters etc.
    `DictReader` ☰ Returns an object similar to that returned by `reader`, but the CSV data can be accessed using a dict, i. e. with the names of the CSV columns.
    `DictWriter` ☰
    `Error` ☰
    `excel` ☰
    `excel_tab` ☰
    `field_size_limit` ☰
    `get_dialect` ☰
    `list_dialects` ☰
    `QUOTE_ALL` ☰
    `QUOTE_MINIMAL` ☰
    `QUOTE_NONE` ☰
    `QUOTE_NONNUMERIC` ☰
    `re` ☰
    `reader` ☰ Returns an object which will iterate over the lines produced by any object that supports the *iterator protocol* (such as file or list objects). Compare with `writer`.
    `register_dialect` ☰
    `Sniffer` ☰
    `StringIO` ☰ Compare with → development/languages/Python/standard-library/io#py-io-StringIO[`io.StringIO`]
    `unix_dialect` ☰
    `unregister_dialect` ☰
    `writer` ☰ Creates an object that converts data into delimited strings and sends them to any object that has a `write()` method.
  table }

}
{ Read tab separated values

  Sometimes, the fields are not separated by commas but rather by tabulators. This can be indicated with the `delimiter` argument:
  gh|about-python|/standard-library/csv/read_tab_seperated_values.py||

  the file being read might look like
  gh|about-python|/standard-library/csv/data.tsv||

}

sa:

  → development/languages/Python/code-snippets/read-csv[Poor man's CSV reader]

  → development/languages/Python/standard-library
