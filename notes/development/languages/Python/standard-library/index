$ Python's standard library
@ standard library

table { ll

  → development/languages/Python/standard-library/abc[abc] ☰ `abc` allows to define *abstract base classes*.
  aifc ☰
  → development/languages/Python/standard-library/argparse ☰ process command line arguments
  → development/languages/Python/standard-library/array[array] ☰ An array, in contrast to a → development/languages/Python/types/list[list], contains elements that all have the same → development/languages/Python/types[types].
  ast ☰
  asynchat ☰
  → development/languages/Python/standard-library/asyncio ☰ create concurrent programs (`async` and `await`)
  asyncore ☰
  → development/languages/Python/standard-library/atexit ☰ `atexit` provides a register function that is similar to → development/languages/C-C-plus-plus[C's] `oneexit()`.
  audioop ☰
  base64 ☰
  bdb ☰
  binascii ☰
  binhex ☰
  bisect          ☰
  builtins ☰
  bz2             ☰
  calendar ☰ Functions that allow to output *calendars* like the unix shell `→ Linux/shell/commands/cal` command.
  cgi ☰
  cgitb ☰
  chunk ☰
  cmath ☰ Provides mathematical functions for *complex numbers*, → development/languages/Python/standard-library/math/vs-cmath[compare with `math`].
  cmd ☰
  code ☰
  codecs          ☰
  codeop ☰
  → development/languages/Python/standard-library/collections[collections] ☰
  → development/languages/Python/standard-library/collections/abc[collections.abc] ☰ `collections.abc` adds some useful *abstract base classes* such as `Iterable`, `Container` and `MutableMapping`.
  colorsys ☰
  compileall ☰
  concurrent.futures ☰
  configparser    ☰
  contextlib ☰ Functionality that is used with and for → development/languages/Python/objects/context-manager[context managers], for example the → development/languages/Python/standard-library/contextlib/contextmanager[`contextmanager`] → development/languages/Python/functions/decorators.
  → development/languages/Python/standard-library/copy ☰
  copyreg         ☰
  crypt ☰
  → development/languages/Python/standard-library/csv ☰ Read and write → development/Data/exchange/formats/CSV files.
  → development/languages/Python/standard-library/ctypes ☰ call → Windows/development/Portable-Executable/DLL[DLLs] or → development/languages/C-C-plus-plus/GCC/libraries/shared
  curses ☰ Note: there is no curses module for → Windows. Use `consolelib` instead.
  curses.ascii    ☰
  curses.panel    ☰
  curses.textpad  ☰
  → development/languages/Python/standard-library/datetime ☰ Date and time calculations
  → development/languages/Python/standard-library/dateutil ☰ Provides extensions to → development/languages/Python/standard-library/datetime[`datetime`]
  dbm ☰ A generic interface to the DBM database (which is able to store simple key/value pairs). Compare with `→ development/languages/Python/standard-library/shelve`
  decimal ☰ Replacement for the `float` → development/languages/Python/types[type] when pricision is important, such as in financial applications.
  difflib         ☰
  → development/languages/Python/standard-library/dis ☰ disassembler for → development/languages/Python/internals/bytecode.
  → development/languages/Python/standard-library/distutils ☰ Tools to distribute Python modules. Compare with `→ development/languages/Python/libraries/setuptools`. See also PEP 517
  → development/languages/Python/standard-library/doctest ☰ `doctest` finds code-examples in a module's → development/languages/Python/docstring and executes them, typically for → development/testing[testing] purposes.
  _dummy_thread ☰
  dummy_threading ☰
  email ☰ Manage email messages: → development/web/Multipurpose-Internet-Mail-Extensions and → development/web/RFC#rfc-2822[RFC 2822]
  ensurepip ☰
  enum            ☰
  errno           ☰
  faulthandler ☰
  fcntl ☰
  filecmp         ☰
  fileinput       ☰
  fnmatch         ☰
  formatter ☰
  fpectl ☰
  → development/languages/Python/standard-library/fractions ☰ Support for rational numbers.
  → development/languages/Python/standard-library/ftplib ☰
  → development/languages/Python/standard-library/functools[functools] ☰ Used with and for → development/languages/Python/objects/callable[callable objects]
  __future__ ☰ a *pseudo module* that enables new language features that are not compatible with the current interpreter.
  gc ☰ control the *garbage collector*
  → development/languages/Python/standard-library/getopt ☰ 
  → development/languages/Python/standard-library/getpass ☰ Gets a user's login name or prompts for entering a value without echoing it (typically used to enter → development/security/password[passwords]).
  gettext ☰
  → development/languages/Python/standard-library/glob ☰ find filenames with wildcards.
  grp ☰
  → development/languages/Python/standard-library/gzip ☰ 
  hashlib         ☰ 
  heapq           ☰ 
  hmac            ☰ 
  html ☰
  html.entities ☰
  html.parser ☰
  http            ☰ Allows to create → web/webserver/index[webservers].
  http.client ☰
  http.cookiejar ☰
  http.cookies ☰
  → development/languages/Python/standard-library/http/server ☰ Is Python 2 `SimpleHTTPServer` merged into `http.server` in Python 3?
  IDLE ☰
  imaplib ☰
  imghdr ☰
  → development/languages/Python/standard-library/imp[imp] ☰ 
  → development/languages/Python/standard-library/importlib[importlib] ☰ An interface to the instrinsics of the → development/languages/Python/statements/import[import] statement.
  → development/languages/Python/standard-library/inspect ☰
  → development/languages/Python/standard-library/io ☰
  ipaddress ☰
  → development/languages/Python/standard-library/itertools ☰ → development/languages/Python/iterable/iterator[Iterator] building blocks.
  → development/languages/Python/standard-library/json[json] ☰ to parse → development/languages/JavaScript/JSON/index[JSON] data.
  keyword ☰
  lib2to3 ☰ Convert Python 2 scripts to Python 3 scripts. See also the → development/languages/Python/installation/directory/Tools/scripts/2to3_py script.
  linecache       ☰ 
  locale ☰
  logging         ☰ 
  logging.config  ☰ 
  logging.handlers☰ 
  lzma            ☰ 
  macpath         ☰
  mailbox ☰
  mailcap ☰
  __main__ ☰
  marshall        ☰ 
  → development/languages/Python/standard-library/math ☰ Access the → development/languages/C-C-plus-plus/C/libc[standard c library] mathematical (floating point) routines, → development/languages/Python/standard-library/math/vs-cmath[compare with `cmath`].
  mimetypes ☰
  mmap ☰
  modulefinder ☰
  msilib ☰
  msvcrt ☰
  multiprocessing ☰
  → development/languages/Python/standard-library/netrc ☰ Parses files adhering to the *netrc format* (like `→ Linux/fhs/home/username/_netrc`).
  nis ☰
  nntplib ☰
  numbers ☰ 
  → development/languages/Python/standard-library/operator ☰ Exports efficient functions corresponding to Python's intrinsic → development/languages/Python/operators.
  optparse ☰ *Deprecated*
  → development/languages/Python/standard-library/os ☰ 
  → development/languages/Python/standard-library/os/path ☰ functions related to files and filename manipulation
  ossaudiodev ☰
  parser ☰
  → development/languages/Python/standard-library/pathlib ☰ 
  pdb ☰ a simple console-mode debugger
  → development/languages/Python/standard-library/pickle ☰ The `pickle` module allows to → development/languages/Python/objects#py-object-serialization[serialize] arbitrarily complex → development/languages/Python/objects[objects]. See also the `dbm` and `→ development/languages/Python/standard-library/shelve` libraries.
  pickletools ☰
  pipes ☰
  pkgutil ☰
  platform ☰ 
  plistlib        ☰ 
  poplib ☰ Compare with the `smtplib` and `email` modules
  posix ☰
  profile ☰
  pprint ☰ pretty printer, compare with the `reprlib` and → development/languages/Python/standard-library/textwrap[`textwrap`] modules
  pstat ☰
  pty ☰
  pwd ☰
  pyclbr ☰
  py_compile ☰
  pydoc ☰ `pydoc` can create → development/web/HTML from doc-strings that is located in a module's source code. (Compare with → http://epydoc.sourceforge.net/[epydoc] and → http://sphinx-doc.org/[Sphinx].
  → development/languages/Python/standard-library/queue ☰
  quopri ☰
  → development/languages/Python/standard-library/random ☰ Pseudo random number generator and selections. Compare with `secrets`.
  → development/languages/Python/standard-library/re[re] ☰ for → development/regular-expressions.
  readline ☰ Input line editing etc., Apparently not availble on → Windows. See also `rlcompleter`
  reprlib ☰ Compare with `pprint`
  resource ☰
  rlcompleter ☰ See also `readline`.
  runpy ☰
  sched ☰
  secrets ☰ Generate random number for cryptographical use (passwords, authentication, security tokens etc.). Compare with the pseudo random number generators of `→ development/languages/Python/standard-library/random`. 
  select ☰
  selectors ☰
  shelve ☰ A dictionary-like which allows to persist any → development/languages/Python/objects that can also be handled by `→ development/languages/Python/standard-library/pickle`. Compare with `dbm`
  shlex ☰
  → development/languages/Python/standard-library/shutil[`shutil`] ☰ `shutil` contains *high-level file operations*.
  signal ☰
  site ☰
  smtpd ☰
  smtplib ☰ compare with `poplib` and `email` modules
  sndhdr ☰ Determines type of a sound file. Deprecated in 3.11, to be removed in 3.13.
  socket ☰
  socketserver ☰
  spwd ☰
  → development/languages/Python/standard-library/sqlite3[sqlite3] ☰ to access → development/databases/SQLite databases.
  ssl ☰
  stat            ☰ 
  statistics ☰ calculate some basic → science/mathematics/statistics[statistical] properties (mean, median, variance, etc.)
  string ☰ 
  stringprep ☰
  → development/languages/Python/standard-library/struct ☰ Read or write → development/Data/binary.
  → development/languages/Python/standard-library/subprocess ☰
  sunau ☰
  symbol ☰
  symtable ☰
  → development/languages/Python/standard-library/sys[sys] ☰  to access system specifica.
  sysconfig       ☰
  sysconfig ☰
  syslog ☰
  tabnanny ☰
  tarfile         ☰ 
  telnetlib ☰
  tempfile        ☰ 
  termios ☰
  test ☰
  test.support ☰
  → development/languages/Python/standard-library/textwrap[textwrap] ☰ o wrap text and remove leading space from triple quoted strings.
  _thread ☰
  → development/languages/Python/standard-library/threading ☰ Support for multi-threaded applications
  → development/languages/Python/standard-library/time[time]            ☰ 
  → development/languages/Python/standard-library/timeit[timeit] ☰ for precise code-execution-duration measurements.
  → development/languages/Python/standard-library/tkinter ☰
  tkinter.scrolledtext ☰
  tkinter.tix ☰
  tkinter.ttk ☰
  token ☰
  tokenize ☰
  trace ☰
  traceback ☰ Extract, format and print stack traces. Compare with `sys.last_traceback`, `sys.exc_info` and `→ development/languages/Python/standard-library/sys/_call-stack/_current_frames`.
  tracemalloc ☰
  tty ☰
  turtle ☰
  types           ☰ 
  typing ☰ Support for type hints (such as `Any`, `Union`, `Callable`, `TypeVar` and `Generic`), see also PEP 483 and 484
  unicodedata     ☰ 
  → development/languages/Python/standard-library/unittest ☰
  unittest.mock ☰
  unittest.mock ☰
  urllib ☰
  urllib.error ☰
  urllib.parse ☰
  → development/languages/Python/standard-library/urllib/request ☰
  urllib.response ☰
  urllib.robotparser ☰
  uu ☰
  uuid ☰
  → development/languages/Python/standard-library/venv ☰ create *virtual environments*
  warnings ☰
  wave ☰
  → development/languages/Python/standard-library/weakref ☰ weakref allows to point to → development/languages/Python/objects without incrementing their → development/languages/Python/objects/reference-counter.
  webbrowser ☰
  winreg ☰
  winsound ☰
  → development/languages/Python/standard-library/wsgiref ☰ The reference implementation for → development/languages/Python/PEP/3333[WSGI]
  xdrlib ☰ 
  XML ☰
  xml.dom ☰
  → development/languages/Python/standard-library/xml/dom/minidom ☰
  xml.dom.pulldom ☰
  → development/languages/Python/standard-library/xml/etree/ElementTree ☰
  xml.parsers.expat ☰
  xmlrpc ☰
  xmlrpc.client, xmlrpc.server ☰ remote procedure calls
  xml.sax ☰
  xml.sax.handler ☰
  xml.sax.saxutils ☰
  xml.sax.xmlreader ☰
  zipapp ☰
  zipfile         ☰ 
  zipimport ☰
  zlib ☰ → development/Data compression


table }

{ TODO

  { Built-in libraries

   The tuple of of modules that are compiled into the Python interpreter can be obtained with the following snippet:
code {
→ development/languages/Python/statements/import → development/languages/Python/standard-library/sys
for lib in (sorted(sys.builtin_module_names)): print(lib)
code }

  }

}

sa:

  Code in the standard library *must* adhere to → development/languages/Python/PEP[PEP] 8 (Style Guide for Python Code).

? The root directory of the standard library can be determined with `→ development/languages/Python/standard-library/sys[sys].prefix`.

  The → development/languages/Python#py-sig[special interest group] → https://www.python.org/community/sigs/current/stdlib-sig[stdlib-sig].
