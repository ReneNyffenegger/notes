$ Python standard library: asyncio
@ asyncio

`asyncio` allows to create concurrent programs (`async` and `await`).

{ Hello world

  This hello world programs was slightly adapted from → https://docs.python.org/3/library/asyncio.html[Python's documentation] in order to show that the
  type of the object that is returned by `async def` is a *coroutine* → development/languages/Python/objects.

  gh|about-Python|/standard-library/asyncio/hello-world.py||

}

sa:

  The → development/languages/Python/statements/def[`def` statement]

  → development/languages/Python/PEP[PEPs]
    • 492: Coroutines with `async` and `await` syntax
    • 3156: Asynchronous IO Support Rebooted: the “asyncio” Module

  → https://github.com/aio-libs[`aio-libs` (github)] is the set of ayncio-based libraries (allegedly built with high quality) and includes, among others:
    • `aiohttp`, `aiohttp-debug`, `aiohttp-remotes`, `aiohttp-session`, `aiohttp-cors`, `aiohttp-flashbag`, `aiohttp-site`, `aiohttp-bot`, `aiohttp-benchmarks`
    • `create-aio-app` (The boilerplate for `aiohttp`. Quick setup for your asynchronous web service.)
    • `aiomysql`, `aiopg`
    • `aiodocker`
    • `azure-pipelines`
