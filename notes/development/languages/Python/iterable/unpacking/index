$ Python: iterable unpacking

gh|about-Python|/iterable/unpacking/assignment.py||

{ Unpacking in a for … in loop #py-iterable-unpacking-for

  Iterable unpacking can also be applied in a → development/languages/Python/statements/for[`for … in` loop]:
  gh|about-Python|/iterable/unpacking/for-in.py||

  This example prints:
code {
['two', 'three', 'four']
five

1
[2, 3]
5
code }

}
{ Type of an upacked iterarable

  The type of the portion of the iterable that was assigned to the variable with the `*` is → development/languages/Python/types/list:
  gh|about-Python|/iterable/unpacking/type.py||

}

sa:
  Sometimes, when unpacking a in iterable into variables, some of these variables are not needed later. This can be indicated by
  unpacking them into the → development/languages/Python/variables#py-var-underscore[underscore variable].
