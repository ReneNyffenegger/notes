$ Python: generators

A generator is used to create an → development/languages/Python/iterators[iterator]. That is, a generator creates the
→ development/languages/Python/dunders/__iter__[`__iter__`] and → development/languages/Python/dunders/__next__[`__next__`] methods and raises the `StopIteration` exception automatically behind the scenes.

In order to define a generator function, the → development/languages/Python/statements/yield[`yield`] statement (or the equivalent(?) *yield expression*) is used.

{ Generator expression

  A *generator expression* is basically an expression followed by a `for` and optional `if` clause:

code {
>>> gen_expr = ( math.sqrt(i) for i in [3,-2,5,6] if i >= 0 )
>>> type(gen_expr)

<class 'generator'>
code }

}

sa:
  → development/languages/Python/iterable/iterator[iterators]
