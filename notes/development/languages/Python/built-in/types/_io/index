$ Python: (some) _io types

code {
w_ = open('w_'    , 'w' )
wb = open('wb'    , 'wb')
rb = open(__file__, 'rb')

def cls(obj):
    print(' <- '.join( map(lambda t: '.'.join([t.__module__, t.__qualname__]), type(obj).mro())))

cls(w_)
cls(wb)
cls(rb)
code }

The above code prints
code {
_io.TextIOWrapper <- _io._TextIOBase <- _io._IOBase <- builtins.object
_io.BufferedWriter <- _io._BufferedIOBase <- _io._IOBase <- builtins.object
_io.BufferedReader <- _io._BufferedIOBase <- _io._IOBase <- builtins.object
code }

{ _io.IOBase

 `_io.IOBase` is the (abstract) base class for all I/O related classes. `IOBase` inherits from `builtins.object`

  table { ll
    `close()` ☰
    `closed` ☰
    `fileno()` ☰
    `flush()` ☰
    `isatty()()rr` ☰
    `readable()` ☰
    `readline(size=- 1, /)` ☰
    `readlines(hint=- 1, /)` ☰
    `seek(offset, whence=SEEK_SET, /)` ☰
    `seekable()` ☰
    `truncate(size=None, /)` ☰
    `writable()` ☰
    `writelines()` ☰
    `__del__()` ☰

  table }

  Note that `_io.IOBase` does not have `read()` or `write()`.

}
{ _io.BufferedIOBase

 `_io.BufferedIOBase` inherits from `_io.IOBase`.

  table { ll
    `raw` ☰
    `detach()` ☰
    `read(size=- 1, /)` ☰
    `read1(size=- 1, /)` ☰
    `readinto(b, /)` ☰
    `readinto1(b, /)` ☰
    `write(b, /)` ☰
  table }

}
{ _io.BufferedReader

 `_io.BufferedReader` inherits from `_io.BufferedIOBase`.

  table { ll
    `peek((size=0, /)` ☰
    `read(size=- 1, /)` ☰
    `read1(size=- 1, /)` ☰
  table }

}
{ _io.BufferedWriter

 `_io.BufferedWriter` inherits from `_io.BufferedIOBase`.

  table { ll
    `flush()` ☰
    `write(b, /)` ☰
  table }

}
{ _io.TextIOBase

 `_io.TextIOBase` inherits from `_io.IOBase`

  table { ll
    `encoding` ☰
    `errors` ☰
    `newlines` ☰
    `buffer` ☰
    `detach()` ☰
    `read(size=- 1, /)` ☰
    `readline(size=- 1, /)` ☰
    `seek(offset, whence=SEEK_SET, /)` ☰
    `tell()` ☰
    `write(s, /)` ☰

  table }

}
{ _io.TextIOWrapper

 `_io.TextIOWrapper` inherits from `_io.TextIOBase`.

  table { ll
    `line_buffering` ☰
    `write_through` ☰
    `reconfigure(*[, encoding][, errors][, newline][, line_buffering][, write_through])` ☰
  table }

}

sa:
  → development/languages/Python/built-in-functions/open[`open()`]
