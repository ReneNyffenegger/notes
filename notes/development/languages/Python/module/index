$ Python: module
@ module

A *module* is a file that contains → development/languages/Python/statements and → development/languages/Python/expressions[expressions].

This module-file must have a → development/filename-extensions#py[`.py`] extensions. The name of the file without the extension becomes the *name of the module*.

In order to access code in a module, it needs to be imported with the → development/languages/Python/statements/import[`import`] statement.

After a module is imported, its name is added to the local scope, which can be seen by comparing the result of → development/languages/Python/built-in-functions/dir[`dir()`] before and after the import.

When code of the module is executed, the object → development/languages/Python/dunders/__name__[`__name__`] is a string that evaluates to the name of the module.

{ Locating modules

  When a Python program imports a module, the interpreter first verifies if this module belongs to the → development/languages/Python/standard-library and, if so, loads it.

  Otherwise, it searches the module-file in the directories that are referrered to in 
  → development/languages/Python/standard-library/sys#python-sys-path[`sys.path`].

}
{ Cached Python modules

  When Python compiles a module, it stores the result of the compilation under a directory named `__pycache__` with an extension of the Python version and → development/filename-extensions#pyc[`.pyc`].

  This allows to import modules faster the second time.

}
{ Module specific symbol table

  Each module has its own private → development/languages/Python/internals/symbol-table.

  This symbol table is used in lieu of the global symbol table by the → development/languages/Python/functions[functions] that are defined in the module.

  Thus, a function in a module cannot accidentally overwrite a global variable.

}


sa:

  → development/languages/Python/standard-library/sys#python-sys-modules[`sys.modules`] is a cache for all modules that were imported.

  The → development/languages/Python/standard-library[standard-library] module → development/languages/Python/standard-library/importlib[`importlib`].

  The → development/languages/Python/built-in-functions[built-in] function → development/languages/Python/built-in-functions/__import__[`__import__`].

