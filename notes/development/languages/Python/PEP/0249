$ PEP 249 - Python Database API Specification v2.0

→ https://peps.python.org/pep-0249/[PEP 249] specifies common usage patterns for Python packages that allow to connect to → development/databases[databases].

{ DBAPI

 *DBAPI* is a commonly seen abbreviation that stands for Python Database API Specification.

}

{ Interfaces and objects

  { Module interface

    table { ll
      `apilevel` ☰ Evaluates to `1.0` or `2.0`
      `connect()` ☰ Returns a `Connection` object
      `paramstyle` ☰ `qmark`: `?` | `numeric`: `:1` | `named`: `:name` | `format` : `name=%2` | `pyformat`: `%(name)s`
      `threadsafety` ☰ `0` … `3`
    table }

  }
  { Connection object

    table { ll
       `close()` ☰
       `commit()` ☰
       `rollback()` ☰
       `cursor()` ☰ Returns a new `Cursor` object
    table }

  }
  { Cursor object #py-sqlite-cursor-obj

    table { ll

       `arraysize` ☰ R/W: Number of rows fetched with `fetchmany()` (and also `fetchall()` ?)
       `callproc()` ☰ Calls a stored procedure. If the procedure produces a resultset, it must be iterated over using `fetch()`
       `connection` ☰ Optional, v2
       → #pep-249-description[`description`] ☰ A sequence where each element describes a column of (`select`) result set.
       `execute()` ☰ Prepare and execute a statement. An optional second argument specifies the values that will be bound to variables in the statement (sequence or mapping).
       `executemany()` ☰ See also `arraysize`
       `fetchall()` ☰ Returns a → development/languages/Python/types/list of → development/languages/Python/types/tuple[tuples] containing the query result set's remaining rows. Performance may be affected by value of `arraysize` property. See also `fetchmany()`.
       `fetchmany()` ☰ Fetches a given amount or `arraysize` records. See also `fetchall()`
       `fetchone()` ☰ Returns one record as a → development/languages/Python/types/tuple (see these → development/languages/Python/standard-library/sqlite3/Cursor/select-single-row[SQLite examples])
       `→ development/languages/Python/standard-library/sqlite3/lastrowid` ☰ Returns the last inserted → development/databases/SQLite/tables/rowid[rowid].
       `next()` ☰ Optional, v2
       `nextset()` ☰ Skip to the next available set. (Optional as not all databases support multiple result sets)
       `messages` ☰ Optional, v2
       `rowcount` ☰
       `rownumber` ☰ Optional, v2
       `scroll()` ☰ Optional, v2
       `setinputsizes(s)` ☰
       `setoutputsize(s[, col])` ☰
       `__iter__` ☰ Optional, v2: Make cursors compatible with the *iterable protocol*.
    table }

    { description #pep-249-description

      The `description` property is a sequence where each element describes the column (name, datatype, etc.)  of a (`select`) result set.

      Each element stores up to seven elements of which the two first are mandatory:
      table { ll
         name ☰
         type_code ☰ Note that the implementation for `sqlite3` seems to fill this value with `None`.
         display_size ☰
         internal_size ☰
         precision ☰
         scale ☰
         null_ok ☰
      table }

      See also the → development/languages/Python/standard-library/sqlite3/Cursor#py-sqlite3-cursor-description[`description`] of the `→ development/languages/Python/standard-library/sqlite3` Cursor object.

    }

  }

  { Exception hierarchy

code {
StandardError
   Warning
   Error
      InterfaceError
      DatabaseError
         DataError
         OperationalError
         IntegrityError
         InternalError
         ProgrammingError
         NotSupportedError
code }

  }

}

sa:

  The standard library → development/languages/Python/standard-library/sqlite3[`sqlite3`]

  A small list of → development/languages/Python/PEP[other interesting PEPs]

  The Python libraries
    • `→ development/languages/Python/libraries/cx_Oracle`
    • `→ development/languages/Python/libraries/SQLAlchemy` (especially its `dialect` object)
    •  → https://github.com/kennethreitz/records[`records`], allegedly an SQL library for humans.

links:
  → https://peps.python.org/pep-0249/
