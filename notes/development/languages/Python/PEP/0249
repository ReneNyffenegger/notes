$ PEP 249 - Python Database API Specification v2.0

Summary of → https://peps.python.org/pep-0249/[PEP 249]

{ Module interface

  table { ll
    `apilevel` ☰ Evaluates to `1.0` or `2.0`
    `connect()` ☰ Returns a `Connection` object
    `paramstyle` ☰ `qmark`: `?` | `numeric`: `:1` | `named`: `:name` | `format` : `name=%2` | `pyformat`: `%(name)s`
    `threadsafety` ☰ `0` … `3`
  table }

}
{ Connection object

  table { ll
     `close()` ☰
     `commit()` ☰
     `rollback()` ☰
     `cursor()` ☰ Returns a new `Cursor` object
  table }

}
{ Cursor object

  table { ll

     `arraysize` ☰ R/W: Number of rows fetched with `fetchmany()`
     `callproc()` ☰ Calls a stored procedure. If the procedure produces a resultset, it must be iterated over using `fetch()`
     `connection` ☰ Optional, v2
     `description` ☰ A sequence of 7-item (of which only the first two are mandatory) sequences describing one result column.
     `execute()` ☰
     `executemany()` ☰ See also `arraysize`
     `fetchone()` ☰ 
     `fetchall()` ☰ 
     `lastrowid` ☰
     `next()` ☰ Optional, v2
     `nextset()` ☰ Skip to the next available set. (Optional as not all databases support multiple result sets)
     `messages` ☰ Optional, v2
     `rowcount` ☰
     `rownumber` ☰ Optional, v2
     `scroll()` ☰ Optional, v2
     `setinputsizes(s)` ☰
     `setoutputsize(s[, col])` ☰
     `__iter__` ☰ Optional, v2: Make cursors compatible with the *iterable protocol*.
  table }

}

{ Exception hierarchy

code {
StandardError
   Warning
   Error
      InterfaceError
      DatabaseError
         DataError
         OperationalError
         IntegrityError
         InternalError
         ProgrammingError
         NotSupportedError
code }

}

sa:
  The standard library → development/languages/Python/standard-library/sqlite3[`sqlite3`]

  A small list of → development/languages/Python/PEP[other interesting PEPs]

links:
  → https://peps.python.org/pep-0249/
