$ Python: dict
@ dict

{ A dict is a mapping, not a sequence

  Although a dict implements
  → development/languages/Python/dunders/__getitem__[`__getitem__()`] and → development/languages/Python/dunders/__len__[`__len__()`], it is considered a mapping type rather than a
  → development/languages/Python/iterable/sequence type.

  This is because the items a dict contains are looked up with immutable keys rather than integers.

}
{ Check if a given key exists

  The `in` operator returns true if a given key exists in a dictionary and false otherwise:
  gh|about-python|/types/dict/check-if-key-exists.py||

}
{ Getting keys of a dictionary

  `keys()` returns a list that contains a dictionary's keys:
  gh|about-python|/types/dict/keys.py||

}
{ Getting keys and values of a dictionary

 `items()` can be used to extract both keys and values from a dictionary:
  gh|about-python|/types/dict/items.py||

}
{ Removing keys from a dict

  A key/value pair can be removed from a dict with → development/languages/Python/built-in-functions/del#py-del-list[`del(dct[ix])`].

}
{ Misc

  Although `dict` provides → development/languages/Python/dunders/__getitem__[`__getitem__()`] and
  → development/languages/Python/dunders/__len__[`__len__()`], it is considered to be a *mapping* rather than a sequence.

}
sa:
  → development/languages/Python/types/dict/add[Adding key-value pairs to a dictionary]

  → development/languages/Python/objects/copy#py-copy-dict[Copying a dictionary] (rather than aliasing it).

  → development/languages/Python/types/dict/merge[Merge two dictionaries]

  Other → development/languages/Python/types[Python types]
