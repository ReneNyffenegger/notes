$ Python: list.sort()

The method `sort()` on a → development/languages/Python/types/list sorts its elements *in place* (that is, it does not return or evaluate to something):
gh|about-Python|/types/list/sort/simple.py||

Because `list.sort()` sorts a list in place, it cannot be used in in a in a → development/languages/Python/statements/for[`for e in L.sort(): …`] statement. Such a for loop is possible, however, with
`for e in → development/languages/Python/built-in-functions/sorted(L): …`.

{ Sorting a list based on a characteristic of its elements

  With the `key` parameter of `list.sort` and a → development/languages/Python/expressions/lambda[`lambda` expression], it is possible to sort the elements of a list based on an arbitrary characteristic of its element.

  The following example sorts the words in a list in order of the length of the words:
  gh|about-Python|/types/list/sort/expression.py||

}


sa:
  The → development/languages/Python/built-in-functions/sorted[built-in function `sorted`].
