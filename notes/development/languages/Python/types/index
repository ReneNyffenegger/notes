$ Python built-in types


→ development/languages/Python/types/dict

→ development/languages/Python/types/frozenset

→ development/languages/Python/types/int[`int`] stores an arbitrarily large (in Python 3, that is) *integral numerical value*.

→ development/languages/Python/types/list[`list`]

→ development/languages/Python/types/set

→ development/languages/Python/types/string

{ TODO

  { sequence

    A *sequence* is an → development/languages/Python/iterable with the methods `__getitem__()` (for accessing elements) and `__len__()`.
    
    Built-in sequences include
      • `bytes`
      • → development/languages/Python/types/list[`list`]
      • `str`
      • `tuple`

     A → development/languages/Python/types/dict[`dict`] also privides `__getitem__()` and `__len__()`, yet it is considered to be a *mapping*.


  }
  { collections.abc.Sequence

     The `collections.abc.Sequence` abstract base class is a *sequence* that also provides the following methods:
       • `count()`
       • `index()`
       • `__contains__()`
       • `__reversed__()`

     Objects with such an interface can be registered with `register()`.

  }
  { loader

     A *loader* is typically returned by a *finder* and is able to load a *module* through the `load_module()` method that a loader is required to implement.

  }
  { NoneType

   `NoneType` has one value: `None` which is typically used to represent the absence of any value (much like → development/databases/SQL/data-types/null[`null`] in → development/databases/SQL).

code {
>>> → development/languages/Python/built-in-functions/type(None)
<class 'NoneType'>
>>> None = 42
SyntaxError: cannot assign to None
code }


  }
  { Modules / packages

    A *module* objects have a namespace in which other objects are located.
 
    Modules are used to manage code units.

    Modules are created with → development/languages/Python/statements/import[`import`].

    A *package* is a module that contains other modules or (sub-)packages.

    A module with a `__path__` attribute is a package.

  }

}

sa:
  The built-in function → development/languages/Python/built-in-functions/type[`type(…)`]
