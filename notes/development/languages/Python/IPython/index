
{ IPython vs. Jupyter

  With release 4.0 of IPython started to focus on *interactive Python* while the following Python agnostic parts of then-IPython were moved to the Jupyter project:
    • Notebook format
    • message protocol
    • qtconsole
    • notebook web application
    • etc.

}
{ Rich Display #ipython-rich-display

  With *rich display*, it's possible to render a → development/languages/Python/objects[Python object] in a specific format (Image, HTML, markdown etc.) in IPython.

  IPython will render an object in the desired format if it exposes one of the following methods:
  table { llll
     ☰ ~REPL~ ☰ → development/Notebook-interface/Jupyter[Notebook] ☰ ~QT Console~
     `_repr_pretty_`☰ ✓ ☰ ✓ ☰ ✓ 
     `_repr_svg_`☰ ✗ ☰ ✓ ☰ ✓ 
     `_repr_png_`☰ ✗ ☰ ✓ ☰ ✓ 
     `_repr_jpeg_`☰ ✗ ☰ ✓ ☰ ✓ 
     `_repr_html_`☰ ✗ ☰ ✓ ☰ ✗ 
     `_repr_javascript_`☰ ✗ ☰ ✓ ☰ ✗ 
     `_repr_markdown_`☰ ✗ ☰ ✓ ☰ ✗ 
     `_repr_latex_`☰ ✗ ☰ ✓ ☰ ✗ 
     `_repr_mimebundle_`☰ ✗ ☰ ? ☰ ?
  table }

  The `_ipython_display_()` method allows to take control of the display with the own side effects.

  This concept extends the idea of → development/languages/Python/dunders/__repr__[`__repr__()`]

  See also the → development/languages/Python/libraries/pandas/DataFrame#pandas-df-repr[`_repr_` methods] of the → development/languages/Python/libraries/pandas/DataFrame[`pandas` dataframe] object.

}
