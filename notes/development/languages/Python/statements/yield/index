$ Python: yield statement

The `yield` statement is used to define a → development/languages/Python/generators[generator] function.

{ Return type of a def with a yield statement

  A function that is defined with → development/languages/Python/statements/def[`def`] and that contains
  a `yield` statement returns a → development/languages/Python/generators[generator] object.

  The following simple example defines two functions, one of which has a `yield` statement and the other doesn't.

  The → development/languages/Python/built-in-functions/type[`type`] of both functions is *function*. However,
  the type of returned object of the function without `yield` is *int* (the type of `42`) while the the type of
  the returned object of the function with a `yield` is *generator*.

  gh|about-python|/statements/yield/def-with-and-without-yield.py||

}

sa:
  → development/languages/Python/statements
