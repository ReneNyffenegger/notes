
{ Objects #python-object

  Every object has
    • an identity
    • a → development/languages/Python/types[type]
    • a value

  An object's identity can be queried with → development/languages/Python/functions/id[`id(obj)`].

  Identities of an object can be compared with → development/languages/Python/operators/is[`is`].


}
{ Packages and modules #python-packages-modules

  Analogy:
   • Packages correspond to directories. Seperator is `.` (rather than `/`).
   • Modules correspond to files within those directories.
  However, there is no need for packages and modules to actually exist as files or directories.

  All packages are also modules, but only modules with a `__path__` attribute are also a package.

  There are two types of packages:
    • regular packages (with `__init__.py`)
    • namespace packages (witout `__init__.py`)

  Code within one module can access code in another module by → development/languages/Python/statements/import[importing] it.

  See also → development/languages/Python/standard-library/sys#python-sys-modules[sys.modules].

}
{ UTF-8 Source code

  Apparently, the encoding of a file can be specified to be → development/Unicode/UTF-8[utf8] with a line reading
code {
# -*- coding: utf-8 -*-
code }

}

sa:
  → development/languages/Python/code-snippets

  → development/languages/Python/statements and
  → development/languages/Python/operators

  → development/languages/Python/standard-library

  → development/languages/Python/qualified-name

  The → development/languages/Python/types/string[string] and
  → development/languages/Python/types/dict[dict] types.

  → Linux/fhs/home/username/_pythonrc_py

  → development/languages
