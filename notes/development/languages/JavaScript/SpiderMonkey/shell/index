$ The SpiderMonkey JavaScript shell

A JavaScript shell is quite useful to quickly test or debug snippets of JavaScript code without a → development/web/browser[browser].

The shell is started with the `js` or `js24` command.

{ Running a script

  In order to run a sequence of → development/languages/JavaScript statements (a script), the shell can be invoked with the name of the script:
code {
$ js24 script.js
code }

  The content of `script.js` might just be something like this:
  gh|about-SpiderMonkey-shell|/script.js||

  Apparently, the `-f` option can be used to explicitly state the name of the script:
code {
$ js24 -f script.js
code }

}
{ Evaluating a string

  A string can be evaluated as JavaScript with the `-e` option:
code {
$ js24 -e 'print (6*7)'
code }

}
{ Executable scripts

  A script can be → Linux/shell/commands/chmod[`chmod`'ed] to contain the executable bit so that a script can be executed directly from the shell:
code {
$ ./executable-script.js
code }

  `executable-script.js` might look like this:

  gh|about-SpiderMonkey-shell|/executable-script.js||

  Note, Mozilla's → https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Introduction_to_the_JavaScript_shell[Introduction to the JavaScript shell] proposes to
  add a `-P` in the first line. I found that to be wrong, at least in my  environment.

}
{ Downloading the executable

  A → development/archive-files/zip[zipped] executable can be downloaded from the → https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central/[nightly builds directory] (filename `jsshell-….zip`)

  { Windows / PowerShell

    On Windows, it is possible to download the executable with → Windows/PowerShell:
code {
(→ Windows/PowerShell/command-inventory/noun/object/new → Microsoft/dot-net/namespaces-classes/System/Net/WebClient[Net.WebClient]).DownloadFile('https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central/jsshell-win64.zip', "$→ Windows/PowerShell/language/provider/env[env]:temp\jsshell.zip")

$destDir = "→ Windows/PowerShell/language/variable/automatic/home[$home]/bin/jsshell"
$null    =  mkdir $destDir

→ Windows/dirs/Windows/System32/tar_exe[c:\windows\system32\tar.exe] xf  $env:temp\jsshell.zip -C $destDir

& $destDir\js.exe -v
code }

  }

}

sa:

  → development/languages/JavaScript/SpiderMonkey
