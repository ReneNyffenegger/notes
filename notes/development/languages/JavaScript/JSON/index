$ JSON - JavaScript Object Notation
@ JSON

JSON has become popular because it is easy to serialize → development/Data[data] for
→ development/Data/exchange[data exchange]: JSON data is easy-to read by people and
machines.

{ Scalars

  JSON scalars are:
    • `"strings"`
    •  `42` (numbers)
    •  `true`, `false`
    •  `null`

}
{ Tokens

  The grammar of JSON has only six structural characters:
    • `{` and `}`
    • `[` and `]`
    • `:`
    • `,`

  Besides them, there are three other kinds of tokens:
    • strings (enclosed in `"`) is a sequence of → development/Unicode[Unicode] characters
    • numbers
    • literals (`true`, `false` or `null`)

}
{ Objects

  JSON objects are embedded in curly braces (`{ … }`).

  A JSON object consists of comma separated *key-value pairs*. The key is a string and is separated from the value by a colon (`:`).
  -
  These key value pairs are referred to as *members*.

code {
{
   "item": "Lemen",
   "price": {
         "val":      1.84,
         "currency: "CHF"
   }
}
code }

}
{ Arrays

  Arrays are embedded in square brackets: `[ … ]`.

  An array is an ordered, comma-separated list of JSON values.

code {
[ "foo",
   42,
   null,
   { "foo": "bar" }
]
code }


}

sa:

  → development/Data/exchange/formats

  The → development/languages/Python/standard-library/json[Python standard module json]

  → development/languages/Perl/modules[Perl module] → development/languages/Perl/modules/JSON

  → development/languages/JavaScript/JSON/LD

  → development/web/RFC → development/web/RFC#rfc-7159

  The → development/languages/JavaScript object → development/languages/JavaScript/objects/JSON[`JSON`].

  The SQL standard included the (optional) feature for JSON support in → misc/ISO/9075#sql-2016[SQL:2016].

  → development/languages/VBA/Useful-object-libraries/Microsoft-Script-Control#ms-script-control-parse-json[Parsing JSON] in → development/languages/VBA[Visual Basic for Applications] with the
  → development/languages/VBA/Useful-object-libraries/Microsoft-Script-Control object.

  → development/Unicode/BOM[BOMs] are illegal in JSON.

  The → Windows/PowerShell/command-inventory/noun/json[PowerShell command noun `json`]

  → https://github.com/JamesNK/Newtonsoft.Json[Json.NET] is a high-performance JSON framework for → Microsoft/dot-net.
