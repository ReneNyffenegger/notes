
{ TODO

    `call` vs `apply`

}

sa:

  → https://tc39.github.io/ecma262/[The latest drafts] of the ECMAScript® Language Specification.

  When writing code for the Web with JavaScript, there are a great many APIs available. → https://developer.mozilla.org/en-US/docs/Web/API[Web APIs] has a list of all(?) interfaces
  one might use to develop a program.

  → development/languages/JavaScript/code-snipptes[code snippets]

  → development/languages/JavaScript/helpers

  → development/languages/JavaScript/code-snippets/objects[Code snippets: objects]

  → development/languages/JavaScript/Object-Oriented

  → development/languages/JavaScript/inline-vs-external

  → development/languages/Java/classes/javax/script

  → development/languages/JScript/index

  → development/languages/JavaScript/SpiderMonkey is a JavaScript-Engine which is written in → development/languages/C-C-plus-plus[C/C++]. It is interesting because it has
  → development/languages/JavaScript/SpiderMonkey/shell[JavaScript shell].
  -
  → development/languages/JavaScript/Rhino is also an implemenation for JavaScript, it is written in → development/languages/Java[Java], however.

  → development/languages/JavaScript/JSON

  → development/web/CSS/javascript

  → design/graphic/svg/examples/javascript

  → development/languages

  → development/languages/JavaScript/jQuery

  → development/languages/VBA/Useful-object-libraries/Microsoft-Script-Control#ms-script-control-call-js[Calling a simple JavaScript function] from
  → development/languages/VBA[Visual Basic for Applications] with the → development/languages/VBA/Useful-object-libraries/Microsoft-Script-Control[MS Script Control] object.

