$ Inline vs external Javascript

→ development/languages/JavaScript code that is embedded with an → development/web/HTML document is referred to as *inline JavaScript*. On the other hand, the HTML document may refer to
a separate file that contains the JavaScript program, in which case it is referred to as *external JavaScript*.

Both, inline and external JavaScript is indicated with the → development/web/HTML/tags/script[`<script>`] tag:
  • `<script type='text/javascript'>` starts inline JavaScript
  • `<script type='text/javascript' src='https://server.xyz/path/to/file.js'>` references an external JavaScript file (or → development/web/URI-URL-URN-IRI-URC#url[URL], respectivey).

{ Demonstration of inline and external JavaScript

  Both, inline and external JavaScript resources require a → development/web/HTML/tags/script[`<script>`] element. The resource is found externally
  when the `<script>` tag has a `src` attribute.

  The following (functional) HTML and JavaScript snippets try to demonstrate this.

  { Inline Javascript

    gh|about-javascript|/inline_vs_external_js/use_inline_javascript.html||

  }
  { External Javascript #external-js

    gh|about-javascript|/inline_vs_external_js/use_external_javascript.html||

    Note: although the tag's content is empty, it cannot be closed with a »self closing script tag« (`<script…/>`).

    The content of `external.js` might be:
    gh|about-javascript|/inline_vs_external_js/external.js||

  }
}

sa:

  The → development/web/HTML/tags/script[HTML `<script>` tag]

  → development/languages/JavaScript

  → development/web/CSS/inline-vs-external
