$ Javascript: global object

The *global object* is created before control enters any *execution context*.

The *global object* has neither the `[[Construct]]` nor the `[[Call]]` internal method. Thus it cannot be used as a constructor with the `new` operator or be invoked as a function.
-
It has, however, the `[[Prototype]]` internal slot. This value is implementation-dependent.

→ development/languages/JavaScript/objects/global/escape[`escape(…)`]

→ development/languages/JavaScript/objects/global/function-properties/eval[`eval(…)`] dynamically evaluates a
→ development/languages/JavaScript/objects/String[string] as → development/languages/JavaScript expression or statement.

{ Value properties #js-global-value-properties

  → development/languages/JavaScript/objects/global/NaN[`NaN`],
  → development/languages/JavaScript/objects/global/Infinity[`Infinity`] and
  → development/languages/JavaScript/objects/global/undefined[`undefined`].

}

sa:

  → development/languages/JavaScript/code-snippets/objects/global/parseInt[`parseInt`] to create an integer from a → development/languages/JavaScript/code-snippets/objects/String[String].

  → development/languages/JavaScript/code-snipptes

  → development/languages/JavaScript/objects
