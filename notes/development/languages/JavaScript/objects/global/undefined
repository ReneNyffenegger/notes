$ JavaScript: undefined

→ development/languages/JavaScript/operators/typeof[`typeof(undefined)`] returns `"undefined"`.

By comparing a → development/languages/JavaScript/language/variable[variable] to `undefined` (`===` or `==` → development/languages/JavaScript/operators[operator]), it is possible to
check if a value was assigned to the variable. `var === undefined` returns `true` if so and `false` otherwise`.
-
Of course, it's possible to assign `undefined` to a variable in which case the variable becomes undefined again.
-
See also → development/languages/JavaScript/objects/global/value-properties/undefined/compare[Comparing `undefined` to other values].

Interestingly, `undefined+undefined` evaluates to → development/languages/JavaScript/objects/global/NaN[`NaN`].

gh|about-javascript|/objects/Global-Object/value-properties/undefined.html||

sa:


  → development/languages/JavaScript/objects/global#js-global-value-properties[Global object: value properties]
