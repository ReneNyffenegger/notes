$ Node.js

Node.js bundles the V8 → development/languages/JavaScript#js-engines[JavaScript Engine] (which is also used by → development/web/browser/Chrome) with some libraries for I/O and networking.

{ Installation #node-js-install

  → Linux/distributions/arch:
code {
→ Linux/shell/commands/sudo → Linux/distributions/arch/pacman -Sy nodejs
sudo pacman -Sy npm # ???
code }

  On → Windows with → Windows/Chocolatey, with one of the following (I am not really sure how they differ, but
  see also → https://stackoverflow.com/a/34830675/180275[this stackoverflow answer]).
code {
→ Windows/dirs/ProgramData/chocolatey/bin/choco_exe[choco] install -y nodejs
→ Windows/dirs/ProgramData/chocolatey/bin/choco_exe[choco] install -y nodejs-lts
→ Windows/dirs/ProgramData/chocolatey/bin/choco_exe[choco] install -y nodejs.install
code }

}

{ Hello World

  gh|about-node.js|/hello-world.js||

  The Hello World application can be started with
code {
$ node hello-world.js
code }

}
{ Using node.js as a shell

  node.js can be used as a shell by typing the executable name `node` without a script name:
code {
PS C:\Users\Rene> node
code }

  Exiting from the shell:
code {
> process.exit()
code }

}
{ Logging

  Some basic logging functionality is provided by the `logging` module.

  The `logging` module needs not be added with `require('logging')` (*2020-09-23*: this seems not to be the case anymore).

  gh|about-node.js|/api/console/log.js||

}
{ Modules / require()

  Types of modules
    • Built-in (core) modules (such as `fs`, `http`, …)
    • NPM modules: these are 3rd party modules, to be installed with `→ development/languages/JavaScript/npm install …`.
    • Local modules (identified by using path specifiers as `./`, `../` in their name and having on of the suffixes `.js`, `.json`, `.mjs`, `.cjs`, `.wasm` or `.node`).

  Modules are imported with the special purpuse function `require` (which is not part of the standard → development/languages/JavaScript API).
   

}
{ Accessing environment variables

  The values of → development/environment-variable[environment variables] can be accessed wia `process.env.ENVVAR`:

  gh|about-node.js|/api/process/env.js||

}
{ Temporary directory #node-js-tmp-dir

  The path of the temporary directory (usually → Linux/fhs/tmp on → Linux) is returned by `os.tmpdir()` or `os.tmpdir`:
  gh|about-node.js|/api/os/tmpdir.js||


}
