
{ Cargo

  Cargo is Rust's build system and package manager.

  { Creating a new project

code {
cargo new foo-app --bin
code }

  `--bin`: a binary project.

  }
  { Building a project

    A project might be built with

code {
cargo build
code }

  } 

}
{ Variables

  By default, variables are immutable.

code {
let     answer = 42;  // always 42
let mut maybe  =  9;  // can be changed (is mutable)
code }

}
{ *.toml files

  toml stands for *Tom's obvious minimal language*.

  toml files are similar to *.ini files.

}
{ Compiling source code from STDIN

code {
$ echo 'fn main() {println!("xyz")}' | rustc - -o a.out
code }

}
{ Functions with camelCase

  For the following program, the compiler warns *function `camelCase` should have a snake case name*:
code {
fn camelCase() { println!("warning: function `camelCase` should have a snake case name") }
fn main() { camelCase() }
code }

  The following program compiles without warning:
code {
fn snake_case() { println!("function with snake case") }
fn main() { snake_case() }
code }

}
{ Comments

 «Normal» comments:
code {
// xyz

/*
   bla
   bla
   bla
*/
code }

  «Documenting» comments:
code {
///  Commenting the following item:

//!  Commenting the enclosing item.
code }

}
{ Trying to break Rust

code {
$ echo 'fn main() {break rust}' | rustc - -o a.out
…
error: internal compiler error: It looks like you're trying to break rust; would you like some ICE?
…
code }


}
{ TODO

  Apparently, → https://twitter.com/markrussinovich/status/1656416376125538304[Windows engineers started to program in Rust], too.

}
sa:

  Other → development/languages[programming languages] etc.
