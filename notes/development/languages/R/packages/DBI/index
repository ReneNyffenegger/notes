$ R package: DBI

The `DBI` package defines a generic → development/databases[database] interface for R.


{ DBI Backends #r-dbi-backend

  The actual database dependent implementation is implemented by so called *DBI backends*, some of which start with `R`
  (for example → development/languages/R/packages/RMySQL[`RMySQL`] or
  → development/languages/R/packages/ROracle[`ROracle`]).

  A backend needs to define three classes which are subclasses of
    • `DBIDriver`
    • `DBIConnection`
    • `DBIResult`
 
}
{ TODO

  `dbExecute` can be used for → development/databases/SQL/DML[DML statements], `create table`, `drop table` etc.
  -
  For a reason I don't really understand, and unlike other functions such as `dbSendQuery(…)`, `dbExecute` needs to be prefixed with `DBI::`:
code {
DBI::dbExecute(con, 'create table t (v varchar(20))');
code }

}

sa:

  Testing the → development/languages/R/packages/DBI/dbConnect/encoding[`encoding` parameter of `dbConnect`]

  → development/languages/R/packages
