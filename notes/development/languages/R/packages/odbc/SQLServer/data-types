$ R DBI, ODBC and SQL Server data types

This is an attempt to figure out how → development/databases/SQL-Server/T-SQL/data-types[SQL Server data types] behave in a → development/languages/R/packages/DBI[R DBI] environment using
→ development/languages/R/packages/odbc[the `odbc` package].

{ Connect to SQL Server

  In order to conduct the test, we need to connect to an → development/databases/SQL-Server[SQL Server] database:

  gh|about-R|/packages/odbc/SQLServer/data-types/connect.R||

}
{ Create a table

  We then create a table with hopefully some interesting → development/databases/SQL-Server/T-SQL/data-types[data types]:

  gh|about-R|/packages/odbc/SQLServer/data-types/create-table.R||

}
{ Insert a record

  The table is filled with one record:

  gh|about-R|/packages/odbc/SQLServer/data-types/insert-record.R||

}
{ Create a result set

  gh|about-R|/packages/odbc/SQLServer/data-types/create-result-set.R||

} 
{ Showing column info

  Although `dbColumnInfo` is supposed to return data types (column `type`) as character, they are returned as numbers.

  Also, the data types → development/databases/SQL-Server/T-SQL/data-types/nvarchar[nvarchar],
  → development/databases/SQL-Server/T-SQL/data-types/date[date], 
  → development/databases/SQL-Server/T-SQL/data-types/datetime2[datetime2] and
  time are not distinguished, their value is -9.

  gh|about-R|/packages/odbc/SQLServer/data-types/column-info.R||


}
{ Show the returned record

  We now iterate over the result set (the one record) and use → development/languages/R/functions/str[`str`] to print the data types and values of the individual columns:

  gh|about-R|/packages/odbc/SQLServer/data-types/iterate.R||

}
{ Cleaning up

  gh|about-R|/packages/odbc/SQLServer/data-types/clean-up.R||

}

