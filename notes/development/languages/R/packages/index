$ R packages

{ Finding relevant packages

  There are over 9000 R packages. In order to find the relevant packages, try
    • Task view pages: → https://cran.r-project.org/web/views/
    • → https://cran.r-project.org/web/packages/available_packages_by_name.html[Alphabetical list of packages]
    • → https://cran.r-project.org/web/packages/available_packages_by_date.html[Newest packages]
    • → http://rseek.org
    • → http://crantastic.org/
    • → https://cran.r-project.org/web/packages/sos/vignettes/sos.pdf[The sos package]

}
{ Loading packages

  Packages are loaded into memory with
  → development/languages/R/functions/library[`library`] or
  → development/languages/R/functions/require[`require`].

  Loaded packages can be determined with
code {
(.packages())
code }

  Packages are unloaded with → development/languages/R/functions/detach[detach].

}
{ Some packages

  → development/languages/R/packages/broman[broman], the package of *Karl Broman* contains some general utilities.

  → development/languages/R/packages/DBI[DBI] defines a generic → development/databases[database] interface for R.

  → development/languages/R/packages/devtools[devtools] to make package development easier.

  → development/languages/R/packages/dplyr[dplyr]

  → development/languages/R/packages/DT[DT] is a wrapper around the → development/languages/JavaScript library *DataTable*.

  → development/languages/R/packages/foreach[foreach]

  → development/languages/R/packages/geonames[geonames]

  *ggformula* provides a formula interface to → development/languages/R/packages/ggplot2[ggplot2] graphics.

  → development/languages/R/packages/ggalluvial[ggalluvial] might be used to create → development/Data/visualization/Alluvial-diagram[alluvial diagrams].

  → development/languages/R/packages/ggmap[ggmap]: visualize maps from different sources (such as Google Maps and Stamen Maps).

  → development/languages/R/packages/ggplot2[ggplot2]

  → development/languages/R/packages/ggswissmaps[ggswissmaps] offers a few Swiss maps.

  → development/languages/R/packages/googleVis[googleVis]

  → development/languages/R/packages/hash[hash] allows to work with *associative arrays* (aka dictionaries or hashes).

  → development/languages/R/packages/Hmisc[Hmisc]

  → development/languages/R/packages/knitr[knitr] promises to facilitate *dynamic report generation*.

  → development/languages/R/packages/leaflet[lubridate] makes it easier to work with *dates* and *time*.

  → development/languages/R/packages/lobstr[lobstr]: a set of tools for inspecting and undersanding → development/languages/R/data-structures[R data structures].

  → development/languages/R/packages/lubridate[lubridate] makes it easier to work with *dates* and *time*.

  → development/languages/R/packages/maps[maps] contains outlines of continents, countries, states and counties.

  → development/languages/R/packages/nominatim[nominatim] is an interface for → development/OpenStreetMap/Nominatim[OpenStreetMap's nominatim service]

  → development/languages/R/packages/nycflights13[nycflights13]

  → development/languages/R/packages/oce[oce]

  → development/languages/R/packages/OpenStreetMap[OpenStreetMap]

  → development/languages/R/packages/osmdata[osmdata]

  → development/languages/R/packages/plotly[plotly]

  → development/languages/R/packages/purrr[purrr]: functional programming with R.

  → development/languages/R/packages/raster[raster]

  → development/languages/R/packages/RColorBrewer[RColorBrewer]: to create colorful graphs with pre-made → development/languages/R/graphics/coloring/palettes[palettes].

  → development/languages/R/packages/rgdal[rgdal]: The interface to → development/libraries/GDAL[GDAL]

  → development/languages/R/packages/rlang[rlang] provides tools to work with core language features of → development/languages/R and the → development/languages/R/packages/tidyverse[tidyverse].

  → development/languages/R/packages/RODBC[RODBC]

  → development/languages/R/packages/RODBCext[RODBCext]

  → development/languages/R/packages/RMySQL[RMySQL]

  → development/languages/R/packages/ROracle[ROracle]

  → development/languages/R/packages/rsconnect[rsconnect] apparently allows to deploy and manage *Shiny* applications directly from an R console.

  → development/languages/R/packages/RSQLite[RSQLite]

  → development/languages/R/packages/RSQLS[RSQLS]

  → development/languages/R/packages/rworldmap[rworldmap]

  → development/languages/R/packages/shiny[shiny] allows to build interactive web apps with → development/languages/R[R].

  → development/languages/R/packages/sp[sp]

  → development/languages/R/packages/SPARQL[SPARQL]

  → development/languages/R/packages/sqldf[sqldf] provides an → development/databases/SQL[SQL] interface for → development/languages/R/data-structures/data-frame[data frames].

  → development/languages/R/packages/swissdd[swissdd] aims at enabling fully repeatable and reproducable analyses of Swiss vote results.

  → development/languages/R/packages/tidyr[tidyr]

  → development/languages/R/packages/tidyverse[tidyverse]

  → development/languages/R/packages/tmaptools[tmaptools]

  → development/languages/R/packages/xlsx[xlsx] to read and write → Microsoft/Office/Excel[Excel] files.

}

sa:
  → development/languages/R/search-path[search path]

  → development/languages/R/functions/search[`search()`] gives a list of attached packages (and → development/languages/R/object[objects], such as
  → development/languages/R/data-structures/data-frame[data frames]).

  → development/languages/R/packages/vignettes

  → development/languages/R/functions/suppressPackageStartupMessages[`suppressPackageStartupMessages()`]

links:

  { Writing packages

    → https://r-pkgs.org/[R Packages] by *Hadley Wickham* and *Jenny Bryan*.

    → https://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/[Writing an R package from scratch] is a tutorial about creating a bare-minimum R package.

    → https://masalmon.eu/2017/12/11/goodrpackages/[How to develop good R packages (for open science)]

    → http://tinyheero.github.io/jekyll/update/2015/07/26/making-your-first-R-package.html[Making Your First R Package] discusses
    the typical workflow that Fong Chun Chan uses to create R packages.

    → https://r-mageddon.netlify.com/post/writing-an-r-package-from-scratch/[Writing an R package from scratch]

    Karl Broman (the author of the → development/languages/R/packages/broman[broman] pacakge): → https://kbroman.org/pkg_primer/[R package primer], a minimal tutorial.

  }
