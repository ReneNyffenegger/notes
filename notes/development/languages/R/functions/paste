$ R functions: paste / paste0
@ paste

`paste` concatenates strings.
gh|about-r|/functions/paste/default.R||

{ sep

  When using `paste` without the `sep` argument, a space is put between the concatenated strings.

  With the `sep` argument, another string can be specified that is put between the joined strings.
  gh|about-r|/functions/paste/sep.R||

}
{ paste vs paste0

  While `paste` uses a space to join strings, `paste0` defaults `sep` to the empty string.
  -
  That is `paste0(…, collapse) is the equivalent of paste(,…, sep = "", collapse)`.

  gh|about-r|/functions/paste/0.R||


}
{ Vectors

  When the first argument to `paste` is a → development/languages/R/data-structures/vector[vector], `paste` concatenates
  corresponding elements of all passed vectors.
  -
  Thus, another vector is returned:
  gh|about-r|/functions/paste/vector.R||

}
{ Recyclation rule

  If the number of the elements in the passed vectors differs, `paste` uses the *recyclation rule* to concatenate the respective elements:
  
  First case: the number of elements in all vectors are equal (=10):
  gh|about-r|/functions/paste/recyclation-rule-2.R||

  Second case: the number of elements in all vectors differ:
  gh|about-r|/functions/paste/recyclation-rule.R||


}
{ Using collapse

  When using the `collapse` argument, the returned vector us pasted a second time and the value of `collapse` is used to merge the elements of
  the elements in the vector. The behavior is then similar to → development/languages/Perl/functions/join[Perl's `join` function].

  gh|about-r|/functions/paste/collapse.R||

}

sa:

  → development/languages/R/functions/_string[String related R functions]

  → development/languages/R/functions/strsplit[`strsplit`] splits a string into a → development/languages/R/data-structures/list.

  → development/languages/R/functions

  The shell command `→ Linux/shell/commands/paste`

