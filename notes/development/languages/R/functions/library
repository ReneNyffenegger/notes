$ R function: library

Load (and attach) an add-on → development/languages/R/packages[package].


{ List of installed packages

  Called without an argument returns a list of installed (not necessarily loaded) → development/languages/R/libraries[packages]. Compare with
  → development/languages/R/functions/installed_packages[installed.packages].

}
{ List of installed datasets

  `library(help="datasets")` gets a list of → development/languages/R/datasets[datasets] that are installed with the current R installation.

}
{ Non standard evalution #r-library-nse

 `library(pkg_name)` uses *non standard evaluation* (NSE) when evaluating the name of the package to to be loaded.
  This is why `pkg_name` needs not be quoted with apostrophes or single quotes.

  While NSE safes two characters, it is a constant source of confusion when a package is attempted to be loaded whose name is stored in a variable. The
  following snippet causes the error *Error in library(pkg) : there is no package called ‘pkg’. Execution halted*
  gh|about-R|/functions/library/NSE/does-not-work.R||

  It is possible to load a package from a variable with a combination of
  → development/languages/R/functions/eval[`eval`] and
  → development/languages/R/functions/bquote[`bquote`]:
  gh|about-R|/functions/library/NSE/bquote.R||

  Another possibility is to use → development/languages/R/functions/do_call[`do.call`] and
  → development/languages/R/functions/as/name[`as.name`].
  
  gh|about-R|/functions/library/NSE/as.name.R||

}

sa:

  → development/languages/R/functions/require[`require()`],
  → development/languages/R/functions/detach[`detach()`]

  → development/languages/R/functions/suppressPackageStartupMessages[`suppressPackageStartupMessages()`]

  → development/languages/R/functions
