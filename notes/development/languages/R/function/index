$ R: function

A function has three components:
  • body (See → development/languages/R/functions/body[`body()`])
  • → development/languages/R/function/arguments[arguments] (See → development/languages/R/functions/formals[`formals()`])
  • → development/languages/R/functions/environment[The R function `environment(…)`] (which make it possible to create *closures*).

A function is an → development/languages/R/object[object]. This makes it possible to pass a function as arguments to other functions
(such as → development/languages/R/functions/lapply[`lapply`] etc.).

→ development/languages/R[R] allows to define a function within a function.

{ Evaluation environment

  When a function is called, an environment (the *evaluation environment*) is created in which the body of the function is evaluated.

}
{ Returning values #r-function-return

  R does not have a `return` → development/languages/R/statements[statement].

  It has, however, a `return` function(?).

  Thus, in order to use `return`, paranthesis are needed around the returned value.


}

sa:
  → development/languages/R/functions/on_exit[`on.exit(…)`] allows to register a function to be called when a function exits.
