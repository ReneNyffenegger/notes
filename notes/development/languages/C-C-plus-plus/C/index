$ C

{ main

  gh|about-c|/main.c||

}
{ gnu C option summary

  → https://gcc.gnu.org/onlinedocs/gcc-6-1.0/gcc/Option-Summary.html

}

{ Statements

  Two types of statements:
    • Simple statements (which are terminated by a semocolon)
    • Compound statements.

  Simple statements:
    • Assignment (`val = 42;`)
    • Function call (`foo("bar");`)
    • Assignment with function call (`val = foo();`)
    • `return`
    • `break`
    • `continue`
    • `goto`

  Compound statements:
    • conditionals (→ development/languages/C-C-plus-plus/C/language/statements/compound/if[`if`], `switch`)
    • loops (`while`, `do … while`, `for`)
    

}

{ TODO

  { --print-file-name

code {
gcc --print-file-name=include
gcc --print-file-name=include/stddef.h

gcc --print-file-name=crtbegin.o
gcc --print-file-name=crtend.o
code }

  }
  { Hosted vs freestanding

  *freestanding* is just the language (without libraries etc.). A *hosted* environment comes with the → development/languages/C-C-plus-plus/C/libc[the standard library].

  When compiling for a hosted environment, the macro `__STDC_HOSTED__` is defined.

  }

}

sa:
  → development/languages/C-C-plus-plus/C/_Generic

  → development/languages/C-C-plus-plus/C/language/datatypes

  → development/languages/C-C-plus-plus

  → development/languages/C-C-plus-plus/C/standards

  → development/languages/C-C-plus-plus/C/memory/allocation[Memory allocation]
