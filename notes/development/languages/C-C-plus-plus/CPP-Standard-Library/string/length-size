$ std::string length() / size()

The `std::string` methods `length()` and `size()` return a `size_t` that corresponds to the number of bytes that is represented by the string.

In the following example, the size of the string `"foo"` is reported as 3.
-
The size of `"René"` is 5 because the source file is encoded in → development/Unicode/UTF-8 and the *é* requires two bytes.
-
The size of `"abc" "\x00" "def"` is reported as 7 although it contains a zero byte. This is because in a `std::string`, a zero byte has no special meaning, unlike in a (`char*`) C-string. (Of course,
when `c_str()` is used, the zero byte *has* a special meaning because `c_str()` returns a `char*`).


gh|about-cpp-standard-library|/string/size-length.cpp||
