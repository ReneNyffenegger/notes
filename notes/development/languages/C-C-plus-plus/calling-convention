

{ stdcall #stdcall

  Function arguments are passed (pushed) from right to left. Stack is cleaned up by callee.

  Return value is passed through the `eax` register (→ development/languages/assembler/x86[x86 assembler]).

  Stdcall is the default calling convention for the 32-bit → Windows/development/WinAPI.

}
{ cdecl

  Short for → development/languages/C-C-plus-plus/C[c] declaration.
  
  Caller pushes arguments on stack and cleans up stack.

  cdecl is required for variadic function arguments

}
{ fastcall

  Some values passed via registers

  The 64-bit WinAPI is similar to the 32-bit WinAPI fastcall. The first four parameters are passed in `rcx`, `rdx`, `r8` and `r9` (from right to left). Additional parameters are stored on the
  stack.

}
{ pascal

  The pascal calling convention differs from stdcall in that the function arguments are pushed left to right.

}

