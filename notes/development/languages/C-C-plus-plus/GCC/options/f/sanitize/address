$ gcc -fsanitize=address

{ Detecting a stack overflow

  The following program uses the → development/languages/C-C-plus-plus/preprocessor/macros[preprocessor macro] `ALLOCATION_SIZE` to specify at compile time how many bytes will be written in the function `write_buffer` to a buffer allocated on the stack in the function `func`:
  gh|about-gcc|/options/f/sanitize/address/prog.c||

  Because the size of the buffer is limited to 20 bytes, the program exhibits a *stack overflow* if `ALLOCATION_SIZE` is greater than 20.

}
{ Makefile

  This `Makefile` creates two programs, `prog-ok` where `ALLOCATION_SIZE` is set to 20 and `prog-stack-overflow` where `ALLOCATION_SIZE` is set to 21, and runs them.
  gh|about-gcc|/options/f/sanitize/address/Makefile||

  Because `-fsanitize=address` is set, it is possible to determine where the stack overflow took place.
}

sa:
  → development/languages/C-C-plus-plus/GCC/options[GCC options] such as → development/languages/C-C-plus-plus/GCC/options/f[`-f …`].
