$ Some interesting GCC command line options
@ GCC options

The following is a list of some options → development/languages/C-C-plus-plus/GCC[gcc] command line options that I came across and that I found noteworthy.

table { ll

  `-ansi` ☰ Equivalent to → development/languages/C-C-plus-plus/GCC/options/std[`-std=c89`].
  → development/languages/C-C-plus-plus/GCC/options/c[`-c`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/C_[`-C`] and `-CC` ☰ instructs the → development/languages/C-C-plus-plus/preprocessor[preprocessor] to keep comments.
  → development/languages/C-C-plus-plus/GCC/options/d[`-d`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/dM[`-dM`] ☰  generates a list of `#define` directives, including → development/languages/C-C-plus-plus/preprocessor/macros/predefined[predefined macros].
  → development/languages/C-C-plus-plus/GCC/options/D_[`-D`] ☰  defines the value of a → development/languages/C-C-plus-plus/preprocessor/macros[macro].
  → development/languages/C-C-plus-plus/GCC/options/dumpmachine[`-dumpmachine`] ☰  prints the → development/misc/target-triplet.
  → development/languages/C-C-plus-plus/GCC/options/dumpspec[`-dumpspec`] ☰ 
 `→ development/languages/C-C-plus-plus/GCC/options/dump/version` ☰ Prints the compiler's version number.
  → development/languages/C-C-plus-plus/GCC/options/E[`-E`] ☰  Only → development/languages/C-C-plus-plus/preprocessor[preprocess] file.
  → development/languages/C-C-plus-plus/GCC/options/f[`-f`] ☰  to set many boolean like options.
  `→ development/languages/C-C-plus-plus/GCC/options/g` ☰ Include debugging information.
  `-H` ☰ Print the names of each header file that is processed. Each `#include` indents one level, finishing a file dedents one level.
  → development/languages/C-C-plus-plus/GCC/options/help[`--help`] ☰
  `-include file` ☰ Pretend the source file started with `#include "file"`
  → development/languages/C-C-plus-plus/GCC/options/m_lowercase[`-m`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/M[`-M`] ☰ show dependencies of a compilation unit (including system header files).
  → development/languages/C-C-plus-plus/GCC/options/MM[`-MM`] ☰ show dependencies of a compilation unit (without system header files).
  → development/languages/C-C-plus-plus/GCC/options/masm[`-masm`] ☰  Select the (dis-)assembly dialect.
  → development/languages/C-C-plus-plus/GCC/options/no/defaultlibs[`-nodefaultlibs`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/no/startfiles[`-nostartfiles`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/no/stdlib[`-nostdlib`] ☰ Pass only files to the linker that are explicitly specified.
  → development/languages/C-C-plus-plus/GCC/options/O_uppercase[`-O`] ☰ Specify → development/languages/C-C-plus-plus/GCC/optimization[optimization].
  → development/languages/C-C-plus-plus/GCC/options/P_uppercase[`-P`] ☰ Prevent the preprocessor from including *line markers* in its output.
  → development/languages/C-C-plus-plus/GCC/options/param[`--param name=value`] ☰
  → development/languages/C-C-plus-plus/GCC/options/pedantic[`-pedantic`] and `-pedantic-errors` ☰  Compare with `-Werror=pedantic`
  `-pipe` ☰ Output of one stage is passed to the next stage via pipe rather than temporary file. Can improve performance but uses more memory.
  → development/languages/C-C-plus-plus/GCC/options/print/libgcc-file-name[`--print-libgcc-file-name`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/print/prog-name[`-print-prog-name`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/print/search-dirs[`-print-search-dirs`] ☰  reveal the directories that gcc searches for programs and libraries.
  → development/languages/C-C-plus-plus/GCC/options/Q[`-Q`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/s[`-s`] ☰  remove all symbol table and relocation information from the executable.
  → development/languages/C-C-plus-plus/GCC/options/save-temps[`-save-temps`] ☰  Don't delete intermediate outputs (`*.s`, `*.i`, `*.o`).
  → development/languages/C-C-plus-plus/GCC/options/S_uppercase[`-S`] ☰  create assembler code (`*.s`)
  → development/languages/C-C-plus-plus/GCC/options/shared[`-shared`] ☰  Instruct the → development/languages/C-C-plus-plus/GCC/linker to create a *shared object*.
  → development/languages/C-C-plus-plus/GCC/options/std[`-std`] ☰ Choose the → development/languages/C-C-plus-plus/C/standards[standard], for example `-std=c99` or `-std=gnu89`.
  → development/languages/C-C-plus-plus/GCC/options/v[`-v`] ☰ 
  → development/languages/C-C-plus-plus/GCC/options/version[`--version`] ☰ Prints the version of the compiler
  → development/languages/C-C-plus-plus/GCC/options/W[`-W`] ☰  Enable warning messages
  `-Wa,option-1[,option-2…]` ☰ Pass options to the → development/languages/C-C-plus-plus/GCC/as[assembler].
  → development/languages/C-C-plus-plus/GCC/options/Wl[`-Wl,linker-option`] ☰ Pass options to the → development/languages/C-C-plus-plus/GCC/linker[linker].
  → development/languages/C-C-plus-plus/GCC/options/Wp[`-Wp,preprocessor-option`] ☰ Pass options to the → development/languages/C-C-plus-plus/preprocessor[preprocessor].
  → development/languages/C-C-plus-plus/GCC/options/x[`-x`] ☰  Specify language of input file
  → development/languages/C-C-plus-plus/GCC/options/at[`@option-file `] ☰ 

table }

{ TODO

  *Target specific* options can be queried with `gcc --target-help`.

}

sa:
  Options specifically for → development/languages/C-C-plus-plus/GCC/options/Cygwin-MinGW[Cygwin and MinGW].

links:
  → https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html[GCC manual: option summary], → https://gcc.gnu.org/onlinedocs/gcc/Option-Index.html[Option index]
