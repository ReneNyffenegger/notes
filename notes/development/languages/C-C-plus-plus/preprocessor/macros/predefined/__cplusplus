$ C++ preprocessor macro __cplusplus
@ __cplusplus

The `__cplusplus` → development/languages/C-C-plus-plus/preprocessor/macros[preprocessor macro] is defined if the compilation unit is compiled with a → development/languages/C-C-plus-plus/CPP compiler.
Its value corresponds to the C++ standard that the compiler uses to compile a compilation unit.

In → Windows/PowerShell, its value can quickly be printed like so:
code {
write-output '' | g++ -dM -E -x c++  - | select-string  __cplusplus      # or
ech          '' | g++ -dM -E -x c++  - | findstr        __cplusplus      # or
code }
In other → Linux/shell[shells] with
code {
g++ -dM -E -x c++  /dev/null | grep -F __cplusplus
code }

{ main.cpp

  gh|about-cpp|/preprocessor/macros/predefined/__cplusplus/main.cpp||

}

{ Makefile

  gh|about-cpp|/preprocessor/macros/predefined/__cplusplus/Makefile||

}
{ Output

code {
./cpp98: 199711
./gcc98: 199711
./cpp11: 201103
./gnu11: 201103
./cpp14: 201402
./gnu14: 201402
./cpp1z: 201500
./cpp17: 201500
code }

}
{ Shell / g++

  A similar result can be printed from a Linux shell:
  gh|about-preprocessor|/macros/predefined/__cplusplus-g++||

  This script prints:
code {
cppstd = c++98   : 199711L
cppstd = gnu++98 : 199711L
cppstd = c++03   : 199711L
cppstd = gnu++03 : 199711L
cppstd = c++11   : 201103L
cppstd = gnu++11 : 201103L
cppstd = c++14   : 201402L
cppstd = gnu++14 : 201402L
cppstd = c++17   : 201703L
cppstd = gnu++17 : 201703L
cppstd = c++20   : 201709L
cppstd = gnu++20 : 201709L
cppstd = c++2a   : 201709L
cppstd = gnu++2a : 201709L
code }

}

sa:

  → development/languages/C-C-plus-plus/preprocessor/macros

  When invoking g++, the standard can be chosen with the compiler option → development/languages/C-C-plus-plus/GCC/options/std[`-std`].
