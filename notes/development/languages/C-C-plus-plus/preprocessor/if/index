$ Preprocessor: #if

{ ifdef … elif defined… endif

  The following simple example program probes the → development/languages/C-C-plus-plus/preprocessor/macros/predefined/environment[possibly predefined macros] `__GNUC__` and `_MSC_VER` to determine
  if the program was compiled with → development/languages/C-C-plus-plus/GCC[gcc] or the → Windows/development/Visual-Studio[Visual Studio] compiler.

  gh|about-preprocessor|/if/ifdef-elif-defined-else.c||

}
{ Comparing values

  The `#if` directive allows to compare integer and character types, but not string types.

  An undefined macro is considered to be `0`, thus it is smaller than 1 or 2000, but neither smaller or greater than 0.

  A «string» is neither smaller nor larger than another string. Conversely, *any* two strings are considered equal.

  The following program prints
code {
! 9 > 1111
  9 < 1111
! 'f' > 'y'
  'f' < 'y'
! 'f' == 'y'
  'f' == 'f'
! foo > bar
! foo < bar
  foo == bar
! AN_UNDEFINED_MACRO > 2000
  AN_UNDEFINED_MACRO < 2000
  AN_UNDEFINED_MACRO == 0
! AN_UNDEFINED_MACRO > 0
! AN_UNDEFINED_MACRO < 0
! AN_UNDEFINED_MACRO > 1
  AN_UNDEFINED_MACRO < 1
code }

  gh|about-preprocessor|/if/cmp.c||

}
sa:
  → development/languages/C-C-plus-plus/preprocessor
