@ printf

→ development/languages/Perl/functions/printf[Perl]

→ development/languages/C-C-plus-plus/C/libc/functions/printf[`printf` family] in the → development/languages/C-C-plus-plus/C/libc[standard c library].

In → development/languages/C-C-plus-plus[C++], → development/languages/C-C-plus-plus/CPP-Standard-Library/sstream/ostringstream[`ostringstream`] might be used as replacement for `sprintf`.

→ development/languages/R/functions/sprintf[`sprintf`] in → development/languages/R.

→ development/languages/Python[Python's] → development/languages/Python/types/string/format[`format`] method for → development/languages/Python/types/string[strings].

The → Windows/development/WinAPI equivalent for `sprintf` is wsprintf.

In the → development/web/browser/object-model[browser object model's] → development/web/browser/object-model/console[`console`] object, there is
→ development/web/browser/object-model/console/printf[`%s`, `%d` and `%f` in `console.log()`].

→ development/languages/Java[Java's] → development/languages/Java/classes/java/lang/System/out/printf[`System.out.printf()`]

In → Windows/PowerShell, the printf equivalent seems to be the → Windows/PowerShell/language/operator/f[`-f`] → Windows/PowerShell/language/operator[operator] (which is a short cut for the `String.Format` function.

{ Format specification

  In most languages, the printf format specification has the following elements `%[-][#][0][width][.precision]type`.

  The `%` and the *type* is mandatatory.
  -
  The `%` specifies the start of a format specification.
  -
  The *type* (which is one or more characters) specifies the type of the variable, see → development/languages/C-C-plus-plus/C/libc/functions/printf#printf-format-characters[formatting characters].

}
{ WinAPI

  The → Windows/development/WinAPI[WinAPI] versions of `printf` seem to be `wsprintf` and `wvsprintf`, both exported in
  → Windows/dirs/Windows/System32/user32_dll[`user32.dll`].

  They don't handle floating point.

}
sa:

  The → Windows/development/Debugging/tools command → Windows/development/Debugging/tools/commands/dot/printf[`.printf`]

  → development/misc/strftime[`strftime`] is similar to `printf`, however it is designed for processing date and time components.

  C: → development/languages/C-C-plus-plus/C/libc/stdarg_h#libc-stdarg-h-vsprintf[A printf like function] that prepends the written text with a timestamp.
