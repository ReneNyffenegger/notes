$ x86/x64 - Stackframe, base pointer

Within an established stack frame, the `ebp` register allows to access passed parameters (especially on the x86) and local variables with fixed offsets relative to the `ebp`.

{ x86

  gh|about-assembler-x86-x64|/stackframe/base-pointer/x86.c||

  { Compile

    With → development/languages/C-C-plus-plus/GCC[gcc]:
code {
gcc -c -O0 prog.c
gcc        prog.o

# objdump -d -S prog.o
code }

    With → Windows/development/Visual-Studio[Visual Studio's `cl`]:
code {
cl /nologo /c prog.c
cl /nologo    prog.obj
code }

  }
  { Output

code {
.\a.exe  
Address of func         = 4199760
EBP -4: Local 2 (gcc)   = 102
EBP -3: Local 1 (gcc)   = 101
EBP  0: ?               = 2686664
EBP  1: Return address  = 4200043
EBP  2: Parameter 1     = 1
EBP  3: Parameter 2     = hello world
EBP  4: Parameter 3     = 3
EAX   : Return value    = 42

prog.exe
Address of func         = 19730432
EBP -2: Local 2 (cl )   = 102
EBP -1: Local 1 (cl )   = 101
EBP  0: ?               = 3931604
EBP  1: Return address  = 19730659
EBP  2: Parameter 1     = 1
EBP  3: Parameter 2     = hello world
EBP  4: Parameter 3     = 3
EAX   : Return value    = 42
code }
    

  }

}
{ x64

  gh|about-assembler-x86-x64|/stackframe/base-pointer/x64.c||

}

sa:
  → development/languages/assembler/x86
