$ Instruction pointer

The instruction pointer points to the *next instruction* to be executed by the CPU. Technically, it contains the *offset* in the current code segment*.

Sometimes, the instruction pointer is also referred to as *program counter*.

The value of the instruction pointer can be changed with the → development/languages/assembler/x86/instructions/call[`call`], → development/languages/assembler/x86/instructions/ret[`ret`],
→ development/languages/assembler/x86/instructions/jmp[`jmp`], `Jcc` instructions.



In x86, the `eip` cannot be accessed »directly« with assembly, however, the `rip` (x64) can.



sa:

  → development/languages/assembler/x86/instructions/call[`call`]

  → development/languages/assembler/x86, → development/languages/assembler/x86/registers
