$ Enterprise Architecture
@ enterprise architecture

Gartner:
" Enteprise Architecture is the *process* of translating *business vision and strategy* into effective *enterprise change* by creating, communicting
  and improving the key principles and models that describe the enterprise's *future state* and enable its evolution.
"

IEEE 147.1:
"
  Architecture is the fundamental organization of a system embodied in its
  components, their relationships to each other, and to the environment, and
  the principles guiding its design and evolution 
"

→ development/IT/TOGAF defines architecture as
"
  The structure of components, their inter-relationships, and the principles and guidelines governing their design and evolution over time.
"

{ Reasons to have an architecture

  A well-designed architecture promises to
    • reduce complexity
    • same patterns, tools etc. can be shared accross an organization
    • seamless integration, interoperability and harmonization of (even heterogeneous, multi-vendor) systems, applications and processes
    • common addressing of enterprise-wide concerns such as security
    • make decisions easier

} 
{ Domains

  Architecture domains include
  table { ll
    Business Architecture ☰ Overall strategy, governance, organization, business processes (→ development/Software#business-software[Business applications]: CRM, → development/Enterprise/Architecture/CIM, → development/Enterprise/ERP …)
    Data Architecture ☰ Master data management, → development/Data/warehousing/index[data warehouses], → development/Data/mart/index[data mart], → development/Data/warehouse/ETL, Messaging Frameworks
    Application Architecture ☰ Interaction between applications, relation to core business processes, project life cycle, → development/SDLC[software development life cycle], portfolio management, process compliance …
    Technology Architecture ☰ Software, hardware, infrastructure, standards (Operating systems, messaging, hardware, network …) to support the above
    Security ☰ (Risk management, compliance, information security…)
  }

}
{ Roadmap #ea-roadmap

  The *enterprise architecture roadmap* lists the projects and programs that need to be untertaken to transition the current enterprise architecture to the target future vision.

  This roadmap should be aligned to the business roadmap.

}
{ Frameworks #ea-frameworks

  An *architecture framework* organizes an architecture's
    • planning
    • development
    • implementation
    • governance
    • sustainment

  Such an *architecture framework*
    • provides a common vocabulary
    • formulates *building blocks* (in the case of TOGAF)
    • lays out how an organization's envisaged architecture-target can be achieved using these building blocks
    • lists a set of tools and standards that support the building blocks

  Some named frameworks include:
    • → development/IT/TOGAF
    • Zachman
    • SABSA
    • 4+1
    • Dragon1

}
{ Syracom Enterprise Architecture Method (SEAM)

  The SEAM framework tries to structure the EAM capability of an organization.

  Conception areas:
    • Strategy
    • Method
    • Organization
    • Delivarable
    • Tool
}
{ Tools

  • Abacus
  • Adaptive Enterprise Architecture Manager
  • Alfabet (Software AG)
  • MEGA EA Solutions
  • BiZZdesign Enterprise Studio
  • Casewise Studio
  • Essential Architecture Manager
  • Enterprise Architect (Sparx Systems)
  • Enterprise Value Architect
  • Envision VIP (Future Tech Systems)
  • InQuisient Platform
  • iServer
  • iteraplan
  • leanIX
  • Living EAM Platform
  • Obeo SmartEA
  • SAMU (Atoll Technologies)
  • Visual Paradigm

}
{ Enterprise Information Security Architecture (EISA) #ea-eisa

  • Physical security
  • Elimination of media with sensitive data
  • Background checks
  • Use built-in security functions
  • Analysis of log files
  • User training
  • Encryption
  • Integration of security with software development.

}
{ Types of architects

  • Business strategy architect
  • Business architect
  • Solution architect
  • Software architect
  • Infrastructure architect
  • Enterprise architect

}
{ Architecture in Agile

  The 11th principle of → development/Software-design/methods/Agile states that the *best architecture* (as well as requirements and designs) emerge
  from *self-organizing* teams.

}
{ Other keywords

rem {
https://pubs.opengroup.org/architecture/togaf92-doc/arch/
rem }

  • Stakeholder management
  • Governance
  • Meta model
  • Repository
  • Roadmap
  • Stakeholder

}


sa:
  → development/Software-design/Architecture[Software architecture]

  → development/Enterprise/Architecture/solution[Solution architecture]

  → misc/ISO/42010
