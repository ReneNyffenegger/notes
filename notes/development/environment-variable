$ environment variables

{ Accessing/reading environment variables

  ~Java~
  -
  In → development/languages/Java[Java], environment variables can be read with → https://github.com/ReneNyffenegger/JavaClasses/blob/master/java/lang/System/getenv.java[System.getenv()].

  ~Python~
code {
import os
print(os.environ['VAR'])
code }

  ~Perl~
code {
print $ENV{VAR};
code }
  
  ~R~
code {
→ development/languages/R/functions/Sys_getenv[Sys.getenv](varname)
code }

}

With → Windows/PowerShell, the value of an environment variable (for example USERPROFILE) is in the expression `$env:USERPROFILE`.

{ APPDATA #appdata
}
{ CD #cd

  Windows: the current working directory.

}
{ EDITOR #editor
}
{ GIT_COMMON_DIR #git_common_dir

  → development/version-control-systems/git/GIT_COMMON_DIR

}
{ GMT_GRIDDIR
  sa: → tools/GMT
}
{ GMT_SHAREDIR
  sa: → tools/GMT
}
{ GMT_USERDIR

  Defaults to → Linux/fhs/home/username/_gmt.

  sa: → tools/GMT

}
{ HISTCONTROL #histcontrol

  See → Linux/shell/bash/history#histcontrol[bash history].

}
{ HISTIGNORE #histignore

  See → Linux/shell/bash/history#histignore[bash history].

}
{ HOME #home

  Points to the → Linux/home-directory of a → Linux/user[user].

  Typically, the value starts with `/home/` (Unix, that is).

  The Windows equivalent seems to be → #userprofile

  sa: →#logname

}
{ HTTP_PROXY #http_proxy

  See also → development/web/Proxy

}
{ LANG #lang

  The default → Linux/locale for categories where neither →#lc-all nor the specific variable for that
  category is set.

}
{ LC_ALL #lc-all

  Localization of programs. It makes their message follow the conventions of a specified country.

  The values `POSIX` and `C` are equivalent.

  sa: → #lang

}
{ LC_COLLATE #lc-collate

  → Linux/locale for string sorting.

}
{ LC_CTYPE #lc-ctype

  → Linux/locale for → development/Unicode/character-set[character sets] and character classification.

}
{ LC_MESSAGES #lc-messages

  Determines the → Linux/locale to be used for internationalised messages.
}
{ LC_MONETARY #lc-monetary

  → Linux/locale for formatting monetary values

}
{ LC_MONETARY #lc-numeric

  → Linux/locale for formatting numbers

}
{ LC_TIME #lc-time

  → Linux/locale for formatting date/time values

}
{ LD_LIBRARY_PATH #ld-library-path

  Specify directories where → development/languages/C-C-plus-plus/GCC/libraries/shared/index[shared libraries] are installed.

  See also → development/languages/C-C-plus-plus/GCC/create-libraries[creating a shared and static library with gcc].

}
{ LOGNAME #logname

  The name with which a → Linux/user

  sa: → #home
}
{ NLSPATH #nlspath

  Determines the location where `catopen` looks for internationalisation message catalogues.

}
{ PATH #path

  A series of directories used to search executable files. The directories are seperated with `:` in Unix and with `;` in
  Windows.

}
{ PATHEXT #pathext

  Windows: Start a program in → Windows/cmd-exe/index without suffix.

  There seems to be no Unix equivalent: → http://unix.stackexchange.com/questions/280528.
 
}
{ PS1 #ps1

  Configure the prompt for a →Linux/shell.

}
{ POSIXLY_CORRECT #posixly_correct

  If set, blocks are units of 512 bytes, otherwise of 1024 bytes.

  See also → Linux/POSIX
  
}
{ PROMPT_DIRTRIM #prompt_dirtrim
}
{ R_HOME #r_home

  Points to the → development/languages/R/home-directory[home directory of R].

}
{ SECONDS

  A →Linux/shell/bash (only bash?) variable.

code {
t0=$SECONDS

do_stuff

echo $(($SECONDS - $t0)) seconds used for stuff
code }

}
{ SHELL #shell

  The default shell that → Linux/shell/commands/useradd assumes when not invoked with the `-s` flag.

}
{ SYSTEMROOT #systemroot

  Windows. Typical value: `c:\windows`.

}
{ TERM

  `VT100`, `VT220`, …

}
{ TZ #tz

  Time zone in →Linux/POSIX systems.

  See also
    → Linux/timezone, → https://www.gnu.org/software/libc/manual/html_node/TZ-Variable.html#TZ-Variable,
    the influence of `$TZ` on the → Linux/shell/commands/date#shell-date-tz[`date`] shell command.

}
{ USERPROFILE #userprofile

  Seems to be the Windows equivalent of → #home.
  
  See also → Windows/dirs/Users/username/index

}
{ XDG_CONFIG_DIRS #xdg_config_dirs

  → Linux/X/XDG
}
{ XDG_CONFIG_HOME #xdg_config_home

  → Linux/X/XDG
}
{ XDG_DATA_HOME #xdg_data_home

  → Linux/X/XDG
}
{ XDG_DATA_DIRS #xdg_data_dirs

  → Linux/X/XDG
}

sa:
  → development/languages/R/environment-variables
