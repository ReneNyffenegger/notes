
UUID = Universally Unique IDentifier, aka GUID (= Globally Unique IDentifier).

A UUID is 128 bits long and guarantees to be unique in space *and* time without the need to be centrally registered.


{ Reprentation

  `llllllll-mmmm-Mhhh-Nsss-nnnnnnnnnnnn`.
  
   Each letter encodes 4 bits.

   `l` - time low: the low 32 bits of the time.

   `m` - time mid: the middle 16 bits of the time.

   `h` - time high: the high 12 bits of the time

   `s` - (plus 1 to 3 bits of `N`): Clock sequence
  
   `M` - indicates UUID version, the one to three most significant bits of `N` the UUD variant.

   `n` - the 48 bits of the node.

   { Microsoft Windows

     Apparently, → Microsoft chose to represent GUIDs with curly braces: `{llllllll-mmmm-Mhhh-Nsss-nnnnnnnnnnnn}`, for example in the → Windows/registry[registry].

     Also, the apparently use → development/endianness[mixed endianness] : the first three parts are little-endian and the last two parts are little-endian.
     The byte array `00`, `11`, `22`, … `ff` would be represented as: `33221100-5544-7766-8899-aabbccddeeff` 


   }

}
{ GUIDs as primary keys

  In → development/databases/Oracle[Oracle], a GUID can be created with → development/databases/Oracle/SQL/functions/sys_guid[`sys_guid`].

  In → development/databases/SQL-Server
   • `newid` returns a version 4 UUID
   • `newsequentialid` returns 128 identfier that is sequentially ascending up to the next reboot

}
sa:
  → development/web/RFC#rfc-4122[RFC 4122]

links:
  → http://www.wasteaguid.info/[Waste-A-Guid]
