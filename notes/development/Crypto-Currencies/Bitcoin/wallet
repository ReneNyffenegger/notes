$ Wallet [Bitcoin]
@ wallet

The wallet does not actually contain → development/Crypto-Currencies/Bitcoin/coin[coins]. Rather, it
stores the keys that allow you to spend the coins that are associated with a specific → development/Crypto-Currencies/Bitcoin/address.

The actual value of coins in a wallet is determined by traversing the *entire* → development/Crypto-Currencies/Bitcoin/blockchain and summing up
all credit/debit → development/Crypto-Currencies/Bitcoin/transactions[transactions] values for the addresses stored in the wallet.

The wallet is not only a collection of keys. It also contains
→ development/Crypto-Currencies/Bitcoin/transactions, accounting information, settings and
information about the → development/Crypto-Currencies/Bitcoin/blockchain.

{ Reading/writing wallet.dat

  → development/Crypto-Currencies/Bitcoin/clients/Bitcoin-Core uses *Berkeley DB* (BDB) to read/write wallet files (`wallet.dat`).

  Apparently, the entries in the wallet have one of the following types (cf → development/Crypto-Currencies/Bitcoin/clients/Bitcoin-Core/dev/sources/src/wallet/walletdb_cpp, function `ReadKeyValue`):
    • name
    • purpose
    • tx
    • acentry
    • watchs
    • key: Public key (`class CPubKey`) followed by a private key (`class CPrivKey`).
    • wkey: Public key (`class CPubKey`) followed by a wallet key (`class CWalletKey`).
    • mkey: Master key (`class MasterKey`)
    • ckey
    • keymeta
    • defaultkey
    • pool
    • version
    • cscript
    • orderposnext
    • destdagta
    • hdchain

}

links:
  → https://vanity.coin.dance/#!/[Personalize your wallet with a vanity address]

  → http://www.renenyffenegger.ch/development/bitcoin-notes/umls/wallet.html[Bitcoin core: wallet related classes]

sa:
  → development/Crypto-Currencies/Bitcoin/index
