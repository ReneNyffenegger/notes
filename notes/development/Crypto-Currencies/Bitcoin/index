
Bitcoin: an electronic peer to peer version of money. Bitcoins can be sent from buyer to seller
without the overhead of financial institutions.

It also solves the the problem of *double spending* without using a »man in the middle« (such as a financial institution).

Bitcoin is based on ~cryptographic proof~ rather than ~trust~.

Bitcoin has three main components:
  • P2P among → development/Crypto-Currencies/Bitcoin/clients[clients]
  • The distributed consensus
  • The selection of the → development/Crypto-Currencies/Bitcoin/node responsible for creating the next → development/Crypto-Currencies/Bitcoin/block

Because bitcoin is decentralized and has no government, (central-!) bank or company regulating it, there is
nobody than can prevent the payment to anyone nor does anyone need someone's permission to send
→ development/Crypto-Currencies/Bitcoin/coin[bitcoins]. This is a good thing.

{ Fundamental Principles

  There will never be more than 21 million → development/Crypto-Currencies/Bitcoin/coin[bitcoins].

  No organization (such as governments!) must be able to reject (censor?) valid txs from being confirmed or
  to prevent someone to use the network (be it as user, node, miner etc.) 

  Source code is → development/open-source.

  No one should have to identify himself with his/her name when using bitcoin.

  No bitcoins are special, rather, they're all equal.

  Confirmed → development/Crypto-Currencies/Bitcoin/block[blocks] cannot be changed. The history
  of the → development/Crypto-Currencies/Bitcoin/blockchain cannot be changed, either.

}

{ Achieving decentralization

  The following five questions need to be addressed:
    • Who maintains the ledger of transactions (→ development/Crypto-Currencies/Bitcoin/blockchain)?
    • Who has authority over which → development/Crypto-Currencies/Bitcoin/transactions are valid?
    • Who creates new → development/Crypto-Currencies/Bitcoin/coin[Bitcoins]?
    • Who determines how the rules of the system change?
    • How do bitcoins acquire exchange value?

  See Narayanan, Bonneau, Felten, Miller, Goldfeder: *Bitcoin and Cryptocurrency Techologies*, p. 52.

}

{ Proving the ownership of a bitcoin

  The bitcoin technology allows someone to prove he *is* actually in possession of a specific bitcoin.
  
  In order to do that, they have to send their public → development/Crypto-Currencies/Bitcoin/address[address], signed
  with their private key.

  If this message can be decoded, the ownership of their → development/Crypto-Currencies/Bitcoin/account is proven. Then
  it's possible to check the balance and the → development/Crypto-Currencies/Bitcoin/transactions[transaction] history.
}
{ Upgrading the Bitcoin network

  There are four ways to upgrade the Bitcoin network (for example to handle more transactions, improve scalability etc.):
    • minor activated hard → development/Crypto-Currencies/Bitcoin/fork
    • minor activated soft fork
    • user activated hard fork
    • user activated soft fork (UASF)

}
{ Misc

  { BIPs

    BIPs are Bitcoin Improval Proposals.

  }

  { No encryption

    Although called a → development/Crypto-Currencies[crypto currency], there is no encryption in Bitcoin: nothing needs to be encrypted.

  }

  { Historic snippets

    The earliest ideas of applying cryptography to cash came from David Chaum in 1983.
    
    1988, along with Fiat and Naor, proposed *offline* electronic cash.

    A paper by Okamoto and Ohta describe *Merkle trees* to subdivide coins.

    Nakamoto started programming on Bitcoin around May 2007.

    Compare *Printeton bitcoin book*, p. 9 ff

  }

  { Bitcoin systems/networks

    The ~main network~ is where people trade goods and servces. Default port: 8333. Network id: *main*.

    The ~public test network~. It is reset from time to time. Default port: 18333. Network id: *test*.
    Bitcoins for testing (faucets) can be acquired from → http://tpfaucet.appspot.com or
    → https://testnet.coinfaucet.eu/en/

    The ~regression test (network)~. It is not public with a minimum
    diffuclty. Default port: 18444. Network id: *regtest*.

  }

}


links:

  Searching for → development/Crypto-Currencies/Bitcoin/block[blocks], → development/Crypto-Currencies/Bitcoin/address[addresses] and
  → development/Crypto-Currencies/Bitcoin/transactions[transactions]: → https://bitcoinchain.com/[bitcoinchain.com].

  → https://coin.dance/

{ TODO

  → https://glacierprotocol.org/

  Stevens et al: → https://eprint.iacr.org/2016/757.pdf[Redactable Blockchain -or- Rewriting History in Bitcoin and Friends]

}

sa:
  → development/Crypto-Currencies/Bitcoin/account,
  → development/Crypto-Currencies/Bitcoin/address,
  → development/Crypto-Currencies/Bitcoin/blockchain,
  → development/Crypto-Currencies/Bitcoin/block,
  → development/Crypto-Currencies/Bitcoin/buying,
  → development/Crypto-Currencies/Bitcoin/clients[clients],
  → development/Crypto-Currencies/Bitcoin/consensus-rules,
  → development/Crypto-Currencies/Bitcoin/coin,
  → development/Crypto-Currencies/Bitcoin/fork,
  → development/Crypto-Currencies/Bitcoin/mining,
  → development/Crypto-Currencies/Bitcoin/node,
  → development/Crypto-Currencies/Bitcoin/nonce,
  → development/Crypto-Currencies/Bitcoin/Proof-of-Work,
  → development/Crypto-Currencies/Bitcoin/script[scripting language],
  → development/Crypto-Currencies/Bitcoin/Timestamp-Server,
  → development/Crypto-Currencies/Bitcoin/transactions,
  → development/Crypto-Currencies/Bitcoin/wallet

  → development/Crypto-Currencies

  → development/Crypto-Currencies/Bitcoin/Switzerland



rem {

Bitcoin in Switzerland:
  • https://www.bitcoinsuisse.ch/ (Founder: Niklas Nikolajsen, Partner: Johannes Schweifer)
  • Bitcoin Association Switzerland (Board member: Luzius Meisser)
  • → https://melonport.com[Melonport] builds Melon, a blockchain=-based asset management protocol. (VR: Mona Elisa, Reto Trinkler)
  • Stefan Thomas, a Swiss coder and active community member
  • R3: 50 companies (with CS and UBS) are experimenting with smart contracts.

rem }
