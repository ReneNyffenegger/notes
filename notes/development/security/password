$ Password
@ password

Often, a password needs to be provided along with a username or id to provide the → development/security/credential[credentials] to gain access to information or resources.

A password that is often used should be *easily typable*, especially if entered on mobile devices.

Unencrypted passwords are often found on (badly secured) network drives. Apparently, users love to store their passwords in
  → Microsoft/Office/Excel[Excel], → Microsoft/Office/Word[Word], text etc. files.
-
Thus, a first approach when trying to find passwords is using tools like → Linux/shell/commands/grep[`grep`],
→ Windows/dirs/Windows/System32/findstr_exe[`findstr.exe`] etc.

{ TODO

  Crack passwords with → development/security[John the Ripper]. Compare with RainbowCrack.

  { Passphrases

    Private keys can be protected with *passphrases* which offers the benefit that such keys can be safely stored, transported and backed up.

    However, keys protected by passphrases are also inconvenient to use especially in automated or semi-automated environments.

  }

}

sa:
  → Linux/security/password[password (Linux related)]

  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Winlogon#reg-enable-automatic-logon[Enable automatic logon] in the → Windows/registry[registry].

  The → development/languages/Python standard-library module → development/languages/Python/standard-library/getpass

  The → Windows/security/credential-manager[Windows Credential Manager].
