$ Public key certificate

aka: digital certificate, identity certificate, or just *certificate*.

A certificate authenticates the identity of the owner of the certificate to other parties involved in electronic transactions.

A certificate contains the owner's *public key*.

A certificate must be issued by a *certfication authority*.

A standard that defines the *format* of public key certificates is → development/security/cryptography/X_509[X.509].

{ Windows

  In Windows, a *Domain* includes a *certificates authority* that issues certificates to computers in that domain.

  Certificatas can be viewed and examined with → Windows/dirs/Windows/System32/certmgr_msc[`certmgr.msc`].

  { Stores

    Certificates are stored in *stores*, of which the two most important ones are
      • the local machine store
      • the current user store

    With → Windows/PowerShell, these stores can be displayed with the *cert* → Windows/PowerShell/language/provider[provider]:
code {
PS C:\> cd cert:
PS Cert:\> → Windows/PowerShell/command-inventory/noun/childItem/get[get-childItem] | → Windows/PowerShell/command-inventory/noun/object/select[select-object] location

    Location
    --------
 CurrentUser
LocalMachine

PS Cert:\> cd LocalMachine
… etc. etc. …
code }

  }
  { .NET namespace

     The .NET namespace `System.Security.Cryptography.X509Certificates` contains the → Microsoft/dot-net#dot-net-clr[Common Language Runtime] implementation of the *Authenticode X.509 v.3 certificate*.

     The → Windows/PowerShell/language/provider[PowerShell provider] *Certificate* allows to access the namespace's classes `X509Certificate2` and `X509Store`.

  }

}
