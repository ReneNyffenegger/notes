
{ Python

  With → development/languages/Python, a simple webserver can be started in the document root like so:
code {
python -m SimpleHTTPServer 7777
code }
  7777 is obviously the port number.

  Alternatively, a webserver can also be started with
code {
→ Linux/shell/commands/sudo python -m http.server 80
code }
Note: the port is optional. The `sudo` is apparently required for ports below 1024(?).

}
{ PHP

  The → development/web/php executable has a built-in web server which can be started with the
  → development/web/php#php-cmdline-option[`php` command line option] `-S <addr>:<port>`.
  -
  The doc root of the webserver can be specified with the option `-t <docroot>`.

}
{ IIS Express

  On → Windows, if *IIS Express* is installed, a web server can be started in a console like so:
code {
C:\> "c:\Program Files (x86)\IIS Express\iisexpress.exe" /path:%cd% /port:8765
code }

}
{ Uniform Server

  → web/webserver/Uniform-Server[Uniform Server] makes it easy to run Apache, PHP and MySQL on Windows.

}

sa:

  → development/Apache/Server

  → web/webserver/nginx

  → development/languages/Perl/misc/webserver

  → development/web/HTTP/header

  → web/webserver/cpp/simple

  A (Python) webserver to handle → web/webserver/CORS[CORS requests]

  → development/languages/Perl/modules/HTTP/Server/Simple/CGI/webserver,
  → development/languages/Perl/modules/HTTP/Daemon

  → development/languages/VBA/Win-API/examples/winsock#vba-webserer[webserver in Visual Basic for applications]
