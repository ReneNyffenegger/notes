$ Azure Pipelines

*Azure Pipelines* is Azure's solution for → development/tools/Continuous-integration[continouos integration (CI)] and continouos delivery (CD):
It allows to continuously build, test, and deploy to any platform and the cloud.

Azure Pipelines supports(?) the folloing → development/languages[programming languages]:
  • → development/languages/Python
  • → development/languages/Java
  • → development/languages/JavaScript
  • → development/web/php
  • Ruby
  • → development/languages/C-Sharp
  • → development/languages/C-C-plus-plus/CPP
  • Go
  • and others?

{ Deployment targets

  Deployment targets include
    • Container registries
    • Virtual machines
    • → Microsoft/Azure services
    • On-prem and → development/Cloud targets

}
{ Supported package formats #az-pipelines-package-formats

  Azure Pipelines allows to produce packages in the following formats
    • NuGet
    • development/languages/JavaScript/npm
    • Maven

  Compare with → Microsoft/Azure/products/Artifacts

}
{ Platforms

  Azure Pipelines builds on
    • Windows
    • Linux
    • Mac

}
{ Version control systems

  Azure Pipelines requires a → development/version-control-systems[version control system (VCS)] of which the following ones are supported
    • → development/version-control-systems/git/github[GitHub], GitHub Enterprize
    • → Microsoft/Azure/products/Repos Git & TFVC
    • Bitbucket Cloud
    • Subversion

  When code is pushed to the VCS, a default trigger is kicked which can be hooked to build and deploy the application and the monitor build's and deployment's results.

}
{ Resources

  Resources are entities that are consumed anywhere in a pipeline but live outside of the pipeline.

  Such resources include
  table { ll
    agent ppols ☰ Used to build or deploy software
    variable groups ☰ A variable groups stores named values («variables»). These values are available across multiple pipelines. Variable groups are managed in the *Library* page under *Pipelines*
    secure files ☰ Stores (encrypted) files such as signing certificates, Apple provisioning profiles, Android keystore files, SSH keys (etc.?) without having to commit then into the source code repository. The content of a secure file is only available during the build or release pipeline by referencing them from a task.
    service connections ☰ allows to connect to external and remote services that are used to execute tasks in a job
    environments ☰ A colection of resources, such as Kubernetes clusters and virtual machines. Typical names for enviornments include: Dev, Test, QA, Staging and Production
    repositories ☰ accesses templates in another repository
    artifacts ☰
    pipelines (huh, is this recursive?) ☰
    containers ☰ Docker registries or → Microsoft/Azure/products/Container-Registry
  table }

}
{ Defining pipelines

  A pipeline is either defined with
    • YAML (`azure-pipeline.yml`), or
    • user interface (referred to as «classic»)

  A definition of a pipeline is versioned along with the code. Thus, even *code branches* can have their own pipeline definition.

? Typically, there are at least the following two pipeline (types?):
   • A *build pipeline*, that builds and tests the code and publishes artifacts, and
   • a *release pipeline* which consumes and deploys those artifacts to the deployment targets.

  { Stages

    A pipeline consists of one or more *stages*.

    A stage consists of one or more *jobs*.

    Stages organize *jobs* in a pipeline.

  }
  { Jobs

    A job is either *agentless* or is executed on an *agent*.

  }
  { Steps

    A *step* is the smallest building block of a pipeline.

    A step is either
      • a *script*, or a
      • a *task* (which is essentially a prepackaged script)

  }
  { Running pipelines (triggers)

    A pipeline is executed when a *trigger* causes it to do so.

  }

}
{ Agent
 
  An agent is a the infrastructure that executes *jobs*.

}

sa:

  → Microsoft/Azure/products/DevOps,
  → Microsoft/Azure/products/Portal

  → Windows/development/Microsoft-Build-Engine

  → development/SDLC
