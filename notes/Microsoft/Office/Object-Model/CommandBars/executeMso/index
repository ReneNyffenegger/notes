$ CommandBars.executeMso

The following example opens → Microsoft/Office/GUI/Ribbon/tabs/File/Options/Trust-Center/Macro-Settings[File -> Options -> Trust Center (-> Trust Center Settings) -> Macro Settings].
code {
→ Microsoft/Office/Object-Model/CommandBars[application.commandBars].executeMso "MacroSecurity"
code }

{ List of IDs

  Microsoft provides a list of *control identifiers* for
    • → https://www.microsoft.com/en-us/download/details.aspx?id=6627[Office 2010]
    • → https://www.microsoft.com/en-us/download/details.aspx?id=36798[Office 2013]
    • → https://www.microsoft.com/en-us/download/details.aspx?id=50745[Office 2016]

  This list is also hosted on → https://github.com/OfficeDev/office-fluent-ui-command-identifiers[github].

  Note: the IDs are case sensitive.

  Some interesting IDS include:
  table { ll
    `HideRibbon` ☰ Toggle between hidden and shown → Microsoft/Office/GUI/Ribbon[Ribbon].
    `MinimizeRibbon` ☰ Hide Ribbon (but leave menu visible)
    `VisualBasic` ☰ Show → Microsoft/Office/Visual-Basic-Editor
    `ViewCode` ☰ Show the code-module of the active → Microsoft/Office/Excel/Object-Model/Worksheet.
    `MacroRecord` ☰ Open dialog to record a VBA macro (Simulate → Microsoft/Office/GUI/Ribbon/tabs/Developer/Code/Record-Macro[Developer -> Code -> Record Macro])
    `MacroRelativeReferences` ☰
    `DesignMode` ☰ 
    `AddInManager`, `ComAddInsDialog` ☰ → Microsoft/Office/add-in[Add-Ins]
    `DataFormExcel` ☰ Open the *auto data input form* for a → Microsoft/Office/Excel/table[table]. Compare with `activeSheet.showDataForm`
  table }

}
