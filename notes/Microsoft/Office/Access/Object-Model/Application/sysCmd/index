$ Access Object Model: Application.SysCmd

code {
Application.SysCmd action [, arg-1 [, arg-2 ]]
code }

{ Actions

  table { lrl
     ~Name~ ☰ ~Value~ ☰ ~Description~
     `acSysCmdAccessDir` ☰ 9 ☰ Returns the name of the directory where → Windows/dirs/Program-Files/Microsoft-Office/root/OfficeN/MSACCESS_EXE[`MSACCESS.EXE`] is located.
     `acSysCmdAccessVer` ☰ 7 ☰ Returns the → Microsoft/Office/versions[version number] of Microsoft Access.
     `acSysCmdClearHelpTopic` ☰ 11 ☰ 
     `acSysCmdClearStatus` ☰ 5 ☰ Provides information on the state of a database object.
     `acSysCmdGetObjectState` ☰ 10 ☰ Returns the state of the specified database object. `arg-1` and `arg-2` are required.
     `acSysCmdGetWorkgroupFile` ☰ 13 ☰ Returns the path to the workgroup file (→ Windows/dirs/Users/username/AppData/Roaming/Microsoft/Access/System1_mdw[`System1.mdw`]).
     `acSysCmdIniFile`   ☰  8 ☰ Returns the name of the `.ini` file associated with Microsoft Access.
     `acSysCmdInitMeter` ☰  1 ☰ Initializes the progress meter. `arg-1` and `arg-2` are required.
     `acSysCmdProfile`   ☰ 12 ☰ Returns the value of the `/profile` → Windows/dirs/Program-Files/Microsoft-Office/root/OfficeN/MSACCESS_EXE#msaccess-exe-command-line-opts[command line option].
     `acSysCmdRemoveMeter` ☰ 3 ☰ Removes the progress meter.
     `acSysCmdRuntime`     ☰ 6 ☰ Returns True (1) if a run-time version of Microsoft Access is running.
     `acSysCmdSetStatus`   ☰ 4 ☰ Sets the status bar text to the text argument. For example: `syscmd acSysCmdSetStatus, "operation ended successfully"`
     `acSysCmdUpdateMeter` ☰ 2 ☰ Updates the progress meter with the specified value.
  table }

}

sa:
  The
  → Microsoft/Office/Access/Object-Model/DoCmd[`DoCmd`] and the
  → Microsoft/Office/Access/Object-Model/Application[`Application`] object.
