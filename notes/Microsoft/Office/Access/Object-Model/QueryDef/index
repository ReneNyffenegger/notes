$ DAO Object Model: QueryDef

Check if a particular queryDef is already opened:
code {
→ development/languages/VBA/language/statements/if[if] sysCmd(acSysCmdGetObjectState, acQuery, "queryName") = acObjStateOpen then
  …
end if
code }

Close an opened queryDef:
code {
doCmd.close acQuery, "queryName"
code }

Delete a queryDef (queryDef must be closed):
code {
→ Microsoft/Office/Access/Object-Model/Application/index#access-currentDb[currentDB()].queryDefs.delete("queryName")
code }

{ execute

  `queryDef.execute` executes the SQL statement that is associated with the `queryDef`. The number of affected records is returned by its
  → Microsoft/Office/Access/Object-Model/QueryDef/execute/recordsAffected[`recordsAffected`] property.

  The `execute` method of `queryDef` executes the SQL statement that is associated with the respective queryDef object.

  IMHO, `execute` should always be used together with the → Microsoft/Office/Access/Object-Model/QueryDef/execute/dbFailOnError[`dbFailOnError`] option.

}

sa:
  → Microsoft/Office/Access/Object-Model
