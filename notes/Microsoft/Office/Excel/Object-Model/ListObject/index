$ Office Object Model: Excel - ListObject

A `listObject` is stored in a → Microsoft/Office/Excel/Object-Model/Worksheet[worksheet] (not in a → Microsoft/Office/Excel/Object-Model/Workbook[workbook]).

{ List object types

  There are five ListObject types in Excel which are identified by the `xlListObjectSourceType` enum:
    • xlSrcExternal - External data source
    • xlSrcModel - PowerPivot Model
    • xlSrcQuery
    • xlSrcRange
    • xlSrcXml

  The `xlSrcXml` allows to access data from Excel, CSV, SharePoint etc. Some VBA examples that try to demonstrate this include
    • → Microsoft/Office/Excel/Object-Model/ListObject/connectionString/CSV[reading CSV]
    • → Microsoft/Office/Excel/Object-Model/ListObject/connectionString/Excel[getting data from another Workbook]
}
{ Creating a data table #excel-listObject-create-data-table

  The following snippet creates an → Microsoft/Office/Excel/table[Excel table] with → development/languages/VBA[Visual Basic for Applications].

  gh|about-MS-Office-object-model|/Excel/ListObject/data-table.bas||

  When running the snippet, it produces:
  gh|about-MS-Office-object-model|/Excel/ListObject/data-table.png||

}
{ queryTable

  The queryTable property (whose data type also is → Microsoft/Office/Excel/Object-Model/QueryTable[`queryTable`]) provides a listObject's link to the list server.

}
{ TODO

  { 1:1 relationship to a queryTable

    It seems that there is a 1:1 relationship between a `listObject` and a → Microsoft/Office/Excel/Object-Model/QueryTable[`queryTable`]: the list object has the property `.queryTable` and the query table has the
    property `.listObject` which, at least in my tests point to one another.

    In fact, after createing a list object with `sheet.listobjects.add()`, the newly created list object already has a query table object.

  }

}
{ Examples

  → Microsoft/Office/Excel/Object-Model/ListObject/connectionString/Excel

  → Microsoft/Office/Excel/Object-Model/ListObject/connectionString/CSV

}

  → Microsoft/Office/Excel/Object-Model
