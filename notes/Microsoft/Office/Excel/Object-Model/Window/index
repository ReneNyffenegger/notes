$ Office Object Model: Excel - Window
@ Window

There's a `windows` collection in → Microsoft/Office/Excel/Object-Model/Application[Application] and in → Microsoft/Office/Excel/Object-Model/Workbook[Workbook] (the latter being a subset of the former).

{ Properties and methods

  table { ll

   `activate()` ☰ Show the window
   `activateNext()`, `activatePrevious()` ☰
   `activeCell` ☰
   `activeChart` ☰
   `activePane` ☰
   `activeSheet` ☰
   `activeSheetView` ☰
   `application` ☰
   `autoFilterDateGrouping` ☰
   `caption` ☰ Reads or writes the *name* of the Window's *title bar*.
   `close()` ☰
   `creator` ☰
   `displayFormulas` ☰ Controls if the window's → Microsoft/Office/Excel/Object-Model/Range/cell[cells] display → Microsoft/Office/Excel/formulas[formulas] or their calculated values.
   `displayGridlines` ☰
   `displayHeadings` ☰
   `displayHorizontalScrollBar` ☰
   `displayOutline` ☰
   `displayRightToLeft` ☰
   `displayRuler` ☰ Window must be in *Page Layout* mode in order to show the ruler.
   `displayVerticalScrollBar` ☰
   `displayWhitespace` ☰ Controls if *whitespace* is shown when in *Page Layout* mode. *Whitespace* refers to the non-printable area around a document page's content (header, margin, …)
   `displayWorkbookTabs` ☰
   `displayZeros` ☰ Controls if a (numerical?) `0` is shown.
   `enableResize` ☰ ?
   `freezePanes` ☰ Create or elimante → Microsoft/Office/Excel/Object-Model/Pane[panes]. See also `.panes` and `.split`.
   `gridlineColor` ☰
   `gridlineColorIndex` ☰
   `height`, `left`, `width`, `top` ☰ Dimension of the window, in points. When assigning values to these properties in order to resize or move the window, `.windowState` should be set to `xlNormal`, otherwise, Excel throws *Run-time error '1004': Unable to set the … property of the Window class*.
   `hWnd` ☰
   `index` ☰
   `largeScroll()` ☰ Scroll the window's content by «pages» (Vertical scrolls are similar to using the keys *Page Up*, *Page Down*). See also `smallScroll()`
   `newWindow()` ☰
   `onWindow` ☰ The name of a → development/languages/VBA/language/subs-and-functions[procedure] that is triggered when the window is activated.
   `panes` ☰ The shown → Microsoft/Office/Excel/Object-Model/Pane[panes] in the window. (`.freezePanes` creates or eliminates panes)
   `parent` ☰
   `pointsToScreenPixelsX()`, `pointsToScreenPixelsY()` ☰ Converts dimensions that are measured in *points* to *pixels*.
   `printOut()` ☰
   `printPreview()` ☰
   `rangeFromPoint()` ☰
   `rangeSelection` ☰ Returns the selected → Microsoft/Office/Excel/Object-Model/Range, *even* if a graphic object is also selected (and → Microsoft/Office/Excel/Object-Model/Application/selection[`appliction.selection`] or `window.selection` would not return a range).
   `scrollColumn`, `scrollRow` ☰ Returns or sets the left/top most column/row in a → Microsoft/Office/Excel/Object-Model/Pane[pane] or the window.
   `scrollIntoView()` ☰ Scroll the shown document such that the indicated range (measured in points!) becomes visible.
   `scrollWorkbookTabs()` ☰
   `selectedSheets` ☰
   `selection` ☰
   `sheetViews` ☰
   `smallScroll()` ☰ Scrolls the shown document by the indicated number of rows and columns. See also `largeScroll()`.
   `split` ☰ `true` if the window is split, `false` otherwise. Note: it's possible that `.freezePanes` is `true` and `.split` is false.
   `splitColumn`, `splitRow`  ☰ Number of columns to the left/rows toward the top where a window is split into → Microsoft/Office/Excel/Object-Model/Pane[panes].
   `splitHorizontal`, `splitVertical` ☰
   `tabRatio` ☰
   `type` ☰
   `usableHeight` ☰
   `usableWidth` ☰
   `view` ☰ Controls if the window is in *normal*, *page break* or *page layout* view-mode.
   `visible` ☰
   `visibleRange` ☰ The → Microsoft/Office/Excel/Object-Model/Range that is currently visible in the window.
   `windowNumber` ☰
   `windowState` ☰ Controls if the window is *maximized*, *minimized* or *normal*
   `zoom` ☰

  table }

}

{ General display options #excel-obj-window-general-display

  The way Excel looks can be changed to a certain degree in the `window` (and → Microsoft/Office/Excel/Object-Model/Application[`application`]) object:

  gh|about-MS-Office-object-model|/Excel/Window/display.bas||

  gh|about-MS-Office-object-model|/Excel/Window/img/display.png||

  TODO: `.displayGridlines` corresponds to the GUI option → Microsoft/Office/Excel/GUI/Ribbon/tabs/Page-Layout/Sheet-Options/Gridlines[Page Layout -> Sheet Options -> Gridlines].

  Complete(?) list of `.display*` properties:
code {
? activeWindow.displayFormulas
? activeWindow.displayGridlines
? activeWindow.displayHeadings
? activeWindow.displayHorizontalScrollBar
? activeWindow.displayOutline
? activeWindow.displayRightToLeft
? activeWindow.displayRuler
? activeWindow.displayVerticalScrollBar
? activeWindow.displayWhitespace
? activeWindow.displayWorkbookTabs
? activeWindow.displayZeros
code }

  Compare with the → Microsoft/Office/Excel/Object-Model/Application/display[`.display` properties] of the
  → Microsoft/Office/Excel/Object-Model/Application[`application` object] and the
  → Microsoft/Office/Excel/Object-Model/WorksheetView#excel-worksheetView-display-properties[`display` options] of the
  → Microsoft/Office/Excel/Object-Model/WorksheetView[`worksheetView` object].


}

{ freezePanes #excel-window-freezePanes

`.freezePanes` splits a → Microsoft/Office/Excel/Object-Model/Worksheet into two areas. One are is fixed and does not respond to scrolling (thus is *frozen*) while the other region can be
  scrolled.

  The split takes place on the left and/or top edge of the selected → Microsoft/Office/Excel/Object-Model/Range/cell, row or column. Thus, the following
  example freezes the first row on a worksheet:
code {
activeSheet.rows(2).select
activeWindow.freezePanes = true ' although a verb, it must be set to true or false (otherwise: Invalid use of property)
code }

  See also
    • The Window's → Microsoft/Office/Excel/Object-Model/Window/split[`.split*`] properties
    • → Microsoft/Office/Excel/GUI/Ribbon/tabs/View/Window/Freeze-Panes[View -> Window -> Freeze Pane]
    • The → Microsoft/Office/Excel/Object-Model/Pane[`pane`] object.

}

{ hwnd

  The `.hwnd` property is particularly useful when needed in → Windows/development/WinAPI functions.

}

sa:
 
  A Window's → Microsoft/Office/Excel/Object-Model/Window/view[`.view`] property.

  The properties `activeSheetView` and `sheetViews(…)` return a → Microsoft/Office/Excel/Object-Model/WorksheetView[`worksheetView` object].

  The → Microsoft/Office/Excel/Object-Model/Window/split[`.split*`] properties

  The → Microsoft/Office/Excel/Object-Model/SheetViews[`SheetViews`] object/property.

  Some window related actions can be triggered via the menu → Microsoft/Office/Excel/GUI/Ribbon/tabs/View/Window[View -> Window].

  → Microsoft/Office/Excel/Object-Model/Window/scroll/row-column[`.scrollRow` and `.scrollColumn`]

  The VBA function `→ Microsoft/Office/Excel/Object-Model/Range[range].show()` scrolls a window so that the given → Microsoft/Office/Excel/Object-Model/Range/cell (range) is visible.

  → Microsoft/Office/Excel/Object-Model

  `→ Microsoft/Office/Excel/Object-Model/Application[application].onWindow` specifies the name of a procedure that is executed when a window is activated.
