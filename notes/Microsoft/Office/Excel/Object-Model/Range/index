$ Office Object Model: Excel - Range

A `Range` object can be obtained by using one of the two properties `→ Microsoft/Office/Excel/Object-Model/Application#excel-application-cells[application.cells]` or `application.range`.

The method → Microsoft/Office/Excel/Object-Model/Application[`application.inputBox`] allows a user to select a range with the mouse and pass the selected range to a VBA program.

{ A cell is a range

  A cell can be referred to by a range. It can be instantiated and accessed by giving the cell's address to the range »constructor«:
  gh|about-MS-Office-object-model|/Excel/Range/b3.bas||


  The currently active cell can be found with → Microsoft/Office/Excel/Object-Model/Application#excel-application-active-objects[`application.activeCell`].

}
{ Selecting multiple cells

  The following example accesss all cells from *B3* to *E9* and assigns a formula to the range: 
  gh|about-MS-Office-object-model|/Excel/Range/b3-e9.bas||

}
{ Setting values within the range

  A range's `value` property can be assigned a (one dimension) value in which case all cells of that range will have that value.

  If an → development/languages/VBA/language/arrays[array] is assigned, the values of the array is used to fill the columns of the range.

  gh|about-MS-Office-object-model|/Excel/Range/value.bas||

}
{ Iterating over the cells in a range #excel-range-for-each

  The → development/languages/VBA/language/statements/for/index#vba-for-each[for each] statement allows to iterate over the cells in a range:
  gh|about-MS-Office-object-model|/Excel/Range/for-each.bas||

}
{ Modifying a cell's (interior) color

  gh|about-MS-Office-object-model|/Excel/Range/interior.bas||

}
{ Naming a range

  A range can be given a hopefully meaningful name:
  gh|about-MS-Office-object-model|/Excel/Range/name.bas||

}
{ Selecting multiple colunms

  `Range(…)` can be passed two `columns(n)` in which case it selects the range between those two columns.

  In the following example, the columns 4 through 9 are selected:
  gh|about-MS-Office-object-model|/Excel/Range/select-multiple-columns.bas||

}
{ resize #excel-range-resize

  gh|about-MS-Office-object-model|/Excel/Range/resize.bas||

}
{ offset

  gh|about-MS-Office-object-model|/Excel/Range/offset.bas||

}
{ autofit

  The `columns` property (defined in `application`) returns a range object on which `autofit` can be called. This will set the width of the columns such
  that the text in the columns is visble.

  gh|about-MS-Office-object-model|/Excel/Range/autofit.bas||

}
{ Dump array into cells #excel-range-dump-array

  Combining → #excel-range-resize[resize] and assigning an → development/languages/VBA/language/arrays[array] to the resized range can be used to dump the content
  of the array onto an excel sheet.

  gh|about-MS-Office-object-model|/Excel/Range/dump-array-into-cells.bas||

  Similarly, a two dimensional array can be written into cells like so:
  gh|about-MS-Office-object-model|/Excel/Range/dump-2d-array-into-cells.bas||

}
{ address

 `address` returns a textual representation of the range.

  gh|about-MS-Office-object-model|/Excel/Range/address.bas||

}
{ clearContents #excel-range-clearContents

  `clearContents` deletes the content of a range.
  
  It might be used in conjunction with `→ Microsoft/Office/Excel/Object-Model/Worksheet#excel-worksheet-usedRange[worksheet.usedRange]`.

}

sa:

  The → Microsoft/Office/Excel/Object-Model/parent[`parent`] property.

  Applying a → Microsoft/Office/Excel/Object-Model/WorksheetFunction#worksheetFunction-range[function (such as `min`, `sum` or `avg`)] on a range.

  → Microsoft/Office/Excel/Object-Model/Range/assign-to-variant[Assigning a range] to a → development/languages/VBA/language/datatypes/variant[variant] to create a
  two dimensional → development/languages/VBA/language/arrays[array].

  → Microsoft/Office/Excel/Object-Model/Range/pass-cell-value-to-function[Passing values from cells to a VBA function]

 → Microsoft/Office/Excel/Object-Model/index
