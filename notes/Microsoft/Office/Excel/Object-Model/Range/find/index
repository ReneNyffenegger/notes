$ Excel VBA: range.find

`range.find` can be used to find a given value in a → Microsoft/Office/Excel/Object-Model/Range[`range`] object.

`.find(…)` returns a → Microsoft/Office/Excel/Object-Model/Range[`range`] object that corresponds to the first → Microsoft/Office/Excel/Object-Model/Range/cell[cell] that matches the search for criteria. If no cell matches the
criteria, → development/languages/VBA/language/null-and-nothing-etc[`nothing`].

The → Microsoft/Office/Excel/Object-Model/Range[Range] object comes with a `findNext` and `findPrevious` method that allows to execute a search multiple times.

Note that calling `find` saves the values for the following parameters for the next call of `find`:
  • `lookIn`
  • `lookAt`
  • `searchOrder`
  • `matchByte`

Apparently, `find` does not work on protected → Microsoft/Office/Excel/Object-Model/Worksheet[worksheets].

{ Copy/paste templates to use find in the immediate Window

  These are some copy/pastable snippets that I like to use in the → Microsoft/Office/Visual-Basic-Editor/Immediate-Window for easier searching in Excel worksheets.

code {
set found = selection.find(what := "…", lookin := xlValues, lookAt := xlWhole                )
set found = selection.find(what := "…", lookin := xlValues, lookAt := xlWhole, after := found)
code }

  Print value in found cell:
code {
? found.value
code }

  Print address of found cell
code {
? found.address
? found.row & ", " found.column
code }

  Go to found cell
code {
→ Microsoft/Office/Excel/Object-Model/Application#excel-application-goto[application.goto] found
code }

  Check if something was found
code {
? not found is → development/languages/VBA/language/null-and-nothing-etc#vba-nothing[nothing]
code }

}
{ VBA Example

  gh|about-MS-Office-object-model|/Excel/Range/find/findNext.bas||

}

sa:

  The → Microsoft/Office/Excel/Object-Model/Range[Range] object
