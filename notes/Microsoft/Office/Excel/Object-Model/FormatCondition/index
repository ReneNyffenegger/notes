$ Office Object Model: Excel - FormatCondition

{ Highlight differences

  gh|about-MS-Office-object-model|/Excel/FormatCondition/highlight-differences.vb||
  gh|about-MS-Office-object-model|/Excel/FormatCondition/img/highlight-differences.png||

}
{ Greater than

  gh|about-MS-Office-object-model|/Excel/FormatCondition/greater_than.bas||

}
{ Higlight non-number cells

  The following example combines the the → Microsoft/Office/Excel/functions[worksheet functions] `not` and `isNumber` to highlight cells that contain nun numerical values.

  The range in which the conditional formatting is applied is visually set appart by a drawn border around it.

  gh|about-MS-Office-object-model|/Excel/FormatCondition/not-number.vb||

  gh|about-MS-Office-object-model|/Excel/FormatCondition/img/not-number.png||

}
{ Using the Immediate Window to quickly highlight cells

  It's possible to quickly highlight → Microsoft/Office/Excel/Object-Model/Range/cell[cells] without writing a → development/languages/VBA macro but by rather executing the code in the
  → Microsoft/Office/Visual-Basic-Editor/Immediate-Window.

  The following example simply highlights call cells that contain a value:
code {
set cond = selection.formatConditions.add(xlCellValue, xlNotEqual, "=""""") ' = ""
cond.interior.color = rgb(255, 130, 160)
code }

  Later:
code {
cond.delete
code }

  { Highlight differences (2)

    Again highlighting differences between the the values in the row above and the current row, but this time using the immediate window:
code {
set cond = selection.formatConditions.add( type:= xlExpression, formula1 := "=RC <> → Microsoft/Office/Excel/functions/offset(RC; -1; 0)")
cond.interior.color = rgb(255, 140, 190)
code }

    This example is using the → Microsoft/Office/Excel/functions/offset[`offset` worksheet function] so that values are compared even if cells are moved around.

  }

}
{ Enums

  { xlFormatConditionType

    table { llr
      `xlAboveAverageCondition` ☰ Above average condition ☰ 12
      `xlBlanksCondition` ☰ Blanks condition ☰ 10
      `xlCellValue` ☰ Cell value ☰ 1
      `xlColorScale` ☰ Color scale ☰ 3
      `xlDataBar` ☰ DataBar ☰ 4
      `xlErrorsCondition` ☰ Errors condition ☰ 16
      `xlExpression` ☰ Expression ☰ 2
      `xlIconSet` ☰ Icon set ☰ 6
      `xlNoBlanksCondition` ☰ No blanks condition ☰ 13
      `xlNoErrorsCondition` ☰ No errors condition ☰ 17
      `xlTextString` ☰ Text string ☰ 9
      `xlTimePeriod` ☰ Time period ☰ 11
      `xlTop10` ☰ Top 10 values ☰ 5
      `xlUniqueValues` ☰ Unique values ☰ 8
    table }

  }

  { xlFormatConditionOperator

    table { llr
     `xlBetween` ☰ Between. Can be used only if two formulas are provided. ☰ 1
     `xlEqual` ☰ Equal. ☰ 3
     `xlGreater` ☰ Greater than. ☰ 5
     `xlGreaterEqual` ☰ Greater than or equal to. ☰ 7
     `xlLess` ☰ Less than. ☰ 6
     `xlLessEqual` ☰ Less than or equal to. ☰ 8
     `xlNotBetween` ☰ Not between. Can be used only if two formulas are provided. ☰ 2
     `xlNotEqual` ☰ Not equal. ☰ 4
    table }

  }

}

sa:

  → Microsoft/Office/Excel/GUI/formatting/conditional[Conditional formatting]

  → Microsoft/Office/Excel/Object-Model
