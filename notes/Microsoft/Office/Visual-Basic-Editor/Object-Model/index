$ Microsoft Office: VB Editor Object Model

The *→ Microsoft/Office/Visual-Basic-Editor[VB Editor] Object Model* (→ Windows/development/COM/type-library *Microsoft Visual Basic for Applications Extensibility 5.3*, → Windows/registry/tree/HKEY_CLASSES_ROOT/TypeLib[Type Lib Guid] = `{0002E157-0000-0000-C000-000000000046}`)
exposes the following classes (compare with → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBE[`VBE`]):
table { ll
  `AddIn`, `AddIns` ☰
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/CodeModule[`CodeModule`] ☰ represents the source code that is associated with a form, class or document and allows to change the source code programmatically.
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/CodePane[`CodePane`], `CodePanes` ☰ A `CodePane` object refers to the area where source code can edited.
  `CommandBarEvents` ☰
  `Events` ☰
  `LinkedWindows` ☰
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/Property[`Property`], `Properties` ☰
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/Reference[`Reference`], `References` ☰
  `ReferencesEvents` ☰
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponent[`VBComponent`], → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponents[`VBComponents`] ☰ A `VBComponent` object represents a → development/languages/VBA/language/module[VBA module], → development/languages/VBA/language/classes[class], a form or (?) a standalone project.
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBProject[`VBProject`], `VBProjects` ☰
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBE[`VBE`] ☰ The *root object* that contains all other objects and collections
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/Window[`Window`], → Microsoft/Office/Visual-Basic-Editor/Object-Model/Windows[`Windows`] ☰ A window is … of course a window …
table }

{ Adding a reference to a library programmatically #vbe-add-reference

  The programmatical equivalent of *Tools -> References -> …. * is to use the `VBProject.references` object.

  The → development/UUID-GUID[GUIDs] that are added identify a *type lib*. Thus, they need to be present in
  the → Windows/registry[Registry] under → Windows/registry/tree/HKEY_CLASSES_ROOT/TypeLib/GUID[`HKEY_CLASSES_ROOT\TypeLib\{GUID}`].

  The GUID in the following example represents the → Windows/development/COM/Useful-object-libraries/Microsoft-Visual-Basic-for-Application-Extensibility[Microsoft Visual Basic for Applications Extensibility 5.3] library.


In → Microsoft/Office/Excel[Excel]:
code {
thisWorkbook.VBProject.references.addFromGuid _
        GUID   :="{0002E157-0000-0000-C000-000000000046}", _
        major  :=  5,                                      _
        minor  :=  3
code }

  In → Microsoft/Office/Word[Word], `thisWorkbook` needs to be changed to `thisDocument`

  { Well known references

    gh|about-MS-Office-object-model|/VBE/VBProject/references/well-known.bas||

  }

}

sa:

  → development/languages/VBA/Programmatic-access-to-Visual-Basic-Project-is-not-trusted

  → development/languages/VBA/modules/vbEditor[`vbEditor.bas`], a → development/languages/VBA/language/module[VBA module] that hopefully will be useful to use the
  objects exposed by the VB editor.
