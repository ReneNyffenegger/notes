$ Microsoft Office: VB Editor Object Model

→ Microsoft/Office/Visual-Basic-Editor/Object-Model/VBProject[`VBProject`],
→ Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponent[`VBComponent`]

{ Adding a reference to a library programmatically #vbe-add-reference

  The programmatical equivalent of *Tools -> References -> …. * is to use the `VBProject.references` object.

  The → development/UUID-GUID[GUIDs] that are added identify a *type lib*. Thus, they need to be present in
  the → Windows/registry[Registry] under → Windows/registry/tree/HKEY_CLASSES_ROOT/TypeLib/GUID[`HKEY_CLASSES_ROOT\TypeLib\{GUID}`].

  The GUID in the following example represents the *Microsoft Visual Basic for Applications Extensibility 5.3* library.


In → Microsoft/Office/Excel[Excel]:
code {
thisWorkbook.VBProject.references.addFromGuid _
        GUID   :="{0002E157-0000-0000-C000-000000000046}", _
        major  :=  5,                                      _
        minor  :=  3
code }

In → Microsoft/Office/Word[Word], `thisWorkbook` needs to be changed to `thisDocument`

  { Well known references

    gh|about-MS-Office-object-model|/VBE/VBProject/references/well-known.bas||

  }

}

sa:
  → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBProject[VBProject]

  → development/languages/VBA/Programmatic-access-to-Visual-Basic-Project-is-not-trusted

  → development/languages/VBA/modules/vbEditor[`vbEditor.bas`], a → development/languages/VBA/language/module[VBA module] that hopefully will be useful to use the
  objects exposed by the VB editor.
