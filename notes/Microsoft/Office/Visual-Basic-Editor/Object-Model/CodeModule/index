$ VB Editor Object Model: CodeModule

The `codeModule` object represents the source code that is associated witha form, class or document and allows to change the source code programmatically.

In the → Microsoft/Office/Visual-Basic-Editor/Immediate-Window, a reference to a code module might be found with an expression such as
code {
application.VBE.activeVBProject.→ Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponent[vbComponents]("module10").codeModule
code }

For example, the following sequence changes the text of the third line:
code {
→ development/languages/VBA/language/statements/set cm = application.VBE.ActiveVBProject.VBComponents("module10").codeModule
cm.replaceLine 3, " ' This line was changed programmatically"
code }

Note that the numbering is not zero-based: the first line is identified by line number 1.

The property `.countOfLines` evaluates to the number of lines in the source code.

The method `.addFromString "some text"` seems to insert a line at the current cursor position.
-
In order to append a line to the source code, `insertLines` needs to be used:
code {
set cm = application.VBE.ActiveVBProject.VBComponents("module10").codeModule
cm.insertLines cm.countOfLines + 1, "' This line was added at " & format(now, "yyyy-mm-dd hh:nn:ss")
code }

Unfortunately, `cm` looses the reference to the code module object after executing `cm.insertLines`

{ Properties

  Properties of `codeModule` are
  table { ll
    `codePane` ☰
    `countOfDeclarationLines` ☰
    `countOflines` ☰
    `lines` ☰
    `parent` ☰
    `procBodyLine` ☰
    `procCountLines` ☰
    `procOfLine` ☰
    `procStartLine` ☰
    `vbe` ☰`
  table }

}
{ Methods

  Methods of `codeModule` are
  table { ll
    `addFromFile` ☰ Compare with `→ Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponent[vbComponentss].import`
    `addFromString` ☰
    → Microsoft/Office/Visual-Basic-Editor/Object-Model/CodeModule/createEventProc[`createEventProc`] ☰ `createEventProc("click", "labelFoo")` creates a procedure to catch the *click* event on the control *labelFoo* and returns the line number where the event procedure was inserted.
    `deleteLines` ☰
    `find` ☰
    `insertLines` ☰
  table }

}

sa:

  A *code module* might be associated with multiple → Microsoft/Office/Visual-Basic-Editor/Object-Model/CodePane[code panes].

  → Microsoft/Office/Excel/Object-Model/Hyperlink/followHyperlink{This example] demonstrates how the `codeMOdule` object is used to create a dynamic
  → development/languages/VBA/language/classes/event[event] handler for a → Microsoft/Office/Excel/Object-Model/Hyperlink[`hyperlink`] on a
  → Microsoft/Office/Excel/Object-Model/Worksheet[`worksheet`].

  → Microsoft/Office/Visual-Basic-Editor/Object-Model/VBComponent[`vbComponent`]

  The → Microsoft/Office/Visual-Basic-Editor/Object-Model[VB Editor object model]
