$ Examples for VBScript MS-Office App Creator: Excel (workbook_open)

This is an example that uses the → Microsoft/Office/VBScript-App-Creator[Command line VBScript Office App Creator] to create an Excel Workbook that has a `workbook_open()` function which will be executed
when the Workbook is opened.

{ thisWorkbook.vb

  This is the → development/languages/VBA/language/module[VBA module] that will be inserted into the Workbook that will be created.

  The `workbook_open()` → development/languages/VBA/language/subs-and-functions[sub] calls `msgBox()` to demonstrate that it has worked.

  gh|VBS-MS-Office-App-Creator|/examples/Excel/workbook_open/thisWorkbook.vb||

}
{ create.wsf

 `create.wsf` is the script that creates the Excel workbook (→ Microsoft/Office/VBScript-App-Creator#createOfficeApp[`createOfficeApp(…)`]
  and inserts `thisWorkbook.vb` (→ Microsoft/Office/VBScript-App-Creator#replaceThisWorkbookModule[`replaceThisWorkbookModule(…)`]).

  gh|VBS-MS-Office-App-Creator|/examples/Excel/workbook_open/create.wsf||

  This script needs to be started on the command line (→ Windows/dirs/Windows/System32/cmdkey_exe[`cmd.exe`], → Windows/PowerShell/) like so;
code {
P:\ath\to\dir\> → Windows/dirs/Windows/System32/cscript_exe[cscript] create.wsf
code }

}
{ Macros have been disabled

  Chances are that macros need to be explicitly enabled when the workbook is run. This is indicated by the following warning-message:
  gh|VBS-MS-Office-App-Creator|/examples/Excel/workbook_open/img/Macros-have-been-disabled.png||

  It *might* be possible to add the document to the trusted location with
  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Office/application_version/application_name/Security/Trusted-Documents/TrustRecords#adding-document-to-trusted-location[this PowerShell script].

}

sa:
  → Microsoft/Office/VBScript-App-Creator
