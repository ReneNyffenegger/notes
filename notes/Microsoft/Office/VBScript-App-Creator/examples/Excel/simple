$ Examples for VBScript MS-Office App Creator: Excel (simple)

This is one of the → Microsoft/Office/VBScript-App-Creator#office-app-creator-examples[examples] for the
→ Microsoft/Office/VBScript-App-Creator[command line Office App Creator].

Its main purpose is to demonstrate the functions `createOfficeApp()` and `insertModule()`.

On the command line (console), this example must be run by executing
code {
C:\> → Windows/dirs/Windows/System32/cscript_exe[cscript] create.wsf
code }

When exectued, `create.wsf` calls `createOfficeApp()` to create a → Microsoft/Office/Excel/Object-Model/Workbook[Excel Workbook], named `created.xlsm` and then calls `insertModule()` to
add a → development/languages/VBA/language/module[VBA module] to the workbook.

With the module now added, the script executes → Microsoft/Office/Excel/Object-Model/Application#excel-application-run[`app.run(…)`] to call the 
→ development/languages/VBA/language/subs-and-functions[VBA sub] `main` which is defined in the module that just was inserted.

`xls.save` saves the newly created workbook.

Finally, → development/languages/VBA/language/statements/appActivate[`appActivate`] is used to bring the Excel application to the front.

{ functions.bas

 `functions.bas` is the module that is inserted with `insertModule()`. It contains the sub `main` which is called from the `create.wsf` script.

  gh|VBS-MS-Office-App-Creator|/examples/Excel/simple/functions.bas||

}
{ create.wsf

 `create.wsf` is the script that uses → Microsoft/Office/VBScript-App-Creator[the VBS App Creator] to create the workbook:
  gh|VBS-MS-Office-App-Creator|/examples/Excel/simple/create.wsf||

}

sa:
  → Microsoft/Office/VBScript-App-Creator
