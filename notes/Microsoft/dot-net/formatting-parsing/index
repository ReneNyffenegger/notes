$ .NET: formatting and parssing

~Formatting~ is the process of converting an object into a → Microsoft/dot-net/namespaces-classes/System/String[string] representation.

~Parsing~ is the opposite: an object is created from a string representation.

{ ToString() #formatting-parsing-ToString

  Because formatting is quite a fundamental operation, it warrants a (default) implementation in the root of all objects: → Microsoft/dot-net/namespaces-classes/System/Object#Object-ToString[`Object.ToString()`].
  By default, `ToString()` returns the fully qualified name of the object's type.

  Because in most cases the object's type name is not too interesting, derived classes override `ToString()` to create a custom representation of an object.
  - 
  In fact, some classes even provide more than one version of `ToString()`. For example, The → Microsoft/dot-net/namespaces-classes/System/Int32[`System.Int32`] type has for `ToString()` methods that allow to
  specify in more detail how the value is to be formatted.

}

sa:
  The → Microsoft/dot-net/namespaces-classes/System/IFormattable[`System.IFormattable`] and
  → Microsoft/dot-net/namespaces-classes/System/IFormatProvider[`System.IFormatProvider`] interfaces.

  → Microsoft/dot-net/namespaces-classes/System/String/Format/_format-strings
