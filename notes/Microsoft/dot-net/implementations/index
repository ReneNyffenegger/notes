$ .NET implementations

Some common .NET implementations are
table { ll
   → Microsoft/dot-net/implementations/Framework ☰ The original .NET implementation whose first release was 2002. Runs on → Windows only and is optimized for developing Windows desktop applications.
   → Microsoft/dot-net/implementations/Core ☰ A cross platform implementation (→ Windows, → Linux, macOS)
    Mono ☰ The runtime that powers Xamarin applications (Android, Mac, iOS, tvOS, watch OS) and Unity engine (games).
   → Windows/development/Universal-Windows-Platform ☰ Targets touch-enabled Windows applications (on PCs, tablets, phablets, phones, XBox) and software for the Internet of Thigs (IoT).
table }


? .NET Core is distributed as a set of NuGet packages to individual applications.
-
The .NET Framework is installed in a system-wide location. 

.NET Core is layered.

.NET Core does not have problematic technologies anymore, such as AppDomain or sandboxing.

{ Components

  An implementation includes the following mandatory or optional components
    • Runtime (one or more)
    • A class library that implements the .NET Standard
    • Application frameworks (optional)
    • Development tools (optional)

  { Runtimes

    .NET Framwork has the CLR

    .NET Core has CoreCLR and CoreRT

  }
  { Application framworks

    Some application frameworks are
      • ASP.NET
      • Windows Forms
      • Windows Presentation Foundation (WPF)

  }


}
{ .NET Standard

  .NET Standard is a list of APIs that must be present in a → Microsoft/dot-net/implementations[.NET implementation] to claim compliance to a given .NET Standard version.

   These APIs are implemented in the *Base Class Library* of a .NET implementation.

   .NET Framwork implements the .NET Standard in version 4.5 and later.

}

links:
  → https://dotnet.microsoft.com/platform/dotnet-standard#versions[This interactive chart] allows to choose a .NET Standard version and then displays which
  → Microsoft/dot-net/implementations[.NET implementation] supports the chosen version.
