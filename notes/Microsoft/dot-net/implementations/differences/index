$ .NET implementation differences

→ Microsoft/dot-net/implementations/Core is cross platform (→ Windows, → Linux, macOS) while → Microsoft/dot-net/implementations/Framework is Windows only.

.NET Core allows *side-by-side* installation, so different applications can use different .NET Core versions.

.NET Core is better suited for
  • microservices
  • Docker containers
  • high performance and scalable systems

.NET Framework might have
  • third party .NET libraries or NuGet packages that are not available for .NET Core

.NET Framework technologies that are not available in .NET Core
  • ASP.NET Web Forms applications
  • ASP.NET Web Pages applications
  • WCF service implementation (might be added in a future version of .NET Core).
  • Windows Workflow Foundation (WF), Workflow Services (WCF + WF), WCF Data Services (formerly known as → Microsoft/dot-net/ADO Data Services)

.NET Framework is updated with → Windows/update, .NET Core with its package manager NuGet.

? .NET Framework implements the *Common Language Interface (CLI)* with the → Microsoft/dot-net/Common-Language-Runtime[CLR] and Framework Class Library, .NET Core with CoreCLR and
CoreFX.

.NET Framework will be deprecated and the release after .NET Core 3 will be .NET 5 (without the suffice Core), to avoid confusion with the .NET Framework.

.NET Framwork technologies → https://docs.microsoft.com/en-us/dotnet/core/porting/net-framework-tech-unavailable[that are anavailble on .NET Core] are:
   • → Microsoft/dot-net/namespaces-classes/System/AppDomain[AppDomains]
   • Remoting
   • Code Access Security (CAS)
   • Security transparency
   • → Microsoft/dot-net/namespaces-classes/System/EnterpriseServices[`System.EnterpriseServices`]
