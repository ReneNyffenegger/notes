
Some → Microsoft/dot-net objects and namespaces I have come accross and find useful or noteworthy.

table { ll

  → Microsoft/dot-net/namespaces-classes/System/AppDomain[`System.AppDomain ☰
  → Microsoft/dot-net/namespaces-classes/System/Array[`System.Array`] ☰
  → Microsoft/dot-net/namespaces-classes/System/String[`System.String`] ☰
  → Microsoft/dot-net/namespaces-classes/System/MarshalByRefObject[`System.MarshalByRefObject`] ☰
  → Microsoft/dot-net/namespaces-classes/System/Object[`System.Object`] ☰ *THE base class*
  → Microsoft/dot-net/namespaces-classes/System/RuntimeType[`System.RuntimeType`] ☰ The type that a → Windows/PowerShell/language/object[PowerShell's object] `.GetType` returns.

  → Microsoft/dot-net/namespaces-classes/System/__ComObject[`System.__ComObject`] ☰ wraps an → Windows/development/COM/IUnknown[COM `IUnknown` interface].

  → Microsoft/dot-net/namespaces-classes/System/Collections[`System.Collections`] (ns) ☰
  → Microsoft/dot-net/namespaces-classes/System/Data[`System.Data`] (ns) ☰ ADO.NET framework
 `System.Data.Common` (ns) ☰ Classes that are shared among → Microsoft/dot-net Framework data providers.

  → Microsoft/dot-net/namespaces-classes/System/IO/FileSystemInfo[`System.IO.DirectoryInfo`] ☰ Represents a file system directory.
  → Microsoft/dot-net/namespaces-classes/System/IO/FileSystemInfo[`System.IO.FileSystemInfo`] ☰

  → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSMember[`System.Management.Automation.PSMember`] (enum) ☰ Possible member types.
  → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject[`System.Management.Automation.PSObject`] ☰ 
  → Microsoft/dot-net/namespaces-classes/System/Management/Automation/TypeAccelerators[`System.Management.Automation.TypeAccelerators`] ☰ 

  → Microsoft/dot-net/namespaces-classes/System/ServiceProcess/ServiceController[`System.ServiceProcess.ServiceController`] ☰ represents a → Windows/services[Windows service].

  → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions[`System.Text.RegularExpressions`] (ns) ☰ → development/regular-expressions
  → Microsoft/dot-net/namespaces-classes/System/Text/StringBuilder[`System.Text.StringBuilder`] ☰


  → Microsoft/dot-net/namespaces-classes/Microsoft/Data/Sqlite[`Microsoft.Data.Sqlite`] (ns) ☰
  → Microsoft/dot-net/namespaces-classes/Microsoft/PackageManagement/Packaging/SoftwareIdentity[`Microsoft.PackageManagement.Packaging.SoftwareIdentity`] ☰ returned by the → Windows/PowerShell/command-inventory/noun/package/find[`find-package` cmdLet].
  → Microsoft/dot-net/namespaces-classes/Microsoft/PowerShell/Commands/HistoryInfo[`Microsoft.PowerShell.Commands.HistoryInfo`] ☰ Returned by the → Windows/PowerShell/command-inventory/noun/history/get[`get-history` cmdLet].
  → Microsoft/dot-net/namespaces-classes/Microsoft/PowerShell/Commands/MatchInfo[`Microsoft.PowerShell.Commands.MatchInfo`] ☰ Returned by the → Windows/PowerShell/command-inventory/noun/string/select[`select-string` cmdLet].

  → Microsoft/dot-net/namespaces-classes/Microsoft/PowerShell/Commands/AddType/AutoGeneratedTypes[`Microsoft.PowerShell.Commands.AddType.AutoGeneratedTypes`] (ns) ☰ Default namespace for types that are added with the → Windows/PowerShell/command-inventory/noun/type/add[`add-type` cmdLet]

  → Microsoft/dot-net/namespaces-classes/Microsoft/Win32/RegistryKey[`Microsoft.Win32.RegistryKey`] ☰ The class that is returned by the → Windows/PowerShell/command-inventory/noun/item/get[`get-item`] for → Windows/registry/tree-structure/key[registry keys].


  `Windows.ApplicationModel.Core.CoreApplication` ☰ The → Windows/development/Universal-Windows-Platform[UWP] is based on `W.AM.C.CoreApplication`.

  `IBM.Data.DB2` (ns) ☰

table }

{ Searching for classes

  In → Windows/PowerShell, it's possible to search for class names with a → development/regular-expressions[regular expression]. The following example searches for
  classes that match `reg.*ex.*parse`:
code {
PS C:\> [→ Microsoft/dot-net/namespaces-classes/System/AppDomain[System.AppDomain]]::CurrentDomain.GetAssemblies().GetTypes().FullName | → Windows/PowerShell/command-inventory/noun/string/select[select-string] reg.*ex.*parse
code }

}
{ Determine which assembly contains a type

  Given a type name, the → Microsoft/dot-net/assembly[assembly] that contains this type can be determined like so:
code {
PS C:\> [System.Data.SqlTypes.SqlDecimal].Assembly.Location
→ Windows/dirs/Windows/Microsoft_NET/assembly[C:\Windows\Microsoft.Net\assembly]\GAC_64\System.Data\v4.0_4.0.0.0__b77a5c561934e089\System.Data.dll
code }

}
