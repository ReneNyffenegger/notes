$ Powershell + Microsoft.Office.Interop.Excel

This is a simple example that is supposed to demonstrate how → Microsoft/dot-net/namespaces-classes/Microsoft/Office/Interop/Excel[`Microsoft.Office.Interop.Excel`] can be
used in → Windows/PowerShell:


code {
add-type -path 'C:\Program Files (x86)\Microsoft Office\Office16\DCF\Microsoft.Office.Interop.Excel.dll'  # Path in BN
$xls = new-object Microsoft.Office.Interop.Excel.ApplicationClass

$xls.Visible = $true

$wb = $xls.Workbooks.Add()
$sh = $wb.Worksheets(1)

$sh.Name = "foo bar baz"

$sh.Cells(1,1) = "Hello world"

$wb.SaveAs("$env:temp\excel-test.xlsx")
$xls.Quit()
code }

{ Another example

  gh|.NET-API|/Microsoft/Office/Interop/Excel/PowerShell/simple.ps1||

}
{ Error message: Unable to cast COM object of type 'Microsoft.Office.Interop.Excel.ApplicationClass' to interface type 'Microsoft.Office.Interop.Excel._Application'

  On a company-laptop, I encountered the following error message:
  "
    Exception setting "Visible": "Unable to cast COM object of type 'Microsoft.Office.Interop.Excel.ApplicationClass' to interface type 'Microsoft.Office.Interop.Excel._Application'. This operation
    failed because the QueryInterface call on the COM component for the interface with IID '{000208D5-0000-0000-C000-000000000046}' failed due to the following error: Element not found. (Exception from
    HRESULT: 0x8002802B (TYPE_E_ELEMENTNOTFOUND)).
  "

  Some solutions to this problems are found in → https://stackoverflow.com/questions/28066719[this stackoverflow question].

}


sa:

  The → Microsoft/dot-net/namespaces-classes/Microsoft/Office/Interop/Excel[`Microsoft.Office.Interop.Excel` namespace].

