$ Microsoft.SqlServer.Dts.Runtime.DtsContainer (abstract class)
@ Microsoft.SqlServer.Dts.Runtime.DtsContainer


{ Properties, methods and fields

  Arguably, the most interestting method is `Execute()`.

  table { ll

    `AcceptBreakpointManager()` ☰
    `CreationName` ☰
    `DebugMode` ☰ A `→ Microsoft/dot-net/namespaces-classes/System/Boolean` which allows to control if the container runs in debug mode (and consequently fires `IDTSEvents.OnBreakpointHit` events).
    `DelayValidation` ☰ If `true`, the validation of the package is delayed until runtime.
    `Description` ☰
    `Disable` ☰
    `Dispose()` ☰
    `Disposed` ☰ An *event*
    `Execute()` ☰ Runs the application, container or package as part of a pacakge workflow.
    `ExecutionDuration` ☰ `→ Microsoft/dot-net/namespaces-classes/System/Int32`: Amount of milliseconds that the container spent executing.
    `ExecutionResult` ☰ A value of the `→ Microsoft/dot-net/namespaces-classes/Microsoft/SqlServer/Dts/Runtime/DTSExecResult` enumeration.
    `ExecutionStatus` ☰ Also a `DTSExecResult` value
    `FailPackageOnFailure` ☰ If `true`, the package fails if one of its children fails. Used on containers, not the package itself.
    `FailParentOnFailure` ☰
    `ForcedExecutionValue` ☰
    `ForceExecutionResult` ☰
    `ForceExecutionValue` ☰
    `ID` ☰
    `IsDefaultLocaleID` ☰
    `IsolationLevel` ☰
    `LoadFromXML()` ☰ Not callable by an application - app should use `LoadPackage` of `Microsoft.SqlServer.Dts.Runtime.Application` instead.
    `LocaleID` ☰
    `LogEntryInfos` ☰
    `LoggingMode` ☰
    `LoggingOptions` ☰
    `MaximumErrorCount` ☰ Default: 1
    `Name` ☰
    `Parent` ☰ The parent container, or `null`.
    `ResumeExecution()` ☰
    `SaveToXML()` ☰
    `SetWrappedExecutable()` ☰
    `Site` ☰ A reference to an object that implements `System.ComponentModel.ISite`.
    `StartTime` ☰
    `StopTime` ☰
    `SuspendExecution()` ☰
    `SuspendRequired` ☰
    `TransactionOption` ☰
    `Validate()` ☰ Check for invalid settings which would prevent the class from executing successfully.
    `VariableDispenser` ☰
    `Variables` ☰

  table }

}

