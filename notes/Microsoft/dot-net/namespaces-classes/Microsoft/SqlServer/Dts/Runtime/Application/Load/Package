@ Microsoft.SqlServer.Dts.Runtime.Application - LoadPackage()

The `LoadPackage` method of `→ Microsoft/dot-net/namespaces-classes/Microsoft/SqlServer/Dts/Runtime/Application` parses a
→ development/filename-extensions#dtsx[`.dtsx`] and returns a `→ Microsoft/dot-net/namespaces-classes/Microsoft/SqlServer/Dts/Runtime/Package` object.

The following → Windows/PowerShell snippet tries to demonstrate the method. I had to run it in a 32-bit PowerShell session becuase one of the required → Microsoft/dot-net/assembly[assemblies] was available
as 32-bit on the system where I tested this.
code {
→ Windows/PowerShell/command-inventory/noun/type/add#add-type-assembly[add-Type -assemblyname] "Microsoft.SQLServer.ManagedDts, Version=13.0.0.0, culture=neutral, publickeytoken=89845dcd8080cc91"
→ Windows/PowerShell/command-inventory/noun/type/add#add-type-assembly[add-Type -assemblyName] "Microsoft.SQLServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"

$app = → Windows/PowerShell/command-inventory/noun/object/new → Microsoft/dot-net/namespaces-classes/Microsoft/SqlServer/Dts/Runtime/Application

$pkg = $app.LoadPackage('P:\ath\to\the.dtsx', $null)
"Creator:     $($pkg.CreatorName)    (on $($pkg.CreatorComputerName) at $($pkg.creationDate))"
code }
