$ System.Net.WebClient (class)

`System.Net.WebClient` inherits from `System.ComponentModel.Component` and is used to send and receive → development/Data to and from a → development/web/URI-URL-URN-IRI-URC#uri[URI].

Microsofts recommends to use → Microsoft/dot-net/namespaces-classes/System/Net/Http/HttpClient[`System.Net.Http.HttpClient`] rather than `S.N.WebClient`.

{ Methods and properties

  table { ll

    `AllowReadStreamBuffering` ☰
    `AllowWriteStreamBuffering` ☰
    `BaseAddress` ☰
    `CachePolicy` ☰
    `CancelAsync()` ☰
    `Credentials` ☰
    `DownloadData()` ☰
    `DownloadDataAsync()` ☰
    `DownloadDataTaskAsync()` ☰
    `DownloadFile()` ☰
    `DownloadFileAsync()` ☰
    `DownloadFileTaskAsync()` ☰
    `DownloadString()` ☰
    `DownloadStringAsync()` ☰
    `DownloadStringTaskAsync()` ☰
    `Encoding` ☰
    `GetWebRequest()` ☰
    `GetWebResponse()` ☰
    `Headers` ☰
    `IsBusy` ☰
    `OnDownloadDataCompleted()` ☰
    `OnDownloadFileCompleted()` ☰
    `OnDownloadProgressChanged()` ☰
    `OnDownloadStringCompleted()` ☰
    `OnOpenReadCompleted()` ☰
    `OnOpenWriteCompleted()` ☰
    `OnUploadDataCompleted()` ☰
    `OnUploadFileCompleted()` ☰
    `OnUploadProgressChanged()` ☰
    `OnUploadStringCompleted()` ☰
    `OnUploadValuesCompleted()` ☰
    `OnWriteStreamClosed()` ☰
    `OpenRead()` ☰
    `OpenReadAsync()` ☰
    `OpenReadTaskAsync()` ☰
    `OpenWrite()` ☰
    `OpenWriteAsync()` ☰
    `OpenWriteTaskAsync()` ☰
    `Proxy` ☰
    `QueryString` ☰
    `ResponseHeaders` ☰
    `UploadData()` ☰
    `UploadDataAsync()` ☰
    `UploadDataTaskAsync()` ☰
    `UploadFile()` ☰
    `UploadFileAsync()` ☰
    `UploadFileTaskAsync()` ☰
    `UploadString()` ☰
    `UploadStringAsync()` ☰
    `UploadStringTaskAsync()` ☰
    `UploadValues()` ☰
    `UploadValuesAsync()` ☰
    `UploadValuesTaskAsync()` ☰
    `UseDefaultCredentials` ☰

  table }

}

{ Simple C-Sharp example

  The following simple → development/languages/C-Sharp example tries to demonstrate how `System.Net.WebClient` might be used.

  gh|.NET-API|/System/Net/WebClient.cs||

  After compiling, the executbable can be started with an → development/web/URI-URL-URN-IRI-URC#url[URL]:
code {
C:\> WebClient.exe https://google.com
code }

}


sa:

  The → Microsoft/dot-net/namespaces-classes/System/Net/WebClient/UploadFile[`UploadFile()`] method can be used to upload a file with
  a → development/web/HTTP POST request or an → development/web/FTP[FTP] STOR command.

  Sometimes, the property `SecurityProtocol` of → Microsoft/dot-net/namespaces-classes/System/Net/ServicePointManager[`System.Net.ServicePointManager`] needs to be set to `Tls12`.

  The PowerShell cmdlet `→ Windows/PowerShell/command-inventory/noun/webRequest/invoke`
