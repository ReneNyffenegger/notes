$ System.Runtime.InteropServices.Marshal - GetActiveObject()

The method `GetActiveObject` of the → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/Marshal[`System.Runtime.InteropServices`] class exposes the
→ Windows/development/COM function `GetActiveObject` from → Windows/dirs/Windows/System32/oleaut32_dll[`oleaut32.dll`] (the latter expects a class identifier
(→ Windows/registry/tree/HKEY_CLASSES_ROOT/CLSID[CLSID]) instead of → Windows/registry/tree/HKEY_CLASSES_ROOT/ProgId[ProgID]).

{ Missing GetActiveObject method in .NET Core #GetActiveObject-missing-in-dotNetCore

  In → Microsoft/dot-net/implementations/Core, the → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/Marshal[`System.Runtime.InteropServices.Marshal`] class does not exhibit
 `GetActiveObject()` anymore. Therefore, → Microsoft/dot-net#dot-net-pinvoke[P/Invoke] is required to call the underlying → Windows/development/WinAPI[WinAPI's] function.

  { PInvoke.cs

    This is the → development/languages/C-Sharp source file for the P/Invocation for `GetActiveObject()`:
    gh|.NET-API|/System/Runtime/InteropServices/Marshal/GetActiveObject/PInvoke.cs||

  }
  { Using PInvoke.cs in PowerShell

    In PowerShell, this source might be used like so:
    gh|.NET-API|/System/Runtime/InteropServices/Marshal/GetActiveObject/PInvoke.ps1||

  }
}

sa:
  The → Windows/PowerShell/modules/personal/COM[PowerShell module COM]
