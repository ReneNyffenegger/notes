$ System.Runtime.InteropServices.DllImportAttribute (class)
@ System.Runtime.InteropServices.DllImportAttribute

The `System.Runtime.InteropServices.DllIimportAttribute` class is used to call a function in an → Microsoft/dot-net/managed-code/un[unmanaged]
→ Windows/development/Portable-Executable/DLL.

{ Fields

  table { lll
    ☰ ☰ Default value
     `BestFitMapping` ☰ A boolean that enables or disables so called *best fitting mapping* when converting → development/Unicode characters to ANSI characters. ☰ `true`
     `CallingConvention` ☰ A value of the → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/CallingConvention[`System.Runtime.InteropServices.CallingConvention`] enum that specifies the → development/languages/C-C-plus-plus/calling-convention of the *entry point*. ☰ `Winapi`
     `CharSet` ☰ Specifies the character set that is used to marshal a string. If `ExactSpelling` is `false`, it also influences if → Windows/development/WinAPI/A-and-W-functions[`A` or `W`] is appended to the name specified in `EntryPoint` ☰ `Ansi` (Always?)
     `EntryPoint` ☰ The name or ordinal (to be prefixed with `#`) of the DLL entry point to be called. ☰
     `ExactSpelling` ☰ A boolean: if `false`, the letter `A` is appended to `EntryPoint` if `CharSet` is set to `Ansi` and `W` is appended if `CharSet` is set to `Unicode`. If `true`, name of `EntryPoint` is not modified. i☰
     `PreserveSig` ☰  ☰
     `SetLastError` ☰ A boolean: if `true`, `SetLastError` is called (and cached) before returning to the caller. ☰
     `ThrowOnUnmappableChar` ☰ ☰
  table }

}


sa:


  → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/ComImportAttribute[`System.Runtime.InteropServices.ComImportAttribute`]

  The → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/CharSet[`System.Runtime.InteropServices.CharSet`] enum.
