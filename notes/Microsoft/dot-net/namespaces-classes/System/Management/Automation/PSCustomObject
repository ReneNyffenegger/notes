$ System.Management.Automation.PSCustomObject

{ Creating a PSCustomObject in PowerShell

  In → Windows/PowerShell, an → Windows/PowerShell/language/object whose type is `System.Management.Automation.PSCustomObject` can be created like so:
code {
PS C:\> $obj = → Windows/PowerShell/command-inventory/noun/object/new[new-object] → Windows/PowerShell/command-inventory/noun/object/new/psObject[psObject]
PS C:\> $obj.GetType().FullName
System.Management.Automation.PSCustomObject
code }

}
{ Adding properties (named values) to a PSCustomObject object

  As all → Windows/PowerShell/language/object[PowerShell objects], a PSCustomObject can be added properties, which are basically named values. This functionality is
  probably the main use for PSCustomObjects.

code {
$psCustObj = → Windows/PowerShell/command-inventory/noun/object/new[new-object] psObject
$psCustObj | → Windows/PowerShell/command-inventory/noun/member/add[add-member] num  42
$psCustObj | → Windows/PowerShell/command-inventory/noun/member/add[add-member] txt 'hello world'

→ Windows/PowerShell/command-inventory/noun/host/write[write-host] "num = $($psCustObj.num), txt = $($psCustObj.txt)"

'num', 'txt' | → Windows/PowerShell/command-inventory/noun/object/forEach[foreach-object] { write-host "→ Windows/PowerShell/language/variable/automatic/psItem[$_] : $($psCustObj.$_ )" }
code }

}
{ Definition and significance of PSCustomObject #PSCustomObject-definition

  In the → https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/MshObject.cs[source code], `PSCustomObject` is defined like so (redacted by me for brevity):
code {
public class PSCustomObject
{
    /// To prevent other instances than SelfInstance.
    private PSCustomObject() { }

    internal static PSCustomObject SelfInstance = new PSCustomObject();

    public override string ToString()
    {
        return string.Empty;
    }
}
code }

  So, `PSCustomObject` directly derives from → Microsoft/dot-net/namespaces-classes/System/Object[`System.Object`], does not implement any interface and does not have any fields or properties except the `internal` field
 `SelfInstance`.

  A `PSCustomObject` is used to initialize a → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject[`PSObject`] if the `PSObject` does not refer to any other
  → Microsoft/dot-net class (and thus essentially becomes a custom-object). See → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject#PSObject-BaseObject-and-PSCustomObject[`PSObject`, its base object and `PSCustomObject`].
}


sa:
  → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject[`System.Management.Automation.PSObject`]
