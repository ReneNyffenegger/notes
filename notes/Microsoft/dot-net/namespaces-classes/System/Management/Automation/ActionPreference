$ System.Management.Automation.ActionPreference (enum)

`System.Management.Automation.ActionPreference` is the type of some → Windows/PowerShell/language/variable/preference[PowerShell preference variables]:
`$debugPreference`, → Windows/PowerShell/language/variable/preference/errorActionPreference[`$errorActionPreference`],
→ Windows/PowerShell/language/variable/preference/informationPreference[`$informationPreference`],
→ Windows/PowerShell/language/variable/preference/verbosePreference[`$verbosePreference`] and `$warningPreference`].

{ Values

  This enum has the following values
  table { lllll
    ~Name~           ☰ ~Value~ ☰ ~Displays (error?) message~ ☰ ~Continues exection~ ☰ ~Comments~
    SilentlyContinue ☰ 0 ☰ ✗ ☰ ✓ ☰ Messages are suppressed, and execution continues.
    Stop             ☰ 1 ☰ ✓ ☰ ✓ ☰ Stops execution
    Continue         ☰ 2 ☰ ✗ ☰ ✓ ☰ Display (error...) and continue. Default for `$errorActionPreference`
    Inquire          ☰ 3 ☰ ✓ ☰  ☰ User is prompted for response on how to continue
    Ignore           ☰ 4 ☰ ✗ ☰ ✓ ☰ Intended for per-command use. The «event» (error etc.) is ignored and not recorded in the respective stream.
    Suspend          ☰ 5 ☰   ☰   ☰ Not valid for `$errorActionPreference`
  table }

  What exactly is the difference between *SilentlyContinue* and *Ignore*?

  In PowerShell, it's possible to retrieve these values with
code {
[→ Microsoft/dot-net/namespaces-classes/System/Enum[System.Enum]]::GetValues('System.Management.Automation.ActionPreference').foreach({
   write-host $_.ToString() $_.value__
})
code }

}

sa:
  The PowerShell → Windows/PowerShell/language/variable/preference/verbosePreference[preference variable `$verbosePreference`].
