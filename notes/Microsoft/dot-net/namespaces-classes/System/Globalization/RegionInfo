$ System.Globalization.RegionInfo (class)
@ System.Globalization.RegionInfo

`System.Globalization.RegionInfo` contains counry and region related information.

{ Properties

  table { ll

    `CurrencyEnglishName`, `CurrencyNativeName` ☰ Name of the currency used  (in English and in the native language)
    `CurrencySymbol` ☰
    `CurrentRegion` ☰ A `static` property that evaluates to a `System.Globalization.RegionInfo` object that represents the country and region used by the current → Windows/development/process/thread.
    `DisplayName` ☰
    `EnglishName` ☰
    `GeoId` ☰ The *GeoID* is a numerical value (`int`) that uniquely identifies a geographical region, country, city or location. (See → https://docs.microsoft.com/en-us/windows/win32/intl/table-of-geographical-locations[Table of Geographical Locations])
    `IsMetric` ☰
    `ISOCurrencySymbol` ☰
    `Name` ☰ Name or → misc/ISO/3166[ISO 3166] two-letter country/region code
    `NativeName` ☰
    `ThreeLetterISORegionName` ☰ The three-letter code defined in ISO 3166 
    `ThreeLetterWindowsRegionName` ☰
    `TwoLetterISORegionName` ☰ The two-letter code defined in ISO 3166 
  
  table }
}
{ PowerShell example

code {
$curReg = [System.Globalization.RegionInfo]::CurrentRegion
write-host $curReg.EnglishName
write-host $curReg.GeoId
write-host $curReg.IsMetric
write-host $curReg.Name
code }

rem {
code {
foreach ($geoId in 100 .. 352) {
   $geoId
   $reg = new-object System.Globalization.RegionInfo $geoId
}
code }
rem }

}

sa:

 `→ Microsoft/dot-net/namespaces-classes/System/Globalization/CultureInfo`

  → Windows/settings: → Windows/settings/Time-Language/Region-language[Time & Language -> Region and language]
