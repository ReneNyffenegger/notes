$ System.Globalization.CultureInfo (class)
@ System.Globalization.CultureInfo

A `System.Globalization.CultureInfo` object is returned by the `get-→ Windows/PowerShell/command-inventory/noun/winSystemLocale[winSystemLocale]` cmdLet.

{ Methods and properties


  table { ll
    `Calendar` ☰
    `ClearCachedData()` ☰
    `Clone()` ☰
    `CompareInfo` ☰
    `CreateSpecificCulture()` ☰
    `CultureTypes` ☰
    `CurrentCulture` ☰
    `CurrentUICulture` ☰
    `DateTimeFormat` ☰
    `DefaultThreadCurrentCulture` ☰
    `DefaultThreadCurrentUICulture` ☰
    `DisplayName` ☰
    `EnglishName` ☰
    `Equals()` ☰
    `GetConsoleFallbackUICulture()` ☰
    `GetCultureInfo()` ☰
    `GetCultureInfoByIetfLanguageTag()` ☰
    `GetCultures()` ☰
    `GetFormat()` ☰
    `GetHashCode()` ☰
    `IetfLanguageTag` ☰
    `InstalledUICulture` ☰
    `InvariantCulture` ☰
    `IsNeutralCulture` ☰
    `IsReadOnly` ☰
    `KeyboardLayoutId` ☰ Returns the *input locale identifier* (which was formerly called the *keyboard layout* - but a input local is broader in its concept because it also can indicate a speech-to-text converter, an Input Method Editor (IME) or other forms of input).
    `LCID` ☰ Culture identifier
    `Name` ☰
    `NativeName` ☰
    `NumberFormat` ☰
    `OptionalCalendars` ☰
    `Parent` ☰
    `ReadOnly()` ☰
    `TextInfo` ☰ A `System.Globalization.TextInfo` object
    `ThreeLetterISOLanguageName` ☰  Three letter ISO 639-2 code code for the language 
    `ThreeLetterWindowsLanguageName` ☰
    `ToString()` ☰
    `TwoLetterISOLanguageName` ☰
    `UseUserOverride` ☰
  table }

}

sa:

  → Microsoft/dot-net/namespaces-classes/Microsoft/InternationalSettings/Commands/WinUserLanguage[`Microsoft.InternationalSettings.Commands.WinUserLanguage`]

 `→ Microsoft/dot-net/namespaces-classes/System/Globalization/RegionInfo`

  In → Microsoft/dot-net/managed-code/un, a *culture* is referred to as a → Windows/development/Internationalization/locale[locale].
