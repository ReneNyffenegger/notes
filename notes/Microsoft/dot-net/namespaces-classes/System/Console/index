$ System.Console (class)
@ System.Console

The `System.Console` class allows to programatically access → development/stdin-stdout-stderr in console applications.

{ Properties, methods and events

  table { ll

    `BackgroundColor`, `ForegroundColor` ☰ A member of the `→ Microsoft/dot-net/namespaces-classes/System/ConsoleColor` enum.
    → Microsoft/dot-net/namespaces-classes/System/Console/Beep[`Beep()`] ☰
    `BufferHeight`, `BufferWidth` ☰
    `CancelKeyPress` ☰ The only *event*: fired when `ctrl+C` or `ctrl+break` is pressed. See also `TreatControlCAsInput()`
    `CapsLock` ☰
    `Clear()` ☰
    `CursorLeft`, `CursorTop` ☰
    `CursorSize` ☰
    `CursorVisible` ☰
    `Error` ☰
    `GetCursorPosition()` ☰
    `In`, `Out` ☰
    `InputEncoding`, `OutputEncoding` ☰ Instances of types derived from `→ Microsoft/dot-net/namespaces-classes/System/Text/Encoding`
    `IsErrorRedirected` ☰
    `IsInputRedirected` ☰
    `IsOutputRedirected` ☰
    `KeyAvailable` ☰
    `LargestWindowHeight` ☰
    `LargestWindowWidth` ☰
    `MoveBufferArea()` ☰
    `NumberLock` ☰
    `OpenStandardError()` ☰
    `OpenStandardInput()` ☰
    `OpenStandardOutput()` ☰
    `Read()` ☰
    `ReadKey()` ☰
    `ReadLine()` ☰
    `ResetColor()` ☰
    `SetBufferSize()` ☰
    `SetCursorPosition()` ☰
    `SetError()` ☰
    `SetIn()` ☰
    `SetOut()` ☰
    `SetWindowPosition()` ☰
    `SetWindowSize()` ☰
    `Title` ☰
    `TreatControlCAsInput` ☰ See also `CancelKeyPress`
    `WindowHeight` ☰
    `WindowLeft` ☰
    `WindowTop` ☰
    `WindowWidth` ☰
    `Write()` ☰
    `WriteLine()` ☰

  table }


}

{ Encodings #dotnet-System_Console

  Input and output → development/Unicode/character-encoding[encodings] are controlled through the respective properties `InputEncoding` and `OutputEncoding` which need to be
  an instance of `→ Microsoft/dot-net/namespaces-classes/System/Text/Encoding`.

  Compare with the value of the → Windows/PowerShell/language/variable/preference/OutputEncoding[PowerShell preference variable `$OutputEncoding`].

}



sa:
  The → Windows/PowerShell/command-inventory/noun/host[PowerShell cmdLet noun `host`]

  → Windows/dirs/Windows/System32/conhost_exe[`conhost.exe`]
