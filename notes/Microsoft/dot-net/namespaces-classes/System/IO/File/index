$ System.IO.File (static class)

`System.IO.File` only has static methods and allows for generic file related operations in a file system.
-
In contrast, → Microsoft/dot-net/namespaces-classes/System/IO/FileInfo[`System.IO.FileInfo`] represents a specific file.

{ Methods

  table { ll

    `AppendAllLines()`☰
    `AppendAllLinesAsync()`☰
    `AppendAllText()`☰
    `AppendAllTextAsync()`☰
    `AppendText()`☰
    `Copy()`☰
    `Create()`☰
    `CreateSymbolicLink()`☰
    `CreateText()`☰
    `Decrypt()`☰
    `Delete()`☰
    `Encrypt()`☰
    `Exists()`☰ Checks if a file exists.
    `GetAttributes()`☰
    `GetCreationTime()`☰
    `GetCreationTimeUtc()`☰
    `GetLastAccessTime()`☰
    `GetLastAccessTimeUtc()`☰
    `GetLastWriteTime()`☰
    `GetLastWriteTimeUtc()`☰
    `Move()`☰
    `Open()`☰
    `OpenHandle()`☰
    `OpenRead()`☰
    `OpenText()`☰
    `OpenWrite()`☰
    → Microsoft/dot-net/namespaces-classes/System/IO/File/ReadAllBytes-WriteAllBytes[`ReadAllBytes()`]☰
    `ReadAllBytesAsync()`☰
    `ReadAllLines()`☰
    `ReadAllLinesAsync()`☰
    → Microsoft/dot-net/namespaces-classes/System/IO/File/ReadAllText[`ReadAllText()`] ☰ Slurps the content of an entire file.
    `ReadAllTextAsync()`☰
    `ReadLines()`☰
    `Replace()`☰
    `ResolveLinkTarget()`☰
    `SetAttributes()`☰
    `SetCreationTime()`☰
    `SetCreationTimeUtc()`☰
    `SetLastAccessTime()`☰
    `SetLastAccessTimeUtc()`☰
    `SetLastWriteTime()`☰
    `SetLastWriteTimeUtc()`☰
    → Microsoft/dot-net/namespaces-classes/System/IO/File/ReadAllBytes-WriteAllBytes[`WriteAllBytes()`] ☰
    `WriteAllBytesAsync()`☰
    `WriteAllLines()`☰
    `WriteAllLinesAsync()`☰
    `WriteAllText()`☰
    `WriteAllTextAsync()`☰

  table }

}

{ Exists #io-file-exists

  The method `Exists` checks if a file exists.

  Compare with the → Windows/PowerShell/command-inventory/noun/path/test#ps-test-path-exists[`test-path` cmdLet].

}
{ ReadAllText

  → Microsoft/dot-net/namespaces-classes/System/IO/File/ReadAllText[`ReadAllText`] slurps the content of an entire file.

}
