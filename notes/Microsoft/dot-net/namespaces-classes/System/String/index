$ System.String

A `System.String` is a (internally as UTF-16 encoded) sequence of → Microsoft/dot-net/namespaces-classes/System/Char[`System.Char`].

{ Formatting textual representations of object

  → Microsoft/dot-net/namespaces-classes/System/String/Format[`String.Format`] allows to format a textual representation of an object.

}
{ Searching for character positions in a string

  `System.String` has four methods that allow to search for the first or last position of one or more characters in a string:
    • `IndexOf()`
    • `IndexOfAny()`
    • `LastIndexOf()`
    • `LastIndexOfAny()`

}

{ Methods

  table { ll

   `Clone` ☰ Returns a reference, not a copy, of the string. Compare with `Copy` and `CopyTo`
   `Compare` ☰
   `CompareOrdinal` ☰
   `CompareTo` ☰
   `Concat` ☰
   `Contains` ☰
   `Copy` ☰  Starting with .NET 3.0, this method has the → Microsoft/dot-net/namespaces-classes/System/ObsoleteAttribute[obsolete] attribute, see → https://github.com/dotnet/runtime/issues/27515[this link].
   `CopyTo` ☰
   `Create` ☰
   `EndsWith`, `StartsWith` ☰ Checks if a string ends/starts with a given character or string.
   `EnumerateRunes` ☰ Returns a enumeration of → Microsoft/dot-net/namespaces-classes/System/Text/Rune[`System.Text.Rune`] objects.
   `Equals` ☰
   `Format` ☰ Create strings describing the values of other objets.
   `GetEnumerator` ☰ Returns a `System.CharEnumerator` object with which it is possible to iterate through the individual characters of the string.
   `GetHashCode` ☰
   `GetPinnableReference` ☰ Intended to be used by .NET compilers, not by ordinary «user code».
   `GetTypeCode` ☰ Returns the → Microsoft/dot-net/namespaces-classes/System/TypeCode[`System.TypeCode`] for strings.
   `IndexOf`, `LastIndexOf` ☰ Finds the (last) position («index») of a character or substring within a string.
   `IndexOfAny`, `LastIndexOfAny` ☰
   `Insert` ☰
   `Intern` ☰ Searches the → Microsoft/dot-net/Common-Language-Runtime#clr-intern-pool[intern pool] of the → Microsoft/dot-net/Common-Language-Runtime[CLR] for a string.
   `IsInterned` ☰
   `IsNullOrEmpty`, `IsNullOrWhiteSpace` ☰
   `Join` ☰
   `Normalize`, `IsNormalized` ☰ `Normalize()` → development/Unicode/character#unicode-normalization[normalizes the characters] in the string.
   `PadLeft`, `PadRight` ☰
   `Remove` ☰
   `Replace` ☰
   `ReplaceLineEndings` ☰
   → Microsoft/dot-net/namespaces-classes/System/String/Split[`Split`] ☰
   → Microsoft/dot-net/namespaces-classes/System/String/Substring[`Substring`] ☰
   `ToCharArray` ☰
   `ToLower`, `ToUpper` ☰
   `ToLowerInvariant` ☰
   `ToString` ☰
   `ToUpperInvariant` ☰
   `Trim`, `TrimEnd`, `TrimStart` ☰
   `TryCopyTo` ☰

  table }

}

sa:


  → Microsoft/dot-net/namespaces-classes/System/Security/SecureString[`System.Security.SecureString`]

  → Microsoft/dot-net/namespaces-classes/System/Text/StringBuilder[`System.Text.StringBuilder`]
