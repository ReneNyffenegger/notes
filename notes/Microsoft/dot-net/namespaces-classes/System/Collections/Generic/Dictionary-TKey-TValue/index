$ System.Collections.Generic.Dictionary<TKey, TValue> (class)

Note that there is no `System.Collections.Dictionary` type. However, there is a
→ Microsoft/dot-net/namespaces-classes/System/Collections/Hashtable[`System.Collections.Hashtable`] class
(which → https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md[Microsoft] does not recommand to use any longer).

{ Creating a Dictionary in PowerShell

  Most of the time, an ordinary → Windows/PowerShell/language/type/hash-table[PowerShell hashtable] (which is created with `@{…}`) is sufficient if key/value pairs need to be stored in
  PowerShell.
  -
  However, if an explicit `Dictionary<TKey, TValue>` is needed, such an object can be created like so:
code {
$dict = → Windows/PowerShell/command-inventory/noun/object/new[new-object] 'System.Collections.Generic.Dictionary[String, Int]'
$dict['four'] = 4
$dict['nine'] = 9
$dict['five'] = 5

# $dict[ 7    ] ='seven' # Error: Cannot convert value "seven" to type "System.Int32" …

echo $dict['nine']
9
code }

}
{ Iterating over a Dictionary in PowerShell

  The following example tries to demonstrate how it is possible to iterate over a `Dictionary<TKey,TValue>` in PowerShell:
  gh|.NET-API|/System/Collections/Dictionary-TKey-TValue/iterate-PS.ps1||

}
