$ System.Environment (class)
@ System.Environment

`System.Environment` allows to query information about the current environment (such as → Windows/development/environment-variables[environment variables]) and platform and manipulate these.

{ Interesting properties and Methods

  { GetEnvironmentVariable() #dotNet-System-Environment-GetEnvironmentVariable

    The following simple example tries to demonstrate how the → Windows/development/environment-variables/PATH[`PATH` environment variable] can be determined with → Windows/PowerShell:
    gh|.NET-API|/System/Environment/GetEnvironmentVariable.ps1||

  }
  { GetFolderPath()

    If `$folder` is a value of a member of the → Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[`System.Environment+SpecialFolder`] enum, the text value for this path is returned by
   `GetFolderPath($folder)`, as is demonstrated with the following → Windows/PowerShell snippet:
code {
PS C:\> [System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::UserProfile)
→ Windows/dirs/Users/username[C:\Users\Rene]
code }

  }
  { MachineName

   `MachineName` evaluates to the → Windows/networking/NetBIOS name of the local computer.

  }
  { OSVersion #System-Environment-OSVersion

   `OSVersion` returns an `→ Microsoft/dot-net/namespaces-classes/System/OperatingSystem` object.

  }
  { SetEnvironmentVariable() #dotNet-System-Environment-SetEnvironmentVariable

   `SetEnvironmentVariable` sets an → Windows/development/environment-variables[environment variable] permanently or for the current
   → Windows/development/process:
code {
[environment]::setEnvironmentVariable('USER_VAR'  , 'foo', 'user'   )
[environment]::setEnvironmentVariable('GLOBAL_VAR', 'bar', 'machine')
[environment]::setEnvironmentVariable('PROC_VAR'  , 'baz', 'process')
code }

  }
  { SystemDirectory

    The value of the property `Environment.SystemDirectory` is the name of the fully qualified *system directory*, for example → Windows/dirs/Windows/System32[`C:\Windows\System32`].

  }
  { Version

   `Version` returns a → Microsoft/dot-net/namespaces-classes/System/Version[`System.Version`] object that corresponds to the version of the → Microsoft/dot-net/Common-Language-Runtime[Common Language Runtime].

    Compare with `[→ Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/RuntimeInformation]::FrameworkDescription`

  }

}

sa:

  The two `static` properties → Microsoft/dot-net/namespaces-classes/System/Environment/Is64BitProcess-Is64BitOperatingSystem[`Is64BitOperatingSystem` and `Is64BitProcess`].

  The property `NewLine` stores the value for a → development/line-break[new line] (`"\n"` or `"\r\n"`).

  An example on how to iterate over the set of environment variables that is returned by `GetEnvironmentVariables()` is → Microsoft/dot-net/namespaces-classes/System/Collections/IDictionary#iterate-IDictionary[here].
