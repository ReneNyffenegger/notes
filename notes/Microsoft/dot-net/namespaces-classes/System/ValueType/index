$ System.ValueType (class)
@ System.ValueType

`System.ValueType` is the base class for all *value types* (as opposed to *reference types*).

When a variable with a value type is assigned to another variable, the content of the variable is copied (not a reference). Thus, unlike with reference types, after the assignment, the two variables
refer to two independent copies of the struct and can be separately modified without influencing the other variable.
-
This behaviour plays a certain role when storing value types in *collections*.

A specific kind of value type is → Microsoft/dot-net/namespaces-classes/System/Enum[`System.Enum`] (which itself allows to be derived from).

{ C-Sharp: structs

  It is not possible to create a type that *explicitly* inherits from `System.ValueType`.

  However, for example in C#, a → development/languages/C-Sharp/language/keywords/built-in-types/struct[`struct`] always implicitely derives from `System.ValueType`.
  This is demonstrated in the following example. (It also shows that structs need not
  be created with the → development/languages/C-Sharp/language/operators/new[`new` operator].

  gh|.NET-API|/System/ValueType/struct.cs||

}

sa:
  → Microsoft/dot-net/namespaces-classes/System/Nullable-T[`System.Nullable<T>`]
