$ System.Convert (class)

`System.Convert` converts between base types.

{ To… methods #System-Convert-To

  The `To…()` methods convert from a given type to a desired type.

  → Microsoft/dot-net/namespaces-classes/System/_integral-numeric-types#dotnet-int-types-convert[Converting] to an
  → Microsoft/dot-net/namespaces-classes/System/_integral-numeric-types[integral numeric type] is possible with the following methods:
   `ToByte`, `ToSByte`, `ToInt16`, `ToUInt16`, `ToInt32`, `ToUInt32`, `ToInt64` and `ToUInt64`.
  -
  Internally, these `To…()` methods call → Microsoft/dot-net/namespaces-classes/System/_integral-numeric-types#dot-net-int-Parse[`….Parse()`].

  Other conversions are possible with
   `ToBoolean`, `ToChar`, → Microsoft/dot-net/namespaces-classes/System/Convert/ToDateTime[`ToDateTime`], `ToDecimal`, `ToDouble`, → Microsoft/dot-net/namespaces-classes/System/Convert/_HexString[`ToHexString`],
   → Microsoft/dot-net/namespaces-classes/System/Convert/ToString[`ToString`],
   `ToBase64String` and `ToBase64CharArray`.

   See also the `ToX` methods found in → Microsoft/dot-net/namespaces-classes/System/BitConverter[`System.BitConverter`].
}

sa:
  → Microsoft/dot-net/namespaces-classes/System/Convert/DBNull[`System.Convert.DBNull()`]

  → Microsoft/dot-net/namespaces-classes/System/Convert/_HexString[`System.Convert.FromHexString()`] 

  → Microsoft/dot-net/namespaces-classes/System/String/ToCharArray[`System.String.ToCharArray()`]
