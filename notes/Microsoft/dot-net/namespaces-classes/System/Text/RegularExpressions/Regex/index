$ System.Text.RegularExpressions.Regex (class)
@ System.Text.RegularExpressions.Regex

The class `System.Text.RegularExpressions.Regex` is the → development/regular-expressions[regular expression] engine of → Microsoft/dot-net.

{ (Public) fields, properties and methods

  table { ll

    `CacheSize` ☰
    `CompileToAssembly()` ☰
    `Escape()` ☰
    `GetGroupNames()` ☰
    `GetGroupNumbers()` ☰
    `GroupNameFromNumber()` ☰
    `GroupNumberFromName()` ☰
    `InfiniteMatchTimeout` ☰
    `InitializeReferences()` ☰
    `IsMatch()` ☰
    `Match()` ☰ Returns a → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/Match[`System.Text.RegularExpressions.Match`] object. Some overloads of `Match()` are `static`.
    → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/Regex/Matches[`Matches()`] ☰ Returns a → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/MatchCollection[`System.Text.RegularExpressions.MatchCollection`] object.
    `MatchTimeout` ☰ 
    `Options` ☰ Returns a → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/RegexOptions[`System.Text.RegularExpressions.RegexOptions`] enum.
    → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/Regex/Replace[`Replace()`] ☰ Replaces a regexp-pattern with a string. Some overloads of `Replace()` are `static`.
    `RightToLeft` ☰
    `Split()` ☰
    `ToString()` ☰
    `Unescape()` ☰

  table }

}

{ PowerShell

  → Windows/PowerShell has its own → Windows/PowerShell/language/object/type/accelerators[type accelerator] for this type: `[regex]`. 

  gh|.NET-API|/System/Text/RegularExpressions/Regex/script.ps1||

  { Poor man's attempt at finding SQL table names in an SQL file

code {
[string] $file = [IO.File]::ReadAllText('c:\users\rene\x.sql')
$re = [regex] '(?ism)(from|join)\s+(\S+)'

$tables = [regex]::Matches($file, $re)

foreach ($table in $tables) {
   "$($table.groups[2].value)"
}
code }

  }

}
