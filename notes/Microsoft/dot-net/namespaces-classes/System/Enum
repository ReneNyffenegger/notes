$ System.Enum (class)

`System.Enum` is the base class for enumerations.

{ Iterating over enumeration values in PowerShell

 `System.Enum` has the static method `GetValues()` that returns an array of the values of a given enumeration.

  The following snippets try to demonstrate how it is possible to iterate over such an array and display the values (integer and string) in → Windows/PowerShell:
code {
PS C:\> $enumValues = [System.Enum]::GetValues('→ Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[System.Environment+SpecialFolder]')
PS C:\> $enumValues.GetType().FullName
System.Environment+SpecialFolder[]
PS C:\> $enumValues.length
47
PS C:\> $enumValues[0].GetType().FullName
System.Environment+SpecialFolder
PS C:\> $enumValues[42].value__
55
PS C:\> $enumValues[42].ToString()
CommonVideos
$enumValues | → Windows/PowerShell/command-inventory/noun/object/forEach[foreach-object]  {
  '{0,2} {1,-30} {2}' -f $_.value__, $_.ToString(), [Environment]::GetFolderPath($_)
}
 0 Desktop                        → Windows/dirs/Users/username/Desktop[C:\Users\Rene\Desktop]
 2 Programs                       → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Start-Menu/Programs[C:\Users\Rene\AppData\Roaming\Microsoft\Windows\Start Menu\Programs]
 5 MyDocuments                    → Windows/dirs/Users/username/Documents[C:\Users\Rene\Documents]
 …
code }

}

sa:
  The → Windows/PowerShell/language/object/type/accelerators[PowerShell type accelerator] for `System.Enum` is `[enum]`.
