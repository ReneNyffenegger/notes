$ System.Threading.Thread (class)

`System.Thread.Thread` creates and controls threads.

{ Properties and methods

  table { ll

    `Abort()` ☰
    `AllocateDataSlot()` ☰
    `AllocateNamedDataSlot()` ☰
    `ApartmentState` ☰ *Deprecated* in favor of `GetApartmentState()`, `SetApartmentState()` and `TrySetApartmentState()`. The apartment state of the thread (→ Microsoft/dot-net/namespaces-classes/System/Threading/ApartmentState[`System.Threading.ApartmentState`]).
    `BeginCriticalRegion()` ☰
    `BeginThreadAffinity()` ☰
    `CurrentCulture` ☰
    `CurrentPrincipal` ☰
    `CurrentThread` ☰ A `static` method that returns the instance (i.e. a `System.Threading.Thread` object) that represents the currently running thread.
    `CurrentUICulture` ☰
    `DisableComObjectEagerCleanup()` ☰
    `EndCriticalRegion()` ☰
    `EndThreadAffinity()` ☰
    `ExecutionContext` ☰
    `Finalize()` ☰
    `FreeNamedDataSlot()` ☰
    `GetApartmentState()` ☰
    `GetCompressedStack()` ☰
    `GetCurrentProcessorId()` ☰
    `GetData()` ☰
    `GetDomain()` ☰
    `GetDomainID()` ☰
    `GetHashCode()` ☰
    `GetNamedDataSlot()` ☰
    `Interrupt()` ☰
    `IsAlive` ☰
    `IsBackground` ☰
    `IsThreadPoolThread` ☰
    `Join()` ☰
    `ManagedThreadId` ☰
    `MemoryBarrier()` ☰
    `Name` ☰
    `Priority` ☰
    `ResetAbort()` ☰
    `Resume()` ☰
    `SetApartmentState()` ☰
    `SetCompressedStack()` ☰
    `SetData()` ☰
    `Sleep()` ☰
    `SpinWait()` ☰
    `Start()` ☰
    `Suspend()` ☰
    `ThreadState` ☰
    `TrySetApartmentState()` ☰
    `UnsafeStart()` ☰
    `VolatileRead()` ☰
    `VolatileWrite()` ☰
    `Yield()` ☰

  table }

}

sa:

  The → Microsoft/dot-net/namespaces-classes/System/Threading/Thread/CurrentPrincipal[`CurrentPrincipal`] property of `Thread`.

  → Windows/development/process/thread[Threads]
