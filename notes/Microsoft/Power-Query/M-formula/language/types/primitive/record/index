$ Power Query M formula language, primitive types: record
@ record

A *record* stores name-value pairs.

{ Simple example

  gh|about-Power-Query-Formula-M|/language/types/primitive/record/simple.M||

  When evaluated in → Microsoft/Office/Excel, for example with → Microsoft/Power-Query/M-formula/evaluation/readFormulaFromFile[this VBA code], this formula evaluates to:
  gh|about-Power-Query-Formula-M|/language/types/primitive/record/img/simple.png||

  Note that Excel for a reason chooses to display the date type as number rather than formatted as date.

}
{ Automatic resolving of dependencies among record members #formula-m-record-dependencies

  It is possible to refer to values of other fields in the same record when assigning a value to a field. Formula M will automatically resolve dependencies. (Compare with
  → Microsoft/Power-Query/M-formula/language/expressions/let#formula-m-let-dependencies[automatic resolving of dependencies in `let … in` expressions]).

  gh|about-Power-Query-Formula-M|/language/types/primitive/record/field-dependency.M||

  When evaluated, this code produces:
  gh|about-Power-Query-Formula-M|/language/types/primitive/record/img/field-dependency.png||

}
{ Get value of a given field (field access) #formula-m-record-field-access

  If `R` is a record, the expression `R[fieldName]` gets the value of the record's field whose name is `fieldName`.

  The following example evaluates to `"Hello world"`:
  gh|about-Power-Query-Formula-M|/language/types/primitive/record/get-field.M||

}
{ The underscore as default record when accessing a field #formula-m-record-underscore

  The expression `[FLD]` is a shorthand form of `_[FLD]`. The following code evaluates to `"Hello world"`:
  gh|about-Power-Query-Formula-M|/language/types/primitive/record/underscore.M||

  This shorthand notation es especially useful together with → Microsoft/Power-Query/M-formula/language/expressions/each[`each` expressions].

}
