$ Power Query M formula language: let expression
@ let expression

{ The most simple let expression

  Arguably, the most simple *let expression* is
  gh|about-Power-Query-Formula-M|/language/expressions/let/simple.M||

  When evaluated in → Microsoft/Office/Excel, for example with → Microsoft/Power-Query/M-formula/evaluation/readFormulaFromFile[this VBA code], this formula evaluates to:
  gh|about-Power-Query-Formula-M|/language/expressions/let/img/simple.png||

}
{ Using a variable list

  It's possible to define variables in between the `let` and the `in` → Microsoft/Power-Query/M-formula/language/keywords[keywords]. The value of these variables
  can then be used in the part after the `in`.

  gh|about-Power-Query-Formula-M|/language/expressions/let/variable-list.M||

  This code produces the same result as the «most simple let expression» above.

}
{ Automatic resolving of dependencies in the variable list #formula-m-let-dependencies

  When a let expression is evaluated, the dependencies between variables in the variable list are resolved automatically. In the following example, `bar` is assigned first, then `baz` followed by `foo` calculated, resulting in 42.
  gh|about-Power-Query-Formula-M|/language/expressions/let/variable-dependencies.M||

  Compare with → Microsoft/Power-Query/M-formula/language/types/primitive/record#formula-m-record-dependencies[automatic resolving of dependencies in records].

}
{ Nested let expressions

  let expressions can be nested. The following expression results in 6:
  gh|about-Power-Query-Formula-M|/language/expressions/let/nested.M||

}
