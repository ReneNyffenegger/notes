$ SVG elements

table { ll
  `<a>` ☰ Hyperlink to web pages, files, locations in the same page, email addresses, or any other URL.
  `<altGlyph>` ☰
  `<altGlyphDef>` ☰
  `<altGlyphItem>` ☰
  `<animate>` ☰
  `<animateMotion>` ☰
  `<animateTransform>` ☰
  `<circle>` ☰
  `<clipPath>` ☰
  `<color-profile>` ☰
  `<cursor>` ☰ Specifies the shape of the mouse cursor when the mouse pointer is over an element.  Behave like the CSS `cursor` attribute.
  `<defs>` ☰ Graphic «templates» which can be rendered multiple times with `<use>`. See also `<pattern>`
  `<desc>` ☰
  `<ellipse>` ☰
  `<fe…>` ☰ `<feBlend>`, `<feColorMatrix>`, `<feComponentTransfer>`, `<feComposite>`, `<feConvolveMatrix>`, `<feDiffuseLighting>`, `<feDisplacementMap>`, `<feDistantLight>`, `<feFlood>`, `<feFuncA>`, `<feFuncB>`, `<feFuncG>`, `<feFuncR>`, `<feGaussianBlur>`, `<feImage>`, `<feMerge>`, `<feMergeNode>`, `<feMorphology>`, `<feOffset>`, `<fePointLight>`, `<feSpecularLighting>`, `<feSpotLight>`, `<feTile>`, `<feTurbulence>`
  `<filter>` ☰
  `<font…>` ☰ Font related elements are *depracted* (`<font>`, `<font-face>`, `<font-face-format>`, `<font-face-name>`, `<font-face-src>`, `<font-face-uri>`)
  `<foreignObject>` ☰ Includes elements from a different XML namespace. For SVG documents rendered in a → development/web/browser, this is typically (X)HTML.
  `<g>` ☰ A *container* to group multiple SVG elements. `<g>` is especially useful when using `transform`.
  `<glyph>` ☰ *Deprecated*
  `<glyphRef>` ☰ *Deprecated*
  `<hkern>`, `<vkern>` ☰ *Deprecated*
  `<image>` ☰ Renders images (both raster and SVG) into the current SVG document.
  `<line>` ☰
  `<linearGradient>` ☰
  `<marker>` ☰ Defines *arrowheads* for `<path>`, `<line>`, `<polyline>`, `<polygone>`. See also the `marker-start`, `marker-mid` and `marker-end` properties.
  `<mask>` ☰ Define an *alpha* mask
  `<metadata>` ☰
  `<missing-glyph>` ☰ *Deprecated*
  `<mpath>` ☰
  `<path>` ☰
  `<pattern>` ☰ Repeat a graphical object in a given x and y intervals (thus tiling the pattern). See also `<defs>` and `<use>`
  `<polygon>` ☰
  `<polyline>` ☰
  `<radialGradient>` ☰
  `<rect>` ☰
  `<script>` ☰ Adds scripts to an SVG document. Similar to the HTML `<script>` element, but uses `href` instead of `src`.
  `<set>` ☰
  `<stop>` ☰
  `<style>` ☰ Allows to embed style sheets directly into an SVG document.
  `<svg>` ☰ The «root» container of an SVG document. It defines a new coordinate system and a *viewport*. `<svg>` can be embedded into a HTML or another SVG document.
  `<switch>` ☰ Evaluates any `requiredFeatures`, `requiredExtensions` and `systemLanguage` attributes on its direct child elements in order, and then renders the first child where these attributes evaluate to true.
  `<symbol>` ☰ Defines templates which then can be rendered with `<use>`. Compare with `<defs>`
  `<text>` ☰
  `<textPath>` ☰
  `<title>` ☰
  `<tref>` ☰
  `<tspan>` ☰
  `<use>` ☰ Render a graphical element that is defined in the SVG document (see also `<defs>`, `<pattern>` and `<symbol>`)
  `<view>` ☰

table }



{ svg - the root element

  gh|about-svg|/elements/svg.svg||

}
{ circle #circle

  gh|about-svg|/elements/circle.svg||

  See also Perl module → development/languages/Perl/modules/SVG[SVG], → development/languages/Perl/modules/SVG/index#circle[circle.pl].

}
{ line #line

  gh|about-svg|/elements/line.svg||

  See also → design/graphic/svg/examples/javascript/line[Dynamically create an svg line with JavaScript].

}
{ polyline #polyline

gh|about-svg|/elements/polyline.svg||

  See also Perl module → development/languages/Perl/modules/SVG[SVG]: → development/languages/Perl/modules/SVG/index#polyline[polyline.pl].

}
{ rect

gh|about-svg|/elements/rect.svg||

}

sa:

  The combination of → design/graphic/svg/elements/text/style[`<style>` and `<text>`].

  → design/graphic/svg
