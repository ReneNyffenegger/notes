
Image attributes such as their size can be changed with `convert`.

Note, → Windows comes with a → Windows/dirs/Windows/System32/convert_exe[`convert.exe`]. In order to use Image Magick's `convert`, either the full path to Image Magick's `convert` needs to be entered or the
→ Windows/development/environment-variables/PATH[`PATH` environment variable] needs to have the ImageMagick installation directory *before* the Windows System32 directory.


{ Resize an image

  Change width to 400 pixels:
code {
convert in.jpg -resize 400 out.jpg
code }

  Change height to 300 pixels:
code {
convert in.jpg -resize x300 out.jpg
code }

  At most 400x300, keeping aspect ratio
code {
convert in.jpg -resize 400x300 out.jpg
code }

  Force specific size
code {
convert in.jpg -resize 400x300! out.jpg
code }

}

{ Change type (jpg -> png etc)

code {
convert in.png -format jpg out.jpg
code }

  TODO: Apparently, → http://www.ece.uvic.ca/~frodo/jasper/[jasper] comes with a program to convert between types as well.

}

{ Change quality (loss)

code {
convert in.jpg -quality 85 out.jpg
code }

}

{ Keep file (don't create another file)

  Use `mogrify` instead of `convert` to keep the filename:
code {
mogrify -resize 400x300! file.png 
code }
}

{ Information (dimensions...) about an image

code {
identify image.png
code }

  `identify` can be given a format string (much like development/languages/printf[printf]) where `%…` are replaced with the values of attributes and properties of an image.
  -
  The following example prints width, height, and x and y resolutino of an image:
code {
identify -format "The image is %w by %h pixels, its x resolution is %x, and its y resolution is %y" image.png
code }

}
{ Screenshots #image-magick-screenshots

`import -window root screenshot.jpg`

Without the -window option, `import` allows to select a window or an aribtrary region interactively.

  See also Perl modules → development/languages/Perl/modules/Win32/Screenshot[Win32::Screenshot] and
  → development/languages/Perl/modules/Imager/Screenshot[ImageMagick::Screenshot]

}
{ TODO

  Do these commands come with a *graphicsmagick* alternative that can be enabled(?) by prepending these commands with `gm`?

}
