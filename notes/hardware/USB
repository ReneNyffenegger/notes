
{ Eject a USB drive in Windows #eject-usb-windows

  With → Windows/PowerShell, a USB drive (whose drive letter is assigned to `D:`) can be ejected like so
code {
PS C:\> $shl = new-object -comObject shell.application
PS C:\> $shl.namespace([→ Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[System.Environment+SpecialFolder]]::MyComputer.value__).parseName('E:').invokeVerb('Eject')
code }

  The value of `[→ Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[System.Environment+SpecialFolder]]::MyComputer.value__` is 17.

  A → hardware/USB drive can also be ejected with the → Windows/dirs/Windows/System32/hotplug_dll[«Safely Remove Hardware» applet `hotplug.dll`].

  Another possibility is to use the → Windows/dirs/Windows/System32/diskpart_exe#diskpart-remove-letter[`remove letter=X`] command in
  → Windows/dirs/Windows/System32/diskpart_exe[`diskpart.exe`].

  See also
    • → development/tools/scripts/personal/ejusb_bat[`ejusb.bat`]
    • → Windows/PowerShell/examples/Problem-Ejecting-USB-Mass-Storage-Device

}


sa:

  → Linux/shell/commands/lsusb[`lsusb`],
  → Linux/shell/commands/usb-devices[`usb-devices`]

  → Linux/fhs/sys/kernel/debug/usb/devices[`/sys/kernel/debug/usb/devices`]

  → Linux/fhs/sys/bus/usb/devices/[`/sys/bus/usb/devices`]

  → Linux/fhs/usr/share/hwdata[`/usr/share/hwdata/usb.ids`]

  → Windows/PowerShell/examples/Problem-Ejecting-USB-Mass-Storage-Device

  → hardware/PCI

  → Linux/fhs/dev/bus/usb

  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Tools/arch/usbview_exe[`usbview.exe`]
