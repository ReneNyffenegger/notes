abbr: GUID Partition Table

→ hardware/UEFI/index[UEFI] needs a GPT, it does not work with an MBR-partitioned disk.

{ Fixing problems of MBR

  GPT fixes two problems of → hardware/harddisk/MBR[MBR]:
    • It's not limited to 2 TiB
    • → hardware/UEFI[UEFI] does not boot from an MBR disk.


}
{ Layout on harddisk

  A GPT disk starts with a 512 byte large *protective MBR* (where an ordinary → hardware/harddisk/MBR[MBR] would be) to to prevent MBR-only partitioning tools from overwriting GPT disks.
  -
  This protective MBR contains an entry to an inexisting 2 TiB large partition (with code `EE00`). Thas, the MBR-only partitioning tool thinks the entire disk is occupied.

When executing `gdisk /dev/sda`, it might print (note the `Found valid GPT with protective MBR`):
code {
GPT fdisk (gdisk) version 1.0.0

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): 
code }

The GPT is (usually?) in the 2nd sector (LBA 1).

The first → hardware/harddisk/partition (usually) starts with sector 2048.

}
{ ESP

  A GPT formatted harddisk must have one → hardware/UEFI/ESP[EFI system partition (ESP)].

}

{ Partition type

  With →Linux/shell/commands/parted: `parted /dev/disk set partition-number bios_grub on`
  
  With → Linux/shell/commands/gdisk: use partition type `0xEF02`.
  
  Otherwise, set GUID to `21686148-6449-6e6f-744e656564454649`.

}

sa:

  → Linux/shell/commands/sgdisk

links:

  → http://www.rodsbooks.com/gdisk/whatsgpt.html[What's a GPT?].

