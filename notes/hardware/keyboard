{ Scancodes, keycodes and keysyms

  { Scancode #scancode

    The keyboard sends a series of *scancodes* for each key press and release to the kernel.

    In a → development/misc/virtual-console, these scancodes can be displayed with →Linux/shell/commands/showkey[`showkey -s`].

    sa: → Linux/X/XKB/database#keycodes[XKB database: keycodes]

  }

  { Keycode #keycode

    The kernel parses the stream of scancodes and maps them to a series of *keycodes* (key press/release events).
    -
    → Linux/shell/commands/showkey[`showkey`] apparently is also able to display those keycodes.

    The mapping can be viewed with → Linux/shell/commands/getkeycodes[`getkeycodes`].


    ? In Linux, this seems to happen in → Linux/kernel/source/drivers/tty/vt/keyboard_c.

    → Linux/X[X] produces a keycode when a key is pressed and another when the key is released again.


  }

  { Keysym #keysym

    Depending on which →#modifier-keys are pressed, the keycodes are mapped to keysyms.

    A *keysym* represents a keyboard action. Each key can be bound to up to 256 keysyms (see → Linux/kernel/keymap#keycode-definition[keymap - keycode definition])
    -
    Such actions can be
      • outputting character codes
      • character sequences
      • switching consoles
      • switching → Linux/kernel/keymap[keymaps]
      • booting the machine
      • etc
    The action chosen is dependent on the →#modifier-keys[modifier keys] pressed concurrently with the key.
    -
    The complete list can be queried with `→ Linux/shell/commands/dumpkeys -l`

    In X, this is done by →Linux/shell/commands/xmodmap.

    { X11 #keysym-x11

      The X11 standard defines keysym codes. these codes are 29 bit integer values (that identify
      characters of functions for a keyboard-key).

      These X11 keysym codes have (mnemonic) names which are found in `→ Linux/fhs/usr/include/X11/keysymdef_h[X11/keysymdef.h]` (without XK_ prefix),
      and is possibly supplemented by → Linux/fhs/usr/share/X11/XKeysymDB.


    }

  }

}

{ Modifier keys #modifier-keys

  Keys such as *shift*, *ctrl*, *alt* (etc?) are called *modifier keys*. These are used to change the meaning of
  other keys.

  → Linux/X/XKB recognizes 8 modifier keys: *Control*, *Shift*, *Lock*, *Mod1*, *Mod2*, *Mod3*, *Mod4* and *Mod5*. The *Alt* key(s) are mapped to one (or more?) of the *Mod* keys.
    

  Modifier keys can be combined (alt+ctrl etc).

}

{ Change keyboard leyout

  { Windows

    → https://github.com/ReneNyffenegger/swap-keys

  }

  { Linux
   
    The language keyboard layout files are under → Linux/fhs/usr/share/X11/xkb/symbols.

    { See also

      → Linux/fhs/etc/default/keyboard,
      → Linux/keyboard/layout


    }

  }

}

{ Keyboard modifiers #keyboard-modifiers

  Shift, AltGr, Control, Alt, ShiftL, ShiftR, CtrlL, CtrlR, CapsShift

}

sa:
  → Linux/kernel/keymap
