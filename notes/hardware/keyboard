{ Scancodes, keycodes and keysyms

  { Scancode #scancode

    The keyboard sends *scancodes* to the kernel.

    In a → development/misc/virtual-console, the scancodes can be displayed with →Linux/shell/commands/showkey.

  }

  { Keycode #keycode

    The scancodes are mapped to *keycodes*.

    ? In Linux, this seems to happen in → Linux/kernel/source/drivers/tty/vt/keyboard_c.

  }

  { Keysym #keysym

    Depending on which →#modifier-keys are pressed, the keycodes are mapped to keysyms.

    A *keysym* represents a keyboard action. Each key can be bound to up to 256 keysyms (see → Linux/kernel/keymap#keycode-definition[keymap - keycode definition])
    -
    Such actions can be
      • outputting character codes
      • character sequences
      • switching consoles
      • switching → Linux/kernel/keymap[keymaps]
      • booting the machine
      • etc
    The action chosen is dependent on the →#modifier-keys[modifier keys] pressed concurrently with the key.
    -
    The complete list can be queried with `→ Linux/shell/commands/dumpkeys -l`

    In X, this is done by →Linux/shell/commands/xmodmap.

    { X11 #keysym-x11

      The X11 standard defines keysym codes. these codes are 29 bit integer values (that identify
      characters of functions for a keyboard-key).

      These X11 keysym codes (along with mnemonic macro names) is found in `→ Linux/fhs/usr/include/X11/keysymdef_h[X11/keysymdef.h]` (without XK_ prefix).

    }

  }

}

{ Modifyer keys #modifier-keys

  Keys such as *shift*, *ctrl*, *alt* (etc?) are called *modifier keys*.

}

{ Change keyboard leyout

  { Windows

    → https://github.com/ReneNyffenegger/swap-keys

  }

  { Linux
   
    The language keyboard layout files are under → Linux/fhs/usr/share/X11/xkb/symbols.

    { See also

      → Linux/fhs/etc/default/keyboard

    }

  }

}

{ Keyboard modifiers #keyboard-modifiers

  Shift, AltGr, Control, Alt, ShiftL, ShiftR, CtrlL, CtrlR, CapsShift

}

sa:
  → Linux/kernel/keymap
