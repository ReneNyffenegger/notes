abbr: Unified Extensible Firmware Interface
wp: Unified_Extensible_Firmware_Interface

The predecessor of UEFI is → hardware/BIOS/index.

UEFI is essentially EFI 2.0.

UEFI requires 64 bit hardware.

When the computer is started up, the UEFI firmware loads files stored on the →ESP to start the installed operating system(s).

{ Runtime variables #runtime-variables

  UEFI can be configured by the operation systems through *runtime variables*.

  They can be manipulated via → Linux/fhs/sys/firmware/efi/efivars.

  `→ Linux/shell/commands/efivar -l`

}

{ Required kernel config options #required-kernel-config-options

These are required → Linux/kernel/compilation#config-options[kernel config options]:

`CONFIG_RELOCATABLE=y`

`CONFIG_EFI=y`

`CONFIG_EFI_STUB=y`

`CONFIG_FB_EFI=y`

`CONFIG_FRAMEBUFFER_CONSOLE=y`

`CONFIG_EFIVAR_FS=y` seems to be necessary to manipulate →#runtime-variables.

`CONFIG_EFI_VARS=n`

`CONFIG_EFI_PARTITION=y`

See https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/plain/Documentation/x86/x86_64/uefi.txt

}

{ Links

  → Linux/shell/commands/efivar, → ESP, → Linux/fhs/sys/firmware/efi/index

}
