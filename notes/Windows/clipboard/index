$ Windows Clipboard
@ clipboard

{ Clipboard history #win-clipboard-history

  With → Windows/versions/10[Windows 10], build 17666, → Windows comes with the ability to historize items from the Clipboard.

  This «feature» needs to be enabled, for example with → Windows/PowerShell:
  gh|about-Windows-Registry|/HKEY_CURRENT_USER/Software/Microsoft/Clipboard/enable-clipboard-history.ps1||

  After history has been enabled, the historized items can be accessed with the `Win+v` → Windows/keyboard-shortcuts[shortcut].

}
{ Accessing the clipboard from the command line

  → Windows/dirs/Windows/System32/clip_exe[`clip.exe`] allows to put text into the clipboard in the command line (→ Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] or → Windows/PowerShell).

  The specific → Windows/PowerShell commands `set-` and `get-clipboard` allow to read and write into the clipboard:
code {
set-clipboard 'some text'
get-clipboard
code }

}

sa:

  The → Windows/PowerShell cmdLet nouns → Windows/PowerShell/command-inventory/noun/clipboard[`clipboard`] and `clipboardText`.

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/Windows/Forms/Clipboard[`System.Windows.Forms.Clipboard`]

  → Windows/development/COM/Useful-object-libraries/Microsoft-HTML-Object-Library#mshtml-clipboard[Accessing the clipboard with VBScript and MSHTML].

  Using → development/languages/VBA[Visual Basic for Applications] and the → development/languages/VBA/Win-API[WinAPI] to → development/languages/VBA/Win-API/examples/clipboard[put text into the Clipboard].

  → Windows/registry/tree-structure/key[Registry key] → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Clipboard[`HKEY_CURRENT_USER\Software\Microsoft\Clipboard`]

  → development/languages/Perl module → development/languages/Perl/modules/Win32/Clipboard[`Win32::Clipboard`]

  The → development/tools/scripts/personal/pc_bat[`pc.bat` batch file] which writes the current working directory into the → Windows/clipboard[clipboard].
