$ After installing Windows
-

{ Change execution policy of PowerShell

  Change the value of `ExecutionPolicy` under
  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/PowerShell/1/ShellIds/Microsoft_PowerShell[`HKEY_CURRENT_USER\Software\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell`]
  in order to be able to run → Windows/PowerShell[PowerShell] scripts.

}
{ Create bin directory

  Create a `bin` directory under → Windows/dirs/Users/username[`%UserProfile%`] to store execetables and scripts so that they can be called from the command line (such as → Windows/cmd-exe[cmd.exe] or PowerShell).
  -
  With → Windows/PowerShell[PowerShell]:
code {
$binPath = "$env:userprofile\bin"
mkdir $binPath
code }

  Add the newly created directory to the `PATH` → development/environment-variable[environment variable]:
code {
$userPath = [environment]::getEnvironmentVariable("PATH", "user"    )
[environment]::setEnvironmentVariable("PATH", "$binPath;$userPath", "user") 
code }


}
{ Download Sysinternal tools

Install → https://docs.microsoft.com/en-us/sysinternals/downloads[Sysinternals Utilities] such as
  → https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk[AccessChk],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/accessenum[AccessEnum],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/diskmon[DiskMon],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns[Autoruns],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/procmon[Process Monitor],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/process-explorer[Process Explorer],
  → https://docs.microsoft.com/en-us/sysinternals/downloads/handle[Handle] …

  The tools are downloaded into the `$binPath` directory (thus the variable must point to a valid directory).

code {
[net.servicePointManager]::securityProtocol = [net.securityProtocolType]::Tls12
$ua = new-object system.net.webClient
$ua.downloadFile("https://live.sysinternals.com/accesschk64.exe"     , "$binPath\accesschk64.exe"     )
$ua.downloadFile("https://live.sysinternals.com/AccessEnum.exe"      , "$binPath\AccessEnum.exe"      )
$ua.downloadFile("https://live.sysinternals.com/Autoruns64.exe"      , "$binPath\Autoruns64.exe"      )
$ua.downloadFile("https://live.sysinternals.com/Autoruns64.dll"      , "$binPath\Autoruns64.dll"      )
$ua.downloadFile("https://live.sysinternals.com/Bginfo64.exe"        , "$binPath\Bginfo64.exe"        )
$ua.downloadFile("https://live.sysinternals.com/Coreinfo.exe"        , "$binPath\Coreinfo.exe"        )
$ua.downloadFile("https://live.sysinternals.com/Diskmon.exe"         , "$binPath\Dismon.exe"          )
$ua.downloadFile("https://live.sysinternals.com/handle64.exe"        , "$binPath\handle64.exe"        )
$ua.downloadFile("https://live.sysinternals.com/hex2dec64.exe"       , "$binPath\hex2dec64.exe"       )
$ua.downloadFile("https://live.sysinternals.com/Listdlls.exe"        , "$binPath\Listdlls.exe"        )
$ua.downloadFile("https://live.sysinternals.com/logonsessions64.exe" , "$binPath\logonsessions64.exe" )
$ua.downloadFile("https://live.sysinternals.com/ntfsinfo64.exe"      , "$binPath\ntfsinfo64.exe"      )
$ua.downloadFile("https://live.sysinternals.com/procexp64.exe"       , "$binPath\procexp64.exe"       )
$ua.downloadFile("https://live.sysinternals.com/Procmon64.exe"       , "$binPath\Procmon64.exe"       )
$ua.downloadFile("https://live.sysinternals.com/PsGetsid64.exe"      , "$binPath\PsGetsid64.exe"      )
$ua.downloadFile("https://live.sysinternals.com/PsInfo64.exe"        , "$binPath\PsInfo64.exe"        )
$ua.downloadFile("https://live.sysinternals.com/pskill64.exe"        , "$binPath\pskill64.exe"        )
$ua.downloadFile("https://live.sysinternals.com/pslist64.exe"        , "$binPath\pslist64.exe"        )
$ua.downloadFile("https://live.sysinternals.com/pspasswd64.exe"      , "$binPath\pspasswd64.exe"      )
$ua.downloadFile("https://live.sysinternals.com/PsService64.exe"     , "$binPath\PsService64.exe"     )
$ua.downloadFile("https://live.sysinternals.com/RAMMap.exe"          , "$binPath\RAMMap.exe"          )
$ua.downloadFile("https://live.sysinternals.com/regjump.exe"         , "$binPath\regjump.exe"         )
$ua.downloadFile("https://live.sysinternals.com/RootkitRevealer.exe" , "$binPath\RootkitRevealer.exe" )
$ua.downloadFile("https://live.sysinternals.com/ShellRunas.exe"      , "$binPath\ShellRunas.exe"      )
$ua.downloadFile("https://live.sysinternals.com/strings.exe"         , "$binPath\strings.exe"         )
$ua.downloadFile("https://live.sysinternals.com/Tcpview.exe"         , "$binPath\Tcpview.exe"         )
$ua.downloadFile("https://live.sysinternals.com/Vmmap.exe"           , "$binPath\Vmmap.exe"           )
$ua.downloadFile("https://live.sysinternals.com/whois64.exe"         , "$binPath\whois64.exe"         )
$ua.downloadFile("https://live.sysinternals.com/Winobj.exe"          , "$binPath\Winobj.exe"          )
$ua.downloadFile("https://live.sysinternals.com/ZoomIt.exe"          , "$binPath\ZoomIt.exe"          )
code }

}

{ TODO

  Activate and/or enable the administrator → Windows/user-account[account] and assign a password
code {
c:\> → Windows/cmd-exe/commands/net/user[net user] administrator /active:yes
c:\> → Windows/cmd-exe/commands/net/user[net user] administrator MYSECRETPASSWORD
code }

  Copy → https://github.com/ReneNyffenegger/scripts-and-utilities/blob/master/profile.ps1[`profile.ps`] to profile path `$profile`.

  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Explorer/Advanced#reg-show-hidden-files-and-extensions

  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Internet-Explorer/Main#reg-iexplorer-change-start-page[Changing the start page] of
  → development/web/browser/Internet-Explorer[Internet Explorer] (respectively
  → Windows/registry/tree/HKEY_CLASSES_ROOT/Local-Settings/Software/Microsoft/Windows/CurrentVersion/AppContainer/Storage/microsoft-microsoftedge_8wekyb3d8bbwe/MicrosoftEdge/Main#reg-edge-startpage[that of Edge]).



  Remove unnecessary directories under → Windows/dirs/Users/username[`%UserProfile%'].

Activate Windows


→ Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/FileSystem#reg-long-paths[Enable long file paths]

Swap keys


Install → development/vim

→ Windows/cmd-exe[cmd.exe]: check values under → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Command-Processor[`HKEY_CURRENT_USER\Software\Microsoft\Command Processor`], particularly
`CompletionChar`, `PathCompletionChar` and `EnableExtensions`.

Install → development/version-control-systems/git[git]

Install → https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/[bash]


}
