
{ Directories are just a special type of files

  Internally, NTFS treats folders as a special type of file.

}
{ Link types #ntfs-links

  NTFS features three link types:
    • Hard links
    • Symbolic links
    • Junctions (aka soft link)

  It might be argued that `.lnk` and `.url` files are also a kind of links.

  In → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`], a links can be created with created with → Windows/dirs/Windows/System32/cmd_exe/commands/mklink[`mklink`].

  { Hard link

    The *same file* is referenced by more than one path.

    Hard links are only possible *within* the same drive.

    After modifying a hard linked file, its size information and attribute information is only updated for for the path that was used to modify the file.

  }
  { Symbolic links #ntfs-symlinks

    A symbolic link (aka symlink) is essentially a pointer to a file or a directory

    In → Windows/PowerShell, a symbolic link can be created with the → Windows/PowerShell/command-inventory/noun/item/new[`new-item … -itemType symbolicLink` cmdLet].

    Administrator rights are required to create a symbolic link unless Windows is put into → Windows/development/developer-mode[developer mode].

    NTFS has symlinks since → Windows/versions[Windows Vista].

    Apparently, symbolic links are → Windows/kernel/objects.

  }
  { Junctions

    Junctions are similar to hard links, but operate on directories. Unlike hard links, Junctions can cross volume boundaries (but not to remote shares).

  }

}
{ Forks (Alternate Data Streams)

  A file can have alternate data streams.

}
{ Journalling

  NTFS is a journalled file system.

}

sa:
  → Windows/file-system

  → Windows/dirs/Windows/System32/chkntfs_exe[`chkntfs.exe`]
