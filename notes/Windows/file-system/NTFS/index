
NTFS superseded → Linux/filesystem/filesystems#fs-fat[FAT] as preferred file system with Windows NT/Windows XP.
-
A FAT file system can be converted to NTFS with the command line tool `→ Windows/dirs/Windows/System32/convert_exe`.

{ Directories are just a special type of files

  Internally, NTFS treats folders as a special type of file.

}
{ Link types #ntfs-links

  NTFS features three link types:
    • Hard links
    • Symbolic links
    • Junctions (aka soft link)

  It might be argued that `.lnk` and `.url` files are also a kind of links.

  In → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`], a links can be created with created with → Windows/dirs/Windows/System32/cmd_exe/commands/mklink[`mklink`].

  { Hard link

    The *same file* is referenced by more than one path.

    Hard links are only possible *within* the same drive.

    After modifying a hard linked file, its size information and attribute information is only updated for for the path that was used to modify the file.

  }
  { Symbolic links #ntfs-symlinks

    A symbolic link (aka symlink) is essentially a pointer to a file or a directory

    In → Windows/PowerShell, a symbolic link can be created with the → Windows/PowerShell/command-inventory/noun/item/new[`new-item … -itemType symbolicLink` cmdLet].

    Administrator rights are required to create a symbolic link unless Windows is put into → Windows/development/developer-mode[developer mode].

    NTFS has symlinks since → Windows/versions[Windows Vista].

    Apparently, symbolic links are → Windows/kernel/objects and implemented with → Windows/file-system/reparse-point[reparse points].

  }
  { Junctions

    Junctions are similar to hard links, but operate on directories. Unlike hard links, Junctions can cross volume boundaries (but not to remote shares).

  }

}
{ Forks (Alternate Data Streams)

  A file can have alternate data streams.

}
{ Journalling

  NTFS is a journalled file system.

}
{ Encrypting File System (EFS) #ntfs-efs

  Encryption can be enabled by users on a per-file, per-directory, or per-drive basis.
  -
  Some EFS settings can also be mandated via Group Policy in Windows domain environments

  Directories that are enabled for encryption have an according *encryption attribute* set.

  Files might be decrypted without the user realising this in situations like
    • When copying files to other files systems (such as FAT32)
    • Whe sending files using the SMB/CIFS protocol

  { File Encryption Key

    EFS uses a symmetric key (aka the File Encryption Key (FEK)) to encrypt data.

    The FEK itself is encrypted with the user's public key and stored in the encrypted file's alternative data stream `$EFS`.

 }

}

sa:

  → Windows/file-system

 `→ Windows/dirs/Windows/System32/chkntfs_exe`

 `→ Windows/dirs/Windows/System32/compact_exe` displays or alters the compression of files on NTFS partitions.

  The `→ Windows/dirs/Windows/System32/drivers/Ntfs_sys` driver.

 `→ Windows/dirs/Windows/System32/cipher_exe` is a file encryption utility to display or alter the encryption of directories (and files?) on NTFS partitions.

  The *SYSTEM* account (identified by the well-known SID → Windows/security/SID/S-1-5/18[`S-1-5-18`]) is granted full access on all files in an NTFS file system.

  Microsoft has developed NTFS specifically as a general-purpose file system.
  -
  ReFS (resilient filesystem) is an alternative if availability, resiliency, and/or scale is inf focus.

