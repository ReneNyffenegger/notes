$ CIM Class Win32_ComputerSystem

The → Windows/Management-Instrumentation#wmi-class-hierarchy[class hierarchy] of `win32_computerSystem` is:
code {
cim-classHierarchy (get-cimClass win32_computerSystem)
ROOT/Cimv2 → Windows/Management-Instrumentation/namespaces/ROOT/cimv2/cim/managedSystemElement[CIM_ManagedSystemElement]
ROOT/Cimv2 CIM_LogicalElement
ROOT/Cimv2 CIM_System
ROOT/Cimv2 CIM_ComputerSystem
ROOT/Cimv2 CIM_UnitaryComputerSystem
ROOT/Cimv2 Win32_ComputerSystem
code }

{ Total physical memory

  Determine the → Windows/development/memory#win-memory-cmdline[total amount of physical memory on the command line]:
code {
(get-cimInstance Win32_ComputerSystem).totalPhysicalMemory / 1gb
code }

}
{ Detect if a hypervisor is present

code {
(get-cimInstance Win32_ComputerSystem).hypervisorPresent
code }
 
  If this command returns `True`, it does not necessarily mean that the command was executed *within* a virtualized machine.

}
