$ cmd.exe: Determine if it running in a 32 or 64 bit environment

{ Using %PROCESSOR_ARCHITECTURE% and %PROCESSOR_ARCHITEW6432%

  In → Windows/cmd-exe, the → development/environment-variable[environment variables] `%PROCESSOR_ARCHITECTURE%` to report the *native processor architecture* if the system is not running under *WOW64*.
  -
  The value of this variable apparently is either `AMD64` or `x86`.

 `%PROCESSOR_ARCHITEW6432%` can only be used for WOW64.

  See David Wang: → https://blogs.msdn.microsoft.com/david.wang/2006/03/27/howto-detect-process-bitness/[HOWTO: Detect Process Bitness].

}
{ Using %PROGRAMFILES(x86)%

  Another approach seems to be to check if the environment variable `%PROGRAMFILES(x86)%` (not the directory it points to) exists.

  On 32-bit systems, the variable is not defined.

}
{ With wmic

  In an *elevated commanc prompt*, → Windows/cmd-exe/commands/wmic[`wmic`] can be used:

code {
c:\> → Windows/cmd-exe/commands/wmic[wmic] os get osarchitecture
code }

}
sa:
  The presence of the → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Wow6432Node[`HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node`] key in the
  → Windows/registry[registry] also indicates that a 64 bit version of → Windows is running.
