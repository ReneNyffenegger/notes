$ Windows: Hyper-V
@ Hyper-V

Hyper-V provides *hardware virtualization*, that is: each virtual machine run on its own *virtual* hardware, such as virtual hard drives, devices etc.

Hyper-V is available on all but the home edition of 64-bit version of → Windows/versions/10.

Hyper-V is an → Windows/optional-features[optional feature].

If virtualization is enabled, not only the guest operating systems, but the host OS *itself* runs on top of the Hyper-V virtualization layer. Yet, the host OS still has full control over all hardware.
-
Apparently, this architecture is referred to as → development/hypervisor#hypervisor-levels[hypervisor level 1].

{ Enabling Hyper-V

? The Processor needs *SLAT (Second Level address translation)* to use Hyper-V.

  In → Windows/PowerShell
code {
→ Windows/PowerShell/command-inventory/noun/windowsOptionalFeature/enable[enable-windowsOptionalFeature] -online -featureName Microsoft-Hyper-V -all
code }

 In → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] with → Windows/dirs/Windows/System32/Dism_exe[`Dism.exe`]:
code {
dism /online /enable-feature /all /featureName:Microsoft-Hyper-V
code }

  Apparently, running Hyper-V and → Companies-Products/Oracle/VM-VirtualBox[VirtualBox VM] is → Companies-Products/Oracle/VM-VirtualBox#vmbox-hyper-v-mutually-exclusive[mutually exclusive].

}
{ Drivers

  Some drivers that are required for Hyper-V include
    • → Windows/dirs/Windows/System32/drivers/vmstorfl_sys[`vmstorfl.sys`] is the Hyper-V Storage Accelerator.
    • → Windows/dirs/Windows/System32/drivers/bttflt_sys[`bttflt.sys`] is the Hyper-V VHDPMEM BTT Filter.
    • → Windows/dirs/Windows/System32/drivers/vmgencounter_sys[`vmgencounter.sys`] is the Hyper-V Generation Counter.
    • …

}
sa:
  → development/tools/Docker/Windows[Docker (on Windows)] runs on top of Hyper-V.

