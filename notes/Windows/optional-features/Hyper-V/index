$ Windows: Hyper-V
@ Hyper-V

Hyper-V provides *hardware virtualization*, that is: each virtual machine run on its own *virtual* hardware, such as virtual hard drives, devices etc.

Hyper-V is available on all but the home edition of 64-bit version of → Windows/versions/10.

Hyper-V is an → Windows/optional-features[optional feature].

If virtualization is enabled, not only the guest operating systems, but the host OS *itself* runs on top of the Hyper-V virtualization layer. Yet, the host OS still has full control over all hardware.
-
Apparently, this architecture is referred to as → development/hypervisor#hypervisor-levels[hypervisor level 1].

? Every Hyper-V based VM is associated with a VHDx file.

{ Enabling Hyper-V

  Use an elevated PowerShell console to check if Hyper-V is enabled:
code {
PS:\> → Windows/PowerShell/command-inventory/noun/windowsOptionalFeature/get -online | → Windows/PowerShell/command-inventory/noun/object/where {$_.featureName → Windows/PowerShell/language/operator/comparison/like[-like] "*Hyper-V*"}
code }

? The Processor needs *SLAT (Second Level address translation)* to use Hyper-V.

  In → Windows/PowerShell
code {
PS C:\> → Windows/PowerShell/command-inventory/noun/windowsOptionalFeature/enable -online -featureName Microsoft-Hyper-V -all
Do you want to restart the computer to complete this operation now?
…
code }

 In → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] with `→ Windows/dirs/Windows/System32/Dism_exe`
code {
dism /online /enable-feature /all /featureName:Microsoft-Hyper-V
code }

    When Hyper-V is enabled, the link `Hyper-V Manager` is added to the Start Menu (`C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Administrative Tools`).
    -
    This link runs `→ Windows/dirs/Windows/System32/mmc_exe` with `→ Windows/dirs/Windows/System32/virtmgmt_msc`


  { TODO

    What does the following output mean:
code {
C:\> → Windows/dirs/Windows/System32/systeminfo_exe[systeminfo] | → Windows/dirs/Windows/System32/findstr_exe[findstr] Hyper-V
…
Hyper-V Requirements:      A hypervisor has been detected. Features required for Hyper-V will not be displayed.
code }

   With elevated privileges:
code {
C:\> → Windows/dirs/Windows/System32/Dism_exe[dism] /online /get-features | → Windows/dirs/Windows/System32/find_exe[find] "Microsoft-Hyper-V"  | → Windows/dirs/Windows/System32/sort_exe[sort]
Feature Name : Microsoft-Hyper-V
Feature Name : Microsoft-Hyper-V-All
Feature Name : Microsoft-Hyper-V-Hypervisor
Feature Name : Microsoft-Hyper-V-Management-Clients
Feature Name : Microsoft-Hyper-V-Management-PowerShell
Feature Name : Microsoft-Hyper-V-Services
Feature Name : Microsoft-Hyper-V-Tools-All
code }

    Does the following command turn of Hyper-V completely?
code {
→ Windows/dirs/Windows/System32/bcdedit_exe /set hypervisorlaunchtype off
code }

  }

}
{ Trying to install Windows 11

  { The boot loader failed

    When trying to install Windows 11, I've received the error 1) *The bood loader failed*, 2) *A boot image was not found* or 3) *The boot loader did not load an operating system*, followed by
   *No operating system was loaded. Your virtual machine may be configured incorrectly. Exit an re-configure your VM or click restart to retry the current boot sequence again*:
    gh|about-Hyper-V|/img/The-boot-loader-failed.png|*|

    → https://www.youtube.com/watch?v=I_xN6ZpyET8[It turns out] that in order to load the ISO file, a key must be pressed *before* (or shortly after?) the boot process has started.

  }
  { This PC doesn't curretly meet Windows 11 system requirements

    In order to install Windows 11, the setting *Enable Trusted Platform Module* (found under Security) needs to be set.

  }
  { Let's connect you to a network #hyper-v-connect-network

    During the installation process, I was asked to connect to a network.

    I wanted to skip this step, so I pressed *shift+F10* which opened a `→ Windows/dirs/Windows/System32/cmd_exe` Window where I typed
code {
→ Windows/dirs/Windows/System32[C:\Windows\System32]> → Windows/dirs/Windows/System32/oobe/BypassNRO_cmd[oobe\bypassnro]
code }

  }
}
{ Drivers

  Some drivers that are required for Hyper-V include
    • → Windows/dirs/Windows/System32/drivers/vmstorfl_sys[`vmstorfl.sys`] is the Hyper-V Storage Accelerator.
    • → Windows/dirs/Windows/System32/drivers/bttflt_sys[`bttflt.sys`] is the Hyper-V VHDPMEM BTT Filter.
    • → Windows/dirs/Windows/System32/drivers/vmgencounter_sys[`vmgencounter.sys`] is the Hyper-V Generation Counter.
    • …

}
{ Linux kernel source code #hyper-v-linux-src

  The → Linux/kernel/source[source code] of the → Linux/kernel[Linux kernel] Stores Hyper-V related code in
    • `→ Linux/kernel/source/drivers/hv`
    • `arch/x86/hyperv` and `arch/arm64/hyperv`
    • `tools/hv`
    • individual device drivers (such as `drivers/scsi`, `drivers/net`, `drivers/clocksource` etc)

  Some of the «individual files» can be identified in the *Hyper-V/Azure CORE AND DRIVERS* section of the `→ Linux/kernel/source/MAINTAINERS` file:
code {
$ → development/languages/sed/examples/print-between-patterns[sed] -n '/Hyper-V\/Azure CORE AND DRIVERS/,/^\s*$/p' MAINTAINERS  | → Linux/shell/commands/grep '^F:'
code }

}

sa:

  → Windows/virtualization

  A subset of Hyper-V, the *Virtual Machine Platform*, is used to run → Windows/Subsystem-for-Linux[WSL 2].

 `→ Windows/dirs/Program-Files/Hyper-V`
  -
 `→ Windows/dirs/Windows/System32/virtmgmt_msc`

  → development/tools/Docker/Windows[Docker (on Windows)] runs on top of Hyper-V.

  The value of *A → development/hypervisor …* under → Windows/dirs/Windows/System32/System-Summary[System Summary] in
  → Windows/dirs/Windows/System32/msinfo32_exe[`msinfo32.exe`]

  → Windows/dirs/Program-Files/usbipd-win#usbipd-exe[`usbipd.exe`] shares locally connected USB devices to Hyper-V.

  In → Windows/Subsystem-for-Linux, `→ Linux/fhs/sys/bus[/sys/bus]/vmbu` represents the bus to Hyper-V.

 `C:\ProgramData\Microsoft\Windows\Hyper-V\`

  → Windows/optional-features/Windows-Sandbox (another → Windows/optional-features[optional feature]) runs on top of Hyper-V.

  Running Hyper-V and → Companies-Products/Oracle/VM-VirtualBox[VirtualBox VM] is → Companies-Products/Oracle/VM-VirtualBox#vmbox-hyper-v-mutually-exclusive[problematic]
 (and in an earlier version of VirtualBox was even mutually exclusive as I have discovered when I → Windows/Subsystem-for-Linux/install-distribution[installed a Windows Subsystem for Linux distribution) distribution]).


