$ %SystemRoot%

A typical value for `%SystemRoot%` seems to be `C:\Windows`.

Among others(?), this (and its subdirectories?) store so-called *System apps*.


{ Opening folders below %SYTEMROOT%

  Folder below `%SYTEMROOT%` can be opend in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe] with → Windows/dirs/Windows/System32/cmd_exe/commands/start[`start`] (if `%SystemRoot%` is in `%PATH%` which it usually is). The following example opens the
 `fonts` folder below `C:\windows`
code {
C:\> start fonts
code }

  Similarly, these folders can also be directly opened using `Win+R` and then typing the folder name.

}
{ Relationship between %SystemRoot% and %windir%

  %windir% is supposed to the same directory as `%SystemRoot%`.
  
  The difference between these is that `%SystemRoot%` is not a real → development/environment-variable[environment variable] but is kind of hardcoded into the kernel 
  while `%windir%` *is* an ordinary  whose value is set
  in the registry under → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/Environment[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment`]
  and usually assigned the value of `%SystemRoot%`.

  The value of `%SystemRoot%` is determined when Windows is installed.

  Allegedly, in → Windows/versions/10[Windows 10], the environment variable `%CSIDL_WINDOWS%` also points to `%SystemRoot%`. However, I found that not to be the case.

}
{ TODO

  Compare with the values *PathName* and *SystemRoot* under → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion#reg-pathname-systemroot[`KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion`].

}

sa:
  → Windows/dirs/Windows/INF[%SYTEMROOT%\INF]
