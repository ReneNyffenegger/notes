$ ilasm.exe

`ilasm.exe` is the → Microsoft/dot-net Framework IL assembler

{ Command line options

  table { ll

  `/NOLOGO`         ☰ Suppress the copyright message
  `/QUIET`          ☰ Don'treport assembly progress
  `/NOAUTOINHERIT`  ☰ Disable inheriting from → Microsoft/dot-net/namespaces-classes/System/Object[`System.Object`] by default
  `/DLL`, `/EXE`    ☰ Compile to a → Windows/development/Portable-Executable/DLL, → Windows/development/Portable-Executable/EXE[executable] (the default being executable)
  `/PDB`            ☰ Create the PDB (→ Windows/development/Debugging/symbol-files[symbol]) file without enabling debug info tracking
  `/APPCONTAINER`   ☰ Create an AppContainer exe or dll
  `/DEBUG`          ☰ Disable JIT optimization, create PDB file, use sequence points from PDB
  `/DEBUG=IMPL`     ☰ Disable JIT optimization, create PDB file, use implicit sequence points
  `/DEBUG=OPT`      ☰ Enable JIT optimization, create PDB file, use implicit sequence points
  `/OPTIMIZE`       ☰ Optimize long instructions to short
  `/FOLD`           ☰ Fold the identical method bodies into one
  `/CLOCK`          ☰ Measure and report compilation times
  `/RESOURCE=<res_file>`    ☰ Link the specified resource file (*.res) into resulting .exe or .dll
  `/OUTPUT=<targetfile>`    ☰ Compile to file with specified name (user must provide extension, if any)
  `/KEY=<keyfile>`      ☰ Compile with strong signature (`<keyfile>` contains private → development/security/cryptography/Public-key-cryptography[key])
  `/KEY=@<keysource>`   ☰ Compile with strong signature (`<keysource>` is the private key source name)
  `/INCLUDE=<path>`     ☰ Set path to search for `#include`'d files
  `/SUBSYSTEM=<int>`    ☰ Set Subsystem value in the NT Optional header
  `/SSVER=<int>.<int>`  ☰ Set Subsystem version number in the NT Optional header
  `/FLAGS=<int>`        ☰ Set CLR ImageFlags value in the CLR header
  `/ALIGNMENT=<int>`    ☰ Set FileAlignment value in the NT Optional header
  `/BASE=<int>`     ☰Set ImageBase value in the NT Optional header (max 2GB for 32-bit images)
  `/STACK=<int>`    ☰Set SizeOfStackReserve value in the NT Optional header
  `/MDV=<version_string>`   ☰Set Metadata version string
  `/MSV=<int>.<int>`   ☰Set Metadata stream version (<major>.<minor>)
  `/PE64`           ☰Create a 64bit image (PE32+)
  `/HIGHENTROPYVA`  ☰Set High Entropy Virtual Address capable PE32+ images (default for `/APPCONTAINER`)
  `/NOCORSTUB`      ☰Suppress generation of CORExeMain stub
  `/STRIPRELOC`     ☰Indicate that no base relocations are needed
  `/ITANIUM`        ☰Target processor: Intel Itanium
  `/X64`            ☰Target processor: 64bit AMD processor
  `/ARM`            ☰Target processor: ARM processor
  `/32BITPREFERRED` ☰Create a 32BitPreferred image (PE32)
  `/ENC=<file>`     ☰Create Edit-and-Continue deltas from specified source file

  table }

}

sa:
  → Windows/dirs/Program-Files-x86/Microsoft-SDKs/Windows/version/bin/NETFX-version-Tools/ildasm_exe[`ildasm.exe`] is the IL disassembler. Interestingly,
  the disassembler is not located in the same directory as the assembler.
