$ regedit.exe
@ regedit.exe

`regedit.exe` is a GUI based → Windows/registry editor. A console based registry editor is
→ Windows/dirs/Windows/System32/reg_exe[`reg.exe`]

Surprisingly, at least to me, `regedit.exe` is located under → Windows/dirs/Windows[`%SystemRoot%`] rather than under
→ Windows/dirs/Windows/System32[`%SystemRoot%\System32`].


`regedit.exe` can be used in → Windows/dirs/Windows/System32/cmd_exe to import data into the → Windows/registry or to export portions of the registry.

{ Command line operations

  { Opening multiple copies of regedit

    When given the `/m` option, regedit will open another window (and not try to replace another running instance of regedit):
code {
C:\> regedit /m
code }

  }
  { Exporting a subtree

    Export the contents of `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies` to the file `x:\path\to\export_file.reg`:

code {
regedit /e x:\path\to\export_file.reg "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies"
code }

Note: if the file is speciefied without absolute path, it will be exported into the directory that was also used in the last export. So, you might want to use the
environment variable →development/environment-variable#cd[`%CD%`] to make sure that the exported file goes into the current directory:

code {
regedit /e %CD%\export_file.reg "HKEY_CURRENT_USER\Software\Microsoft\Windows"
code }

{ Exporting HKLM and HKCU

Without specifying a registry key in an export, it will default to exporting both `HKEY_LOCALE_MACHINE` and `HKEY_CURRENT_USER`:

code {
regedit /e %CD%\export_file.reg 
code }

}

   }

  { Importing a subtree

  The `/s` causes the import to be silent.

code {
regedit /s import_file.reg
code }

{ Format of import file

An import file must start with `Windows Registry Editor Version 5.00`.

code {
Windows Registry Editor Version 5.00 

; Comments start with a semicolon

[HKEY_CURRENT_USER\path\to\a\key]
"A String Value"="foo bar"
"A dword values"=dword:00000001

[HKEY_CURRENT_USER\another\path\to\another\key]
"Another String Vaue"="baz"

; The minus sign causes deletions
[-HKEY_CURRENT_USER\path\to\be\deleted]

[HKEY_CURRENT_USER\another\path\again]
"Delete This Value only"=-


code }

   }

}


}
{ Opening the registry at a given key #regedit-open-at

  Unfortunately, `regedit.exe` does not have a command line option to specify a
  → Windows/registry/tree-structure/key[registry key] that should be displayed when `regedit.exe` starts.

  However, `regedit.exe` stores the last visited
  → Windows/registry/tree-structure/key[key] in the → Windows/registry (where else) under
  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Applets/Regedit/LastKey[the value `LastKey`] in the
  → Windows/registry/tree-structure/key[registry key]
  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Applets/Regedit[`HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Applets\Regedit`].

  So, in order to open the registry at a specific key, one needs to first change the value of `LastKey` and *then* start `regedit.exe`.

  This idea is implemented in the → Windows/dirs/Windows/System32/cmd_exe/batch-files[batch file] → development/tools/scripts/personal/regat_bat[`regat.bat`] and
  the → Windows/PowerShell version → development/tools/scripts/personal/regat[`regat.ps1`]. *regat* stands for *registry at*.

  The same idea is formulated with the → development/languages/Perl[Perl] module → development/languages/Perl/modules/Win32/TieRegistry[Win32::TieRegistry] which can be used to manipulate the registry with → development/languages/Perl:
  → development/tools/scripts/personal/op-reg-at_pl[`op-reg-at.pl`].

  Another tool that does the same thing is → Windows/tools/Sysinternals/regjump[`regjump.exe`] (by → Windows/tools/Sysinternals[Sysinternals]).

}
{ Exporting a sub-tree

  Choosing `*.txt` format when exporting a sub tree causes the produced file to reveal the time stamps of the *last write time*.
 
}

sa:

  → Windows/dirs/Windows/System32/reg_exe[`reg.exe`]

  → Windows/dirs/Windows/System32/regini_exe

