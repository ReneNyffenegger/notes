$ csrss.exe

The *Client Server Runtime Sub-System* process.

CSRSS is a user-mode → Windows/development/process.

The process might be started with the following arguments
code {
→ Windows/dirs/Windows/System32[%SystemRoot%\system32]\csrss.exe ObjectDirectory=\Windows SharedSection=1024,20480,768 Windows=On SubSystemType=Windows ServerDll=basesrv,1 ServerDll=winsrv:UserServerDllInitialization,3 ServerDll=sxssrv,4 ProfileControl=Off MaxRequestThreads=16
code }

For each session, an instance of `csrss.exe` is created which in turn loads the → Windows/development/Portable-Executable/subsystem/windows#subsystem-windows-components[important DLLs for a Windows subsystem].

? `csrss.exe` has the Windows → Windows/development/Portable-Executable/subsystem[subystem's] *raw input thread* which handles keyboard and mouse input.

The CSRSS can be debugged by setting the → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager#system-global-flag[System Global Flag] *Debug initial command*.
-
See also the System Global Flag *Enable debugging of Win32 subsystem* (`FLG_ENABLE_CSRDEBUG`)

sa:

  The value of → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/SubSystems#reg-subsystem-windows[`Windows`] under the → Windows/registry[registry] key
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/SubSystems[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\SubSystems`].

  In order to debug `csrss.exe`, the *Enable debugging of Win32 subsystem* tick needs to be set with → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/gflags_exe[`gflags.exe`]. Alternatively, this can be done
  on a command line with
code {
C:\> gflags /r +20000
code }

  The → Windows/development/Debugging/tools#windows-debugging-tools-command-line-option[`--` (two hyphens!) command line option] of the → Windows/development/Debugging/tools[debugging tools for Windows].
