$ Tests for the PowerShell Wrapper for winsqlite3.dll

This page lists some tests for the → Windows/dirs/Windows/System32/winsqlite3_dll/PowerShell[PowerShell wrapper for `winsqlite3.dll`].

{ datatypes.ps1 #ps-sqlite-test-datatypes

  This test inserts integers (also 64-bit), a string, a double and a → Windows/PowerShell/language/variable/automatic/null[`$null`] value and then selects them again. A warning is written if the selected values
  are different from the inserted ones.

  gh|winsqlite3.dll-PowerShell|/test/datatypes.ps1||

}
{ last_insert_rowid.ps1 #ps-sqlite-test-last_insert_rowid

 `last_insert_rowid.ps1` tests the functionality of → https://www.sqlite.org/c3ref/last_insert_rowid.html[`sqlite3_last_insert_rowid()`]. See also → development/databases/SQLite/tables/rowid.

  gh|winsqlite3.dll-PowerShell|/test/last_insert_rowid.ps1||

}
{ Encodings #ps-sqlite-test-encoding

  This test consists of two files that have the same content but have a different encoding: `encoding-utf8.ps1` is → development/Unicode/UTF-8 encoded while `encoding-latin1.ps1` is latin 1 encoded.

  These files insert some German umlaute and selects them again to test if they're equal.

  In my tests, I found that `encoding-latin1.ps1` succeeds in PowerShell 5.1 and that `encoding-utf8.ps1` succeeds in both, PowerShell 5.1 and PowerShell 7.1.

  gh|winsqlite3.dll-PowerShell|/test/encoding-utf8.ps1||

}
