$ Using winsqlite3.dll with PowerShell (classes.ps1)

`classes.ps1` is a file that is required to use → Windows/dirs/Windows/System32/winsqlite3_dll[`winsqlite3.dll`] with → Windows/PowerShell.

More description about this project is → Windows/dirs/Windows/System32/winsqlite3_dll/PowerShell[here].

{ class sqliteDB

  table { ll
    `sqliteDB($dbFileName, $new)` ☰ The constructor opens the SQLite database with filename/path `$dbFileName`. If the boolean `$new` is true, the database is first deleted if it exists.
    `open()` ☰ This method is not intended for public usage and accordingly is declared *hidden*.
    `exec()` ☰ Execute an SQL statement without any bind variables.
    `prepareStmt($sqlStmt)` ☰ creates an `sqliteStmt` instance for the SQL stement `$sqlStmt`. Returns `$null` if parsing fails.
    `close()` ☰ Closes the database.j
    `version()` ☰ Returns the version of the SQLite engine.
  table }

}
{ class sqliteStmt

  table { ll
    `bind($index, $value)` ☰
    `step()` ☰  calls `sqlite3_step()`
    `reset()` ☰ calls `sqlite3_reset()`
    `col($index)` ☰ For select statements: returns the value of the column `$index` of the *current record*
    `bindArrayStepReset($bindValues)` ☰ binds the values in the array `$bindValues` and then calls `step()` and `reset()`
    `finalize()` ☰ Must/should(?) be called when done with the statement

  table }

}
{ Source code

  gh|winsqlite3.dll-PowerShell|/classes.ps1||

}
