$ shell32.dll

{ Control_RunDLL

  The entry point `Control_RunDLL` can be used to open (or execute) `.cpl` (→ Windows/control-panel) files.

  If called with → Windows/dirs/Windows/System32/rundll32_exe[`rundll32.exe`], the convention is as follows (`n` signifying the zero based index of applet within the .cpl and `t` the index of tab
  in multi-tabbed applets):
code {
→ Windows/dirs/Windows/System32/rundll32_exe[rundll32] shell32.dll,Control_RunDLL nameOf.cpl,@n,t
code }

}
{ SHEmptyRecycleBin

 `SHEmptyRecycleBin()` empties the → Windows/dirs/_Recycle_Bin[Recycle Bin].

  This function is used in the → Windows/PowerShell script → Windows/dirs/_Recycle_Bin#ps-empty-recycle-bin[`empty-recycleBin.ps1`].

}

sa:
 → Windows/dirs/Windows/System32/rundll32_exe#rundll32-start-cpl[Using `rundll32.exe` to start a Control Panel applet]

 The entry Points
   • → Windows/dirs/Windows/System32/shell32_dll/SHChangeNotify[`SHChangeNotify`]
   • → Windows/dirs/Windows/System32/shell32_dll/SHHelpShortcuts_RunDLL[`SHHelpShortcuts_RunDLL`]

 → Windows/development/COM/Useful-object-libraries/Microsoft-Shell-Controls-and-Automation[Microsoft Shell Control and Automation]

 `shell32.dll` contains a some 300 icons. I have extrected them with
 → Windows/PowerShell/examples/WinAPI/ExtractIconEx[PowerShell and `ExtractIconEx`]. The result is
 → https://renenyffenegger.ch/development/Windows/PowerShell/examples/WinAPI/ExtractIconEx/shell32.html[here].
 -
 Another → Windows/development/Portable-Executable/DLL that contains icons is → Windows/dirs/Windows/System32/imageres_dll[`imageres.dll`]
