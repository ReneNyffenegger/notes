$ dbgeng.dll

*Windows Symbolic Debugger Engine*, commonly referred to as *the engine*.

This *enginge* provides the functionality to examine and manipulate debugging Windows targets in both, user mode and kernel mode.

Common operations on targets include
  • setting breakpoins
  • getting notified of events
  • querying symbols
  • reading/writing → Windows/development/memory[memory]
  • controlling → Windows/development/process/thread[threads] and → Windows/development/process[processes]

{ Debuggers using dbgeng.dll

  The debugger engine is used in various debuggers, such as
    • WinDbg
    • CDB
    • NTSD
    • KD

  Because these debuggers use the same engine, they share the commands and don't differ in their functionality very much.

  table { llll

          ☰ User mode ☰ Kernel mode  ☰ GUI/Console
   cdb    ☰    x      ☰              ☰ Console
   ntsd   ☰    x      ☰              ☰ Console
   WinDbg ☰    x      ☰    x         ☰ GUI
   kd     ☰           ☰    x         ☰ Console

  table }

  Although WinDbg supports both user mode and kernel mode debugging, it only supports one at a given time.
  
}
{ Source path

  The engine has an internal *source path*. It is a list of directories and source servers where the engine tries to find source files from which
  the currently examined target was created.

  After locatin a source file, the code-line that correspond to one (or more) instructions can be looked up using → Windows/development/Debugging/symbol-files[symbol files].

}
{ Debugger engine application #debugger-engine-application

  It's possible to write extensions that are based on the engine. These are referred to as *debugger engine application*.

  The header file that declares the functions for the API is in → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/inc/dbgeng_h[`dbgeng.h`].
  

}
