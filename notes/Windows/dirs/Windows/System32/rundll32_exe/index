$ rundll32.exe

`rundll32.exe` allows to execute functions within a → Windows/development/Portable-Executable/DLL[DLL] from → Windows/dirs/Windows/System32/cmd_exe[cmd.exe].

{ Function signature

  The *signature* of a function needs to be as follows:
code {
void CALLBACK funcName(
       HWND      hwnd,
       HINSTANCE hinst,
       LPSTR     lpszCmdLine,
       int       nCmdShow
);
code }

  See also → Windows/dirs/Windows/System32/rundll32_exe/example-dll[this example C-source code] that can be compiled into a
  → Windows/development/Portable-Executable/DLL and then have its function called with `rundll32.exe`.

}
{ Syntax #rundll32-syntax

  The syntax for using rundll32 is as follows

code {
c:\> rundll32 nameOf.DLL,entryPoint
c:\> rundll32 nameOf.DLL,entryPoint optionalArgument1
c:\> rundll32 nameOf.DLL,entryPoint optionalArgument1 optionalArgument2 
c:\> rundll32 nameOf.DLL,entryPoint optionalArgument1 optionalArgument2 …
code }

  When used that way, it loads `nameOf.DLL` with the → Windows/development/WinAPI function `LoadLibrary()` and
  determines the address of the function `entryPoint` with `GetProcAddress()`.

}
{ Starting CPL applets #rundll32-start-cpl

  ? Notably, `rundll32.exe` is used to start → development/filename-extensions#cpl[`.cpl`] files (→ Windows/control-panel[Control Panel] applets) with the following convention:
code {
rundll32.exe → Windows/dirs/Windows/System32/shell32_dll[shell32.dll],Control_RunDLL FooBarBaz.cpl,arguments
code }


}
{ Some useful usages

  { Open mouse control panel #open-mouse-ctrl-panel

code {
c:\> rundll32.exe shell32.dll,Control_RunDLL main.cpl @0
code }

    The mouse settings are apperently stored in the → Windows/registry[registry] under
    → Windows/registry/tree/HKEY_CURRENT_USER/Control-Panel/Mouse[HKEY_CURRENT_USER\Control Panel\Mouse].

  }

}
{ Using rundll32 in a creative way #rundll-javascript

  This → https://stackoverflow.com/questions/25131484[Stackoverflow question] shows how it is possible to execute → development/languages/JavaScript with `rundll.32`:
code {
C:\> rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";alert('Hello-World');
code }

  Even more fascinating is the → https://stackoverflow.com/a/25427342/180275[answer] that explains *why* and *how* this is working.

}
{ TODO

  The following command is supposed to print a HTML document (in → Windows/PowerShell), but it isn't (at least when I tried to use it):
code {
rundll32 C:\Windows\System32\mshtml.dll,PrintHTML "Microsoft Print to PDF" $pwd\languages.html
code }

}


sa:
  → Windows/dirs/Windows/System32/rundll32_exe/url_bat[`url.bat`] uses `rundll32` to open an
  → development/web/URI-URL-URN-IRI-URC#url[URL] in the default → development/web/browser[browser] (?)
  in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe].

  → Windows/dirs/Windows/System32/rundll32_exe/example-dll

  → Windows/dirs/Windows/System32/control_exe#control_exe-rundll32

  The entry point → Windows/dirs/Windows/System32/shell32_dll/SHHelpShortcuts_RunDLL[`SHHelpShortcuts_RunDLL`] in
  → Windows/dirs/Windows/System32/shell32_dll[`shell32.dll`].

links:
  → https://www.robvanderwoude.com/rundll.php[Rob van der Woude's `rundll32` page].
