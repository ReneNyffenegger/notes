$ WMIC.exe

The *WMI Commandline Utility* for interacting with → Windows/Management-Instrumentation[WMI].

`WMIC.exe` comes with large amount of convenient default aliases for WMI objects.

{ Querying information

  { Processes

  A basic usage of `WMIC.exe` to query → Windows/development/process[processes] and their process ids:
code {
wmic process get processId,name
code }

  The `where` option allows to limit the result set:
code {
wmic process where "name='cmd.exe'" get parentProcessId,ProcessId
code }

  }
  { Drives (logicalDisk) #wmic-logicalDisk

    The following command shows available drive letters
code {
C:\Users\Rene>wmic logicalDisk get providerName, deviceId, description
Description       DeviceID  ProviderName
Local Fixed Disk  C:
CD-ROM Disc       D:
Removable Disk    E:
code }

  In order to limit the query to «mapped drives» (→ Windows/dirs/Windows/System32/net_exe/use[`net use …`]), `driveType` must be `4`:
code {
c:\> wmic logicalDisk where driveType=4 get providerName, deviceId, description
code }

  }
  { User accounts #wmic-useraccount

    Get a → Windows/user-account[user's] → Windows/security/SID:
code {
→ Windows/dirs/Windows/System32/wbem/WMIC_exe[wmic] useraccount where name='melanie' get sid
code }

  }
  { Meta information about WMIC

  `WMIC.exe` can be used to query about → Windows/Management-Instrumentation[WMI] itself:
code {
C:\> wmic wmiset get DatabaseDirectory,EnableEvents,InstallationDirectory,LoggingDirectory,LoggingLevel,MaxLogFileSize
DatabaseDirectory                    EnableEvents  InstallationDirectory     LoggingDirectory                LoggingLevel  MaxLogFileSize
→ Windows/dirs/Windows/System32/wbem/Repository[C:\windows\system32\wbem\repository]  TRUE          → Windows/dirs/Windows/System32/wbem[C:\windows\system32\wbem]  C:\windows\system32\wbem\Logs\  0             65536
code }

  }
  { Installed programs

    The following query takes quite some time:
code {
wmic product get name,version
code }

   See also → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows/CurrentVersion/Uninstall[`HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall`]

  }

}
{ Calling methods

  Some classes provide methods that can be called. These can be queried like so
code {
wmic process call /?
code }

  This reveals, among others, that a process can be created. The first argument is the process, the second the directory in which the process is started:
code {
wmic process call create "cmd /k", %temp%
code }
  

}
{ /format:list

  With `/format:list`, an output that is too wide to be displayed in the console's width can be put in a list:
code {
wmic computersystem get /format:list
code }

}
sa:
  `wmic` can be used to → Windows/dirs/Windows/System32/cmd_exe/tasks/determine-if-32-or-64-bit-Windows[determine if Windows is running in 32 or 64 bit envorinment] and or for querying → Windows/user-account[user accounts].
