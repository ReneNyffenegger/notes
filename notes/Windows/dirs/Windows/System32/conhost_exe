$ conhost.exe

Console Windows Host

The *console host* controls the appearance and functionality of *character mode* applications such as → Windows/dirs/Windows/System32/cmd_exe or → Windows/PowerShell. Such character mode
applications are also referred to as *consoles*.

{ Screen Buffer and Console Window

  The *screen buffer* is a two-dimensional array that stores characters and their foreground and background color.

  The *console window* is a rectangular window that provides a view onto the screen buffer. If the size of the console window
  is smaller than the screen buffer, vertically, horizontally or both, the console displays scrollbars which allow to view
  different parts of the screen buffer.

  The *cursor* displays the special position in the screen buffer where text is written to or read from.
  -
  The cursor can be made hidden. If it is visible, the console window is always moved so that the cursor is visible.

}
{ Character encoding / Code pages / Unicode

  The console writes and reads text using the current → Windows/development/code-page[code page].

  In order to display → development/Unicode characters, the console must be set to a *non-raster* or a *TrueType* font (such as Consolas or Lucida Console).

}
{ Creating a conhost.exe child process

  In the original Windows → Windows/development/Portable-Executable/subsystem design, console windows were managed by
  → Windows/dirs/Windows/System32/csrss_exe[`csrss.exe`].

  This design changed in → Windows/versions/7 where for each console (→ Windows/PowerShell[PowerShell] or → Windows/dirs/Windows/System32/cmd_exe[cmd.exe]) a separate process (`conhost.exe`) is spawned as child process.

}
{ Configuring settings #conhost_exe-settings

  The settings of the console host are taken from various places:
     • Hardcoded values in → Windows/dirs/Windows/System32/ConhostV1_dll[`ConhostV1.dll`] (or `conhostv2.dll`?)
     • → Windows/registry/tree/HKEY_CURRENT_USER/console[`HKCU\Console`]
     • Subkeys of → Windows/registry/tree/HKEY_CURRENT_USER/console[`HKCU\Console`] (where the → Windows/registry/tree-structure/key[key name] is either the exe path of the console application (backslashes replace by underscores) or the application's title
     • Windows shortcut files (→ development/filename-extensions#lnk[`*.lnk`])

  A list of settings that can be adjusted is → https://devblogs.microsoft.com/commandline/understanding-windows-console-host-settings/[here].

  When an application is started through a `*.lnk` file, the values in the subkey of `HKCU\Console` are irrelevant.

  The menu of an application that uses `conhost.exe` (such as → Windows/PowerShell in the following picture) contains the two entries *Defaults* and *Properties*.
  -
  Choosing *Defaults* allows to change the settings that are stored in `HKCU\Console` while *Properties* allows to change the settings in either the subkey of that registry key or the `*.lnk` file.
  gh|Windows-Pics|/Windows/System32/conhost.exe/menu-Defaults-Properties.png|| 

}
{ Criteria for fonts #conhost-font

  Microsoft lists the following criteria for fonts to be available in a command window. Unfortunately, the original links was gone, but some of the information is in the
  → https://web.archive.org/web/20170903033125/https://support.microsoft.com/en-us/help/247815/necessary-criteria-for-fonts-to-be-available-in-a-command-window[wayback machine of archive.org]:
    • No italic font
    • No negative A or C space (whatever *that* is?)
    • A true type font must be `FF_MODERN` (constant stroke width)
    • Non true type font must be `OEM_CHARSET`
    • Non true type fonts in asian installations must be *Terminal*
    • True type fonts in asian installations must also be asian fonts

  
  ? An unsupported way to add console fonts is by populating the registry key `→ Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Console/TrueTypeFont` whose values consist of the required amount of consecutive
 `0` (for uniqueness) and font name. The name of the font must be listed in
 ` → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Fonts`. (See also → https://superuser.com/a/502345[this superuser answer]).


}

sa:

  → Windows/Terminal[Windows Terminal (`wt.exe`)]

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/Console[`System.Console`]

  → Windows/dirs/Windows/System32/drivers/condrv_sys[`condrv.sys`]

links:

  The Source code for `conhost.exe` is in → https://github.com/microsoft/terminal[this github repository].

  → https://devblogs.microsoft.com/commandline/author/richturnmicrosoft-com/[Rich Turner] on
    • → https://devblogs.microsoft.com/commandline/understanding-windows-console-host-settings[Understanding Windows Console Host Settings]
    • → https://blogs.msdn.microsoft.com/commandline/2018/07/20/windows-command-line-inside-the-windows-console/[Windows Command-Line: Inside the Windows Console]
