$ findstr.exe

A *Find String (QGREP) Utility*.

code {
findstr text *.c
code }

{ Case senstitive search

  By default, findstr searches case insensitively. The `/i` flag turns on case sensitiveness.

  The following findstr command only finds «House», but neither «house» nor «HOUSE».

code {
findstr /i House *.txt
code }

}
{ Search for text in current and sub-directories

  The `/s` flag specifies to search in the current directory and its sub directories.

  `/m` might be used to print the filenames only. (This option corresponds to the `-l` option of → Linux/shell/commands/grep[`grep`]).

  Search for the text «needle» in all files:
code {
C:\path\to\some\directory> findstr /s /m needle *
code }

   Search for «needle in haystack» in *.txt files only:
code {
C:\path\to\some\directory> findstr /s /m /c:"needle in haystack" needle *
code }

  iI is important to specify either `*` (for all files) or `*.suffix` (or a list of suffixes). This is different to
  → Linux/shell/commands/grep[`grep -r`] (where the file wildcard is not required) and thus a constant source
  of confusion.

}
{ Regular expressions

  → development/regular-expressions[Regular expressions] are enabled with `/r`.

  Word boundaries are `\<` and `\>`, respectively

  Character classes: Find something that looks like a hexadecimal number `[0-9A-F][0-9A-F][0-9A-F]`.

  Alternations (vertical bar) are not supported.

  Curly braces are not supported, either.

}
sa:

? → Windows/dirs/Windows/System32/cmd_exe/commands

  → Windows/dirs/Windows/System32/find_exe[find.exe]

  GNU's: → Linux/shell/commands/grep[grep]

  The → Windows/PowerShell equivalent for `grep` seems to be the → Windows/PowerShell/language/cmdlet[cmdlet] `select-string`.
