$ cmd.exe: batch files

{ Comments

  Lines in a batch file can be commented with → Windows/dirs/Windows/System32/cmd_exe/commands/rem[`rem`].

}
{ Exiting batch files #exit-batch-file

  If → Windows/dirs/Windows/System32/cmd_exe/commands/exit[`exit`] is used to terminate a batch file, the `/b` option must be specified in order not to terminate the
  → Windows/dirs/Windows/System32/cmd_exe[cmd.exe] session as well.

  gh|about-cmd.exe|/batch-files/exit.bat||  

}

{ Batch argument/parameter variable expansion #cmd-exe-batch-file-variable-expansion

  In a batch file, the numbered variables `%1` through `%9` store the values of the arguments (or paramters) with which the batch file was called.
  -
  `%0` stores the (relative) path and name of the batch file itself.

  With *variable expansion*, the values of these numbered variables can be subsituted for related values:

  Applying `~n` and `~x` gets the filename (with suffix) of the batch file:
  gh|about-cmd.exe|/variables/expansion/name-of-bat-file.bat||

  Similarly, the (absolute) directory can be found by applying `~dp` on a variable:
  gh|about-cmd.exe|/variables/expansion/current-directory.bat||

  Table of modifiers
  table { ll
    `%~1`       ☰ Remove quotes
    `%~f1`      ☰ Full (absolute) path (of possibly relative path)
    `%~d1`      ☰ Drive letter
    `%~p1`      ☰ Path (without drive or file)
    `%~n1`      ☰ File name
    `%~x1`      ☰ → development/filename-extensions[Extension] of file name
    `%~s1`      ☰ Like `%~f1` but with *short names*
    `%~a1`      ☰ File attributes
    `%~t1`      ☰ Date and time of file
    `%~z1`      ☰ Size of file
    `%~$PATH:1` ☰ First directory in `%PATH%` where `%1` is found

  table }

}
{ Pausing for a while

  Sometimes, it's necessary to pause execution of the script for a few seconds (or longer). → Windows/dirs/Windows/System32/timeout_exe[`timeout.exe`] is explicitely created for that.

  The following line pauses for 5 seconds:
code {
timeout /t 5 > nul
code }

}

sa:

  → Windows/dirs/Windows/System32/cmd_exe/batch-files/arguments[batch file arguments (stored in `%1`, `%2` etc.)] and → Windows/dirs/Windows/System32/cmd_exe/parse-command-line/bat[passing arguments to a batch file]
