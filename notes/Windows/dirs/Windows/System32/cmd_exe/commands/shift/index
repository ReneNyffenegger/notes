$ cmd.exe - shift
@ shift

{ simple example

  gh|about-cmd.exe|/commands/shift/shiftParams.bat||

  When called like so…
code {
C:\> shiftParams one two three four five six seven eight nine
code }
… this → Windows/dirs/Windows/System32/cmd_exe/batch-files[batch file] prints
code {
param 1 = one
param 2 = two
param 3 = three
now shifting parameters by one
param 1 = two
param 2 = three
param 3 = four
now shifting parameters by one
param 1 = three
param 2 = four
param 3 = five
code }

}
{ shift and %* #cmd-exe-shift-percent-star

 `%*` is not affected by a `shift`.

  gh|about-cmd.exe|/commands/shift/shift-star.bat||

  If this script is invoked like so …
code {
C:\> shift-star.bat one two three
code }
… it prints
code {
%* = one two three
%1 = one
Shifting...
%* = one two three
%1 = one
code }


}
{ Using shift within parentheses

  The effect of `shift` within paranteses is delayed to «outside» the parentheses. This can be demonstrated with the following
  batch file:
  gh|about-cmd.exe|/commands/shift/paranthesis.bat||

  If executed with the parameters `-x foo`, it assigns `-x` to `%inside%` (because the effect of `shift` is not immediate), but assigns `foo` to
 `%outside%` (because the effect has now taken place):
code {
C:\> paranthesis.bat -x foo
%1=-x
inside=-x
outside=foo
code }

}
{ shift /n n

  The documentation says that, with enabled → Windows/dirs/Windows/System32/cmd_exe/command-extension[command extesions] the `shift` command can be given a number of positions to shift, for example `shift /N 3`.

  However, I could not confirm that and received a *Invalid parameter to SHIFT command* error message.

}


sa:

  The → Windows/dirs/Windows/System32/cmd_exe/batch-files/arguments[batch file arguments (`%1`, `%2` …, `%*` and `%0`)]

  `shift` is affected by whether → Windows/dirs/Windows/System32/cmd_exe/command-extension[command extensions] are enabled or disabled.

  → Windows/dirs/Windows/System32/cmd_exe/commands
