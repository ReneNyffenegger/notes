$ cmd.exe: variables
@ variables

{ Check if a variable is defined #cmd-exe-check-if-variable-is-defined

  The → Windows/dirs/Windows/System32/cmd_exe/commands/if[`if` statement] has a `defined` option which allows to check if a variable has been defined.
  It is almost equivalent to `if [%var%] == []` with the exception if the value of the variable consists of spaces, the `defined` version does
  not throw an error:

  gh|about-cmd.exe|/variables/check-if-variable-is-defined.bat||

}

{ Enabling delayed expansion

  gh|about-cmd.exe|/variables/expansion/enabledelayedexpansion.bat||

}
{ Localizing changes

  Assignments of values to variables can be localized within a block that starts with the → Windows/dirs/Windows/System32/cmd_exe/commands/setlocal[`setlocal`] command and
 (optionally) ends with the `endlocal` command.
code {
VAR=someValue
setlocal
VAR=changed
…
endlocal
rem value of VAR is someValue again
code }

}
{ Replacing text in a variable

   Note the typo (tow instead of two)
code {
C:\> → Windows/dirs/Windows/System32/cmd_exe/commands/set numbers=one tow three
code }

  Correct the typo:
code {
C:\> → Windows/dirs/Windows/System32/cmd_exe/commands/echo  %numbers:tow=two%
one two three
code }

}
{ Pseudo variables #cmd-exe-pseudo-variable

  Some variables store dynamic values:
    • `%CD%` (evaluates to the *current working directory*, see the → development/tools/scripts/personal/pc_bat[`pc.bat` batch file] that allows to copy it into the → Windows/clipboard[clipboard]).
    • `%__CD__%` (`%CD%` with a trailing back-slash)
    • `%DATE%` (evaluates to the current date, compare with → Windows/dirs/Windows/System32/cmd_exe/commands/date[`date /t`])
    • `%TIME%` (evaluates to the current time (`hh:mm:ss.cc`), compare with → Windows/dirs/Windows/System32/cmd_exe/commands/time[`time /t`])
    • → Windows/dirs/Windows/System32/cmd_exe/variables/errorlevel[`%ERRORLEVEL%`]
    • → Windows/dirs/Windows/System32/cmd_exe/variables/random[`%RANDOM%`] evaluates to an integer between 0 and 32767, inclusively.
    • `%CMDEXTVERSION%`
    • → Windows/dirs/Windows/System32/cmd_exe/variables/CmdCmdLine[`%CMDCMDLINE%`] stores how → Windows/dirs/Windows/System32/cmd_exe[cmd.exe] was invoked (→ Windows/dirs/Windows/System32/cmd_exe#cmd-exe-options[options] and commands).
    • `%NUMBER_OF_PROCESSORS%`
    • `%FIRMWARE_TYPE%` (which might contain the value → hardware/UEFI[UEFI]).
    • `%USERDOMAIN_ROAMINGPROFILE%`


}
{ Undocumented variables

  Some variables are undocumented:
    • `%=ExitCode%`
    • `%=ExitCodeAscii%` (?)
    • `%=C:%`
    • `%__APPDIR__%` (Directory where executable is located that queried this variable with an appended backslah. Because → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] is typically located below → Windows/dirs/Windows/System32[`C:\Windows\System32`], the value of `%__APPDIR__%` usually is `C:\Windows\System32\`).

  For `%__CD__%` and `%__APPDIR__%`, see the function `RtlQueryEnvironmentVariable_U` in → Windows/dirs/Windows/System32/ntdll_dll[`ntdll.dll`].

}


sa:

  → Windows/dirs/Windows/System32/cmd_exe/batch-files#cmd-exe-batch-file-variable-expansion

  The special variables → Windows/dirs/Windows/System32/cmd_exe/batch-files/arguments[`%1`, `%2` etc, `%*` and `%0`] in → Windows/dirs/Windows/System32/cmd_exe/batch-files[batch files].

  Using the → Windows/dirs/Windows/System32/cmd_exe/variables/tilde[tilde (`~`)] and the → Windows/dirs/Windows/System32/cmd_exe/variables/colon[colon] in variables.

  → Windows/dirs/Windows/System32/cmd_exe/variables/delayed-expansion[Delayed variable expansion]

  → Windows/dirs/Windows/System32/cmd_exe/variables/CmdCmdLine[`%CmdCmdLine%`]
