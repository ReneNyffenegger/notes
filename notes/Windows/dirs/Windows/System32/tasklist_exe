$ tasklist.exe

Lists the currently running → Windows/development/process[processes (aka tasks)], with their PIDs (process identifiers). These PIDs might be used in
→ Windows/dirs/Windows/System32/taskkill_exe[`taskkill.exe`] to terminate the respective process.

{ Filtering #tasklist-fi

  With the `/FI` option, specific processes can be queried for (filtered).

  For example, the following command finds all processes that start with `note` (such as `notepad.exe`):
code {
C:\> tasklist /fi "imagename eq note*"
code }

  The wildcard (`*`) seems to only work at the end of the identifier, not at its beginning.

}
{ Unresponsive applications

  An interesting query is to use `status` to find applications that are not responding (hanging):
code {
C:\> tasklist /fi "status eq not responding"
code }

  Note: `eq not` is not an operator. The operator is `eq` and the queried status is `not responding`.

}

sa:
  → Windows/dirs/Windows/System32/taskkill_exe[taskkill.exe]

  The → Windows/PowerShell/language/cmdlet[PowerShell cmdlets] `get-process` and `stop-process`.
