$ Create Personal.xlsb from command line

The code presented on this page can be used to create a → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Excel/XLSTART/Personal_xlsb[`Personal.xlsb`] file from the command line. It requires
the → Microsoft/Office/VBScript-App-Creator.

{ Functions

  table { ll
    `addReferenceToPersonalXlsb` ☰ This is probably the most important function of all: it attaches the functionality of the created `Personal.xlsb` to the active → Microsoft/Office/Excel/Object-Model/Workbook. Because of the importance, there is a keyboard shortcut to invoke the function: `ctrl+F11`. Undo with function `removeReferenceToPersonalXlsb`.
    `ctrl+q` ☰ Copy the content of a → Microsoft/Office/Excel/Object-Model/Range/cell without a new line (see also function `copyCellWithoutNewLine`)
    `addModule`☰ Adds a → development/languages/VBA/language/module[VBA module] to the current VBA project. The optional parameter boolean `subMain` specifies if it will add a `sub main` to the module (default is `false`).
    `r1c1`, `a1` ☰ Choose → Microsoft/Office/Excel/Object-Model/Application/referenceStyle[reference style]
    `add_00ModuleLoader` ☰ 
    `isModuleNamePresent` ☰ 
    `createTestConstellation` ☰ Parameter `testFileName`: a path to a VBA file.
    `saveAsXlsm` ☰ 
    `clearUsedRange` ☰ 
    `hlp` ☰ 
    `save_` ☰ Invoked with keyboard shortcut `ctrl+s` (The created `Personal.xlsb` overwrites the default action of `ctrl+s`)
    `removeReferenceToPersonalXlsb` ☰
  table }

}


{ Source code

  { functionality.vb

    gh|Personal-Office-Templates|/Personal.xlsb/functionality.vb||

  }
  { thisWorkbook.vb

    gh|Personal-Office-Templates|/Personal.xlsb/thisWorkbook.vb||

  }
  { WinAPI.vb

    gh|Personal-Office-Templates|/Personal.xlsb/WinAPI.vb||

  }
  { create.wsf

    gh|Personal-Office-Templates|/Personal.xlsb/create.wsf||

  }

}
