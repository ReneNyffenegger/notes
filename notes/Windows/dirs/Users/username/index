$ %USERPROFILE%

The directory pointed at with the → development/environment-variable[environment variable] `%userprofile%` stores personal data of a specific → Windows/user-account[user].

The value of `%userprofile%` usually is `c:\Users\username` (`username` being lowercase of `%username%`?)

Apparently, in Windows 10, the variable `%CSIDL_PROFILE%` is equivalently used for `%USERPROFILE%`.

→ Windows/dirs/Users/username/NTUSER_DAT

{ Default sudirectories

  Predefined (or pre-installed) sub directories are

  table { lll

    ~Name~ ☰  ~German name~ ☰  ~Junction to~
    → Windows/dirs/Users/username/3D-Objects       ☰ 3D                   ☰
    → Windows/dirs/Users/username/AppData[AppData] ☰                      ☰
    Application Data                               ☰ Anwendungsdaten      ☰ → Windows/dirs/Users/username/AppData/Roaming[`%UserName%\AppData\Roaming%`] (aka `%AppData%`)
    → Windows/dirs/Users/username/Contacts         ☰                      ☰
    Cookies                                        ☰ Cookies              ☰ → Windows/dirs/Users/username/AppData/Local/Microsoft/Windows/INetCookies
    → Windows/dirs/Users/username/Desktop          ☰                      ☰
    → Windows/dirs/Users/username/Documents        ☰ Dokumente/Documents? ☰
    → Windows/dirs/Users/username/Downloads        ☰ Download             ☰
    → Windows/dirs/Users/username/Favorites        ☰ Favoriten            ☰
    → Windows/dirs/Users/username/Links            ☰ Links                ☰
    → Windows/dirs/Users/username/Local-Settings   ☰ Lokale Einstellungen ☰ → Windows/dirs/Users/username/AppData/Local
    MicrosoftEdgeBackups                           ☰ MicrosoftEdgeBackups ☰
    → Windows/dirs/Users/username/Music            ☰ Musik                ☰
    My Documents                                   ☰ Eigene Dateien       ☰ → Windows/dirs/Users/username/Documents
    NetHood                                        ☰ Netzwerkumgebung     ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Network-Shortcuts 
    → Windows/dirs/Users/username/OneDrive         ☰ OneDrive             ☰
    PrintHood                                      ☰ Druckumgebung        ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Printer-Shortcuts
    Recent                                         ☰ Recent               ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Recent
    → Windows/dirs/Users/username/Saved-Games      ☰ ?                    ☰
    → Windows/dirs/Users/username/Searches         ☰ Suchen               ☰
    SendTo                                         ☰ SendTo               ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/SendTo
    Start Menu                                     ☰ Startmenü            ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Start-Menu
    Templates                                      ☰ Vorlagen             ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/Templates
    → Windows/dirs/Users/username/Videos           ☰ Videos               ☰

  table }

    The junctions' (aka *reparse points*) name and target can be shown in → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] with → Windows/dirs/Windows/System32/cmd_exe/commands/dir#cmd-exe-dir-al[`dir /al`].

}
{ tilde in Powershell

  In → Windows/PowerShell[PowerShell], the tilde (`~`) can be used in lieu  of `%USERPROFILE%` (or `$env:USERPROFILE` or even `$home`):
code {
PS C:\> ls $env:USERPROFILE
PS C:\> ls $home
PS C:\> ls ~
PS C:\> cd ~
PS C:\> cd ~/Documents
code }

  Thus, the tilde seems to mimic the function it also has in → Linux/shell/bash[bash].

}
{ Getting the user profile's path in PowerShell

  A possible way to determine the path of a user's profile in → Windows/PowerShell is like so:
code {
PS C:\> [→ Microsoft/dot-net/namespaces-classes/System/Environment[System.Environment]]::GetFolderPath([→ Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[System.Environment+SpecialFolder]]::UserProfile)
→ Windows/dirs/Users/username[C:\Users\Rene]
code }

}

sa:
  → Windows/dirs/Users/username/AppData stores application data.

  The → development/tools/scripts/personal/cdhom_bat[`cdhom.bat`] script takes one to this directory in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe].

  → Windows/dirs/Users

  In → Windows/PowerShell[PowerShell], the home directory of a user is stored in the → Windows/PowerShell/language/variable/automatic[automatic variable] `$home`.

  → Windows/registry/tree/HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Explorer/User-Shell-Folders[`HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders`]

  The combination of the environment variables `HOMEDRIVE` and `HOMEPATH`.

  The → Microsoft/dot-net enumeration → Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[`System.Environment+SpecialFolder`].

  The equivalent of a *home directory* in → Linux is → Linux/fhs/home/username[`/home/<username>`].
