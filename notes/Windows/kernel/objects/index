$ Windows Kernel Objects
@ kernel objects

The Windows Kernel abstracts the resources it manages into so-called *kernel objects*.
-
All requests related to such objects are ultimatly handled by the ~NT Object Manager~.

The NT Object Manager organizes the kernel objects in a hierarchical structure similar to a file system.

An (opened?) kernel object is identified by a *handle*.

→ Windows/kernel[Kernel] objects include
  • → Windows/security/access-token[Access tokens]
  • Change object
  • Communication device
  • Console input
  • Console screen buffer
  • Desktop
  • Device objects
  • Event log
  • Heap
  • File objects
  • File mapping
  • Find file
  • Job (A Job object allows to manage multiple → Windows/development/process[processes] as a single unit)
  • Mailslot
  • Module
  • Mutex
  • Pipe
  • Semaphore
  • Socket
  • → Windows/file-system/NTFS#ntfs-symlinks[Symbolic links]
  • → Windows/registry/tree-structure/key[Registry keys]
  • → Windows/development/process[Processes] and → Windows/development/process/thread[threads]
  • Timer
  • Timer queue
  • Timer-queue timer
  • Kernel dispatcher objects (such as *event* and *mutex* (and semaphore?) objects)
  • Update resource
  • Callback objects (?)
  • Section objects (?)
  • Window station

? These objects are divided into *object types*:
  • executive (processes and threads)
  • filesytem
  • others (registry, devices)

The *kernel-mode environment* stores kernel objects in a (tree-like) virtual directory system which is referred to as *object namespace*.

{ Security

  Kernel objects can be assigned a *security descriptor*.
  -
  Such a descriptor restricts the set of users and type of access they have on the object.

  The other two main categories of → Windows/development/objects[objects], GDI-objects and User-Interface-objects, are not.

}
{ Misc

  While everything is a file in Unix, in Windows, everything seems to be an object.

}

sa:

  The object namespace can be shown with the Sysinternals tool → Windows/tools/Sysinternals/Winobj[Winobj].
  -
  Alternatively, there's also the PowerShell module → Windows/PowerShell/modules/NtObjectManager[NtObjectManager] which allows to list these objects.

  The → Microsoft/dot-net/namespaces-classes/System/Security/AccessControl/ResourceType[`System.Security.AccessControl.ResourceType`] enum.
