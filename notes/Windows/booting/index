$ booting Windows

{ Boot loader

  The *boot loader* scans the → Windows/registry[registry] for drivers whose
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Services/_driver_name_#reg-services-start[start] value
  (→ Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Services/_driver_name_[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\driverName`])
  is 0 or 1.
  -
  These drivers are loaed into memory in the order that is specified in
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/ServiceGroupOrder[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\ServiceGroupOrder`]

}
{ Loading sub systems

  TODO: The value of → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/SubSystems#reg-subsystem-required[`Required`] under the → Windows/registry[registry] key
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/SubSystems[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\SubSystems`].

}
{ Determine last boot time

code {
C:\> → Windows/dirs/Windows/System32/systeminfo_exe[systeminfo] | → Windows/dirs/Windows/System32/findstr_exe[findstr] "System Boot Time:"
code }

}
{ Safe booting #windows-safe-booting

  When Windows is booted in *safe mode*, a minimum of functionality is provided:
    • VGA monito
    • No network
    • Microsoft mouse driver
    • Minimal set of device drivers

  See also: → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/SafeBoot[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SafeBoot`]

}
{ TODO

  → Windows/dirs/Windows/System32/autochk_exe[`autochk.exe`]

  The value of → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Winlogon#reg-sfcscan[`ScfValue`] under the
  → Windows/registry[registry] key → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Winlogon[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon`]

  During boot time, the → Windows/dirs/Windows/System32/services_exe[Service Control Manager (SCM)] is started.

  "
    Every time the NT kernel initializes, it always turns on the
    TerminalServer mask in ProductSuite. See the implementation of
    ExpWatchProductTypeInitialization in `minkernel\ntos\ex\exinit.c` (ExpSuiteMask is
    the variable of interest).
  " [ Files below → Windows/dirs/Windows/servicing/Editions ] 

  The creation of the → Windows/Management-Instrumentation[WMI namespaces].

  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows/CurrentVersion/RunOnce[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce`]

}

sa:

  → Windows/dirs/Windows/System32/Boot

  → Windows/registry[Registry] key → Windows/registry/tree/HKEY_LOCAL_MACHINE/BCD00000000[`HKEY_LOCAL_MACHINE\BCD00000000`].

  → Windows/dirs/Windows/System32/msconfig_exe[`msconfig.exe`] is a tool to manage to startup process.

  The → Windows/tools/Sysinternals tool → Windows/tools/Sysinternals/Autoruns64[Autoruns] reveals which programs are run during
  → Windows/booting[Windows bootup] or when a → Windows/user-account#win-user-log-in[user logs in].
