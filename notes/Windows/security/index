$ Windows security
@ security

{ Local Security Authority (LSA)

  The *Local Security Authority* (LSA) is → Windows' security subsystem.

  The *LSA Database* is the part of the → Windows/user-account[user account] database that stores account privilege information (account rights) and domain security policy information.

}

{ Security principals #win-security-principals

  A *security principal* is any entity that can be → development/security/authentication[authenticated] by the → Windows[Windows OS].

  Security principals are:
     • machines
     • domain computer accounts
     • → Windows/user-account[user accounts]
     • security groups

  Security principals are identified by → Windows/security/SID[SIDs]. A name is just a more readable representation of a SID.

}

{ TODO

  { Effective permissions on objects

    Objects, such as files, → Windows/registry[registry] keys, → Windows/services[services], → Windows/development/process[processes], → Windows/kernel/objects etc. can be assigned
   *effective (?) permissions*.

    These permissions can be viewed with the Sysinternal command line tool `AccessChk` (and `AccessEnum` for registry keys and files/directories).


  }
  { Passwords

    A → development/security/password[passwords] can be up to 128 → development/Unicode[Unicode] characters.

    The password is converted into Unicode characters and then hashed with MD4 (NLTMv1, resulting in a 128 bit (8 byte) value) or MD5 (NTLVv2).

  }
  { Hosts file

    The → Windows/dirs/Windows/System32/drivers/etc/hosts[`hosts` files] is a target of attackers, for example to redirect internet access to the attacker's own servers.

  }

}

sa:
  → Windows/security/privileges[Privileges]

  The → Windows/security/credential-manager[Credential Manager]

  → Windows/registry/tree/HKEY_LOCAL_MACHINE/SECURITY[`HKEY_LOCAL_MACHINE\SECURITY`] stores the *Lsass policy database*.
