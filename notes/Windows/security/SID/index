$ Windows security identifiers (SID)
@ SID

A SID is a variable length binary value that is used to identify entities (→ Windows/security#win-security-principals[security principals]) that somehow act in a Windows system. Such entities include
  • → Windows/user-account[users]
  • local and domain → Windows/user-account/group[groups]
  • computers
  • → Windows/user-account/domain[domains]
  • domain members
  • → Windows/services[services]
  • … ?

With their identifying property, SIDs are fundamental for → Windows/security[Windows security].

In theory (and practice?), SIDs are supposed to be unique.

{ Friendly names for SIDs

  Most SIDs are associated with a «friendly name», which is just a more readable representation of a SID. A notable exception are → #capabilty-sid[capability SIDs].

  Because such names are not necessarily unique, Windows internally works with SIDs rather than their corresponding names.

  The Sysinternal tool → https://docs.microsoft.com/en-us/sysinternals/downloads/psgetsid[PsGetSid] is able to translate between SIDs and names.

}
{ Textual representation of SIDs

  Typically, a textual representation of a SID might look like this: `S-1-5-21-2761044393-2226150802-3019316526-1224` although shorter ones are possible, like `S-1-5-18`.

  A textual representation of a SID always starts with `S-1-`. The `S` stands for *SID* and the `1` is the *structure revision number*. There is only one revision: `1`.

  { Security Authority

    The third part represents the *identifier authority* which identifies the agent that issued and owns the SID:

    The possible values are:
      • 0 (`SECURITY_NULL_SID_AUTHORITY`) is the owner of the *null account SID* `S-1-0-0`.
      • 1 (`SECURITY_WORLD_SID_AUTHORITY`, *everyone group*) also has one SID only: `S-1-1-0`.
      • 2 (`SECURITY_LOCAL_SID_AUTHORITY`, *local group*) also has one SID only: `S-1-2-0`.
      • 3 (`SECURITY_CREATOR_SID_AUTHORITY`): SIDs `S-1-3-0` through `S-1-3-5`)
      • 4 (`SECURITY_NON_UNIQUE_AUTHORITY`) is not used
      • 5 (`SECURITY_NT_AUTHORITY`) owns → Windows/user-account[accounts] that are managed by the NT security subsystem.
      • 9 (`SECURITY_RESOURCE_MANAGER_AUTHORITY`) …
      • 16 (`SECURITY_MANDATORY_LABEL_AUTHORITY`), see → Windows/development/process#win-process-integrity-level[process integrity levels]

  }
  { Subauthority identifiers

    The following numbers, if present, are subauthority idientifiers.

    The last subauthority identifier is a *relative identifier* (RID)

    The subauthority identifiers except the relative identifier identify a → Windows/user-account/domain.


  }
  { Relative identifier (RID)

    The *RID* is the last value in the sequence of subauthority identifiers. It is used to distinguish one account or groups
    within a → Windows/user-account/domain from one another.

    → Windows/development/WinAPI/data-types#winnt_h[`winnt.h`] has the following note concerning RIDs:
    "
      the relative identifier values (RIDs) determine which security
      boundaries the SID is allowed to cross.  Before adding new RIDs,
      a determination needs to be made regarding which range they should
      be added to in order to ensure proper *SID filtering*
    "

  }

}
{ User accounts etc.

  The SIDs of → Windows/user-account[user accounts] always start with `S-1-5-21-…` and has an RID that is greater or equal to 1000.

  A user can query her SID with
code {
→ Windows/dirs/Windows/System32/whoami_exe#win-whoami-user[whoami] /user
code }

  The RID for the administrator account is 500 and for the guest account is 501.

}
{ Relative identifiers (RIDs)

  An *administrator* always has an RID of 500.

}
{ Well known SIDs

  Each user's SIDs is unique accross all Windows installations.
  
  That said, some SIDs are *well known* and equal on all systems or start with a well known prefix.
  -
  Here are a few of them
  table { lll
    `S-1-0-0` ☰  The *null/nobody SID* (used when SID is unknown) ☰ `Everyone` `Everyone`
    `S-1-1-0` ☰  World, which is the group that *all* (except anonymous) → Windows/user-account[users] belong to. ☰
    `S-1-2-0` ☰  *Local* ☰ `LOCAL`
    `S-1-2-1` ☰  *Console Logon* ☰ `CONSOLE LOGON`
    `S-1-3-0` ☰  *Creator owner id* ☰
    `S-1-3-1` ☰  *Creator group id* ☰
    `S-1-3-2` ☰  *Creator owner server id* ☰
    `S-1-3-3` ☰  *Creator owner group id* ☰
    `S-1-3-4` ☰  *Owner rights* ☰
    `S-1-5-1` ☰  Dialup ☰
    `S-1-5-2` ☰  The *Network group*, which represents users who have logged on to a machine from the network. ☰
    `S-1-5-3` ☰  Batch ☰
    `S-1-5-4` ☰  Interactive ☰ `NT AUTHORITY\INTERACTIVE`
    `S-1-5-5-x-y` ☰ is a → Windows/security/SID/S-1-5-5-x-y_logon[logon SID] which identifies *logon → Windows/development/session[session]*. ☰
    `S-1-5-6` ☰  Service (compare with `S-1-5-80…`) ☰
    `S-1-5-7` ☰  *Anonymous logon* ☰
    `S-1-5-8` ☰  *Proxy* ☰
    `S-1-5-9` ☰  *Enterproce DC (EDC)*, aka → Windows/user-account/domain#windows-domain-controller[domain controller] account ☰
    `S-1-5-10` ☰  *self* ☰
    `S-1-5-11` ☰  User that is authenticated somewhere ☰ `NT AUTHORITY\Authenticated Users`
    `S-1-5-12` ☰  Running rectricted code ☰
    `S-1-5-13` ☰  Running on → Windows/Remote-Desktop-Services[Terminal Server] ☰
    `S-1-5-14` ☰  Remote logon ☰ `NT AUTHORITY\Authenticated Users`
    `S-1-5-15` ☰  This organization ☰ `NT AUTHORITY\This Organization`
    `S-1-5-17` ☰  IUser ☰
    `S-1-5-18` ☰  *Local System* (the SID for the *local system account*). ☰
    `S-1-5-19` ☰  *Local Service* ☰
    `S-1-5-20` ☰  *Network Service* ☰
    `S-1-5-21-…` ☰  User accounts (and also domains?) ☰
    `S-1-5-32-…` ☰  SIDs that pertain to the `BUILTIN` domain ☰
    `S-1-5-32-544` ☰  → Windows/user-account/group/Administrators[`BUILTIN\Administrators`] ☰
    `S-1-5-32-546` ☰  The *Guests group* ☰
    `S-1-5-80` ☰  *all → Windows/services[services]* ☰
    `S-1-15-3-…` ☰  All *capability SIDs* start with `S-1-15-3`. ☰
  table }


}
{ Capability SIDs #capabilty-sid


  A *capability SID* grants access to a specific resource. Such resources include documents, cameras, locations etc.

  In order for an application to access a given resource, it needs to have the associated capability SID, otherwise, the requested access is denied.

  Capability SIDs start with `S-1-15-3-…`.

  Capability SIDs that the system is aware of are stored in the Registry value `AllCachedCapabilities` under
   → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/SecurityManager/CapabilityClasses#AllCachedCapabilities[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SecurityManager\CapabilityClasses`].

  Capability SIDs don't resolve into friendly names.

}

sa:
  The computer's SID is stored in the → Windows/registry[registry] under → Windows/registry/tree/HKEY_LOCAL_MACHINE/SECURITY/SAM/Domains/Account[`HKEY_LOCAL_MACHINE\SECURITY\SAM\Domains\Account`]
  
  SIDs are found in the → Windows/registry in
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/ProfileList[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList`]
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/SECURITY/Policy/Accounts[`HKEY_LOCAL_MACHINE\SECURITY\Policy\Accounts`] (`S-1-5-18` is missing under this key)
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows/CurrentVersion/Group-Policy[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Group Policy`]
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/IdentityStore/Cache[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\IdentityStore\Cache`]
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Services/bam/State/UserSettings[`HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\bam\State\UserSettings`]
    • The keys under the → Windows/registry/tree-structure/hive[hive] → Windows/registry/tree/HKEY_USERS[`HKEY_USERS`]
    • …(?)

  The authority 16 identifies a process's → Windows/development/process#win-process-integrity-level[integrity level].

  → Windows/development/WinAPI/data-types#winnt-h-SID[winnt.h]
