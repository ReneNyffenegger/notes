$ PowerShell examples

→ Windows/PowerShell/examples/registry[Access the Registry]

→ Windows/PowerShell/examples/message-box[Creating a Message Box]

→ Windows/PowerShell/examples/WinAPI/writing-into-notepad-with-SendMessage[Writing into a notepad window with `SendMessage()`]

→ Windows/PowerShell/examples/WinAPI/modify-mouse-speed[Setting the speed of the Mouse]

{ Find files that are newer than n days #ps-find-files-newer-than-n-days

  The following → Windows/PowerShell/pipeline finds files that are newer than 4 days, measured by last write time.

code {
→ Windows/PowerShell/command-inventory/noun/childItem/get[get-childItem] -path m:\path\to\dir -recurse | → Windows/PowerShell/command-inventory/noun/object/where[where-object] {→ Windows/PowerShell/language/variable/automatic/psItem[$_].lastWriteTime -gt (→ Windows/PowerShell/command-inventory/noun/date/get[get-date]).addDays(-4)}
code }

  In → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`], a similar thing is possible with → Windows/dirs/Windows/System32/forfiles_exe[`forfiles.exe`].

}
{ Simulate activity #ps-simulate-activity

  The following script moves the cursor one to the left and then one to the right every minute. This might be useful on remote sessions where the remote system logs you out after a certain amount
  of inactivity: the remote system is fooled into thinking that something is happening.

  gh|about-powershell|/examples/simulate-activity.ps1||

  See also → development/languages/VBA/language/statements/sendKeys[VBA statement sendkeys].

}

sa:
  → Windows/PowerShell
