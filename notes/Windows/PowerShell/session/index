$ PowerShell session
@ session

A *session* is the environment in which a → Windows/PowerShell[PowerShell] → Windows/development/process[process] runs.
-
This environment allows to execute → Windows/PowerShell/language/command[commands] and add items to it.

{ Container for items

  A session is a logical container for different kinds items
    • → Windows/PowerShell/language/module[modules]
    • snap ins
    • → Windows/PowerShell/language/variable[variables]
    • → Windows/PowerShell/language/function[functions]
    • → Windows/PowerShell/language/alias[aliases]

  These items exist in the session only. When the session ends, these items go with it.

}
{ PSSessions #psSession

  A *PsSession* is a *user-managed* session.

  A PsSessions is typically used to run → Windows/PowerShell/language/command[commands] on a remote computer.
  -
  It is possible, however, to run commands remotely without creating a PsSession when using remote-enabled cmdlets (such as
  → Windows/PowerShell/command-inventory/noun/command/invoke[`invoke-command`]) and their → Windows/PowerShell/command-inventory/parameter/computerName[`-computerName` parameter].

  { Cmdlets

    The → Windows/PowerShell/command-inventory/noun/psSession[cmdlet noun `psSession`] deals with sessions.

  }

}

sa:
  The → Windows/PowerShell/language/variable/automatic[automatic] variable → Windows/PowerShell/language/variable/automatic/PID[`$PID`] stores the current session's
  process identifier.

  The *extended types* of the current session can be manipulated with the → Windows/PowerShell/command-inventory/noun/typeData[cmdlet noun `typeData`].



  The names of the snap-ins of the current session can be exported with → Windows/PowerShell/command-inventory/noun/console/export[`export-console`].
