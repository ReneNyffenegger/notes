$ PowerShell: script

{ Parameters

  { Unnamed

code {
→ Windows/PowerShell/command-inventory/noun/strictMode/set[set-strictMode] -version latest

$first_argument  = $args[0]
$second_argument = $args[1]
…
code }

  }
  { Named arguments

code {
→ Windows/PowerShell/language/statement/function/parameters#ps-parameters-param-stmt[param] (
  $username,
  $password
)

→ Windows/PowerShell/command-inventory/noun/strictMode/set[set-strictMode] -version latest

…
code }

  Using *named* arguments has the benefit that the script user can invoke the script with explicitely named argument names:
code {
.\the-script.ps1 -username rene -password theMostSecretSecret
code }

  Note: the → Windows/PowerShell/command-inventory/noun/strictMode/set[`set-strictMode`] must follow the `param` statement, otherwise, PowerShell will complain with the error message
  *param : The term 'param' is not recognized as the name of a cmdlet, function, script file, or operable program.…*.

  }


}
