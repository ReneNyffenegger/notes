$ PowerShell: providers
@ provider

A *provider* allows PowerShell to connect to external data sources (aka data stores) as though they were file systems. Therefore, providers are especially useful if the → development/Data is hierarchical in nature, like, for example,
*Active Directory* or the → Windows/registry[registry].

A provider implements one or more ~→ Windows/PowerShell/language/provider/drive[drives]~ each of which contains a (hierarchical) tree.
-
Within a drive, the data itself is located and accessed by a ~→ Windows/PowerShell/language/provider/path[path]~.

{ Built-in providers

  table { ll

    ~Drive~      ☰ ~Data store~
    alias:       ☰ → Windows/PowerShell/language/alias[aliases]
    cert:        ☰ → development/security/cryptography/X_509[x509] ceritificates
    → Windows/PowerShell/language/provider/env[env:]  ☰ Windows → development/environment-variable[environment variables]
    (*)          ☰ File system (drives, directories, files)
    function:    ☰ functions
    hklm: hkcu:  ☰ → Windows/registry[registry]
    variable:    ☰ → Windows/PowerShell/language/variable[Variables]
    wsman:       ☰ WS management configuration information

  table }
  
  Arguably, the most used provider is the FileSystem provider.

}
{ Available providers

  Available providers are displayed with the `get-psProvider` → Windows/PowerShell/language/cmdlet[cmdlet].

}
{ Cmdlets

  In order to read, write or delete data in a data store, a *data item* is needed. Such an element represents, for example, a file, a directory or a → Windows/registry/tree-structure/key[registry key].
  -
  PowerShell encapuslates this functionality in the → Windows/PowerShell/command-inventory/noun/item[`item` cmdLet noun].

  Each of this items is associated with and stored in hierarchically structured location, think file system path. The → Windows/PowerShell/command-inventory/noun/location[`location` cmdLet noun]
  allows to change the current location.

  The data itself that an *item* stores can be modified with the → Windows/PowerShell/command-inventory/noun/content[`content` cmdLet noun].

  Items are also associated with properties, for example the file creation date in a drive-provider. These properties can be modified with the
  → Windows/PowerShell/command-inventory/noun/itemProperty[`itemProperty` cmdLet noun].

  Because the locations are organized in trees, an item's child items are found with the → Windows/PowerShell/command-inventory/noun/childItem[`childItem` cmdLet noun].

  The → Windows/PowerShell/command-inventory/noun/path[`path` cmdLet] deals with the textual representation of locations and wildcard operations.

  → Windows/PowerShell/language/cmdlet[cmdlets] related to providers are
    • `get-psProvider` provides information about a *provider*
    • `get-psDrive` provides information about a → Windows/PowerShell/language/provider/drive[drive]

}
{ TODO

  `help filesystem`

}
sa:

  The → Windows/PowerShell/command-inventory/noun/psProvider[cmdLet noun `psProvider`] has the cmdLet → Windows/PowerShell/command-inventory/noun/psProvider/get[`get-psProvider`] which shows the currently available providers (in the current session).
