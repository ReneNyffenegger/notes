$ PowerShell: providers
@ provider

A *provider* allows PowerShell to connect to external data sources. Providers are especially useful if the → development/Data is hierarchical in nature, like, for example,
*Active Directory* or the → Windows/registry[registry].
-
Because of the hierarchical nature, the data can then be accessed and navigated in a *file system like fashion*.

A provider implements one or more ~→ Windows/PowerShell/language/provider/drive[drives]~ each of which contains a (hierarchical) tree.
-
Within a drive, the data itself is located and accessed by a ~→ Windows/PowerShell/language/provider/path[path]~.

{ Built-in providers

  table { ll

    ~Drive~      ☰ ~Data store~
    alias:       ☰ → Windows/PowerShell/language/alias[aliases]
    cert:        ☰ → development/security/cryptography/X_509[x509] ceritificates
    → Windows/PowerShell/language/provider/env[env:]  ☰ Windows → development/environment-variable[environment variables]
    (*)          ☰ File system (drives, directories, files)
    function:    ☰ functions
    hklm: hkcu:  ☰ → Windows/registry[registry]
    variable:    ☰ Variables
    wsman:       ☰ WS management configuration information

  table }
  
  Arguably, the most used provider is the FileSystem provider.

}
{ Available providers

  Available providers are displayed with the `get-psProvider` → Windows/PowerShell/language/cmdlet[cmdlet].

}
{ Cmdlets

  → Windows/PowerShell/language/cmdlet[cmdlets] related to providers are
    • `get-psProvider` provides information about a *provider*
    • `get-psDrive` provides information about a → Windows/PowerShell/language/provider/drive[drive]

}
{ TODO

  `help filesystem`

}
sa:
  → Windows/PowerShell/command-inventory/noun/psProvider[The cmdLet noun `psProvider`]
