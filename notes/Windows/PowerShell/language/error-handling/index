$ PowerShell: error handling

{ Terminating and non-terminating errors #ps-error-types

  → Windows/PowerShell distinguishes between *terminating* and *non-terminating* errors.

  Terminating errors are raised by calling
  the method → Microsoft/dot-net/namespaces-classes/System/Management/Automation/Cmdlet#dotnet-cmdlet-ThrowTerminatingError[`ThrowTerminatingError`] of the
  class `System.Management.Automation.Cmdlet[`System.Management.Automation.Cmdlet`].
  -
  It seems that a non-terminating error can be caused by calling → Microsoft/dot-net/namespaces-classes/System/Management/Automation/Cmdlet#dotnet-cmdlet-Write_[`WriteError()`].

  The → Windows/PowerShell/language/variable/preference[preference variable] `$errorActionPreference` controls how PowerShell reacts to a non-terminating error.

}

sa:
  The → Windows/PowerShell/language/statement[statements]
    • → Windows/PowerShell/language/statement/try-catch-finally[`try` … `catch` … `finally`]
    • → Windows/PowerShell/language/statement/trap[`trap`]

The → Windows/PowerShell/language/variable/automatic[automatic] variable → Windows/PowerShell/language/variable/automatic/error[`$error`].

The → Windows/PowerShell/command-inventory/noun/error/write[`write-error`] cmdLet.
