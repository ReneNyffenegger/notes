$ PowerShell: logical operators

The logical → Windows/PowerShell/language/operator[operators] in → Windows/PowerShell are: `-and`, `-or`, `-xor`, `-not` and `!`.
-
The exclamation mark is equivalent to `-not`.

A logical operator evaluates to a *boolean* → Windows/PowerShell/language/type[data type].

{ Short-circuiting

  The logical operators perform *short-circuit evaluation*, that is, only parts of an expression with logical operators are evaluated that are needed to determine the result.

  For example, if the left argument to `-or` is → Windows/PowerShell/language/variable/automatic/true-false[`$true`], the right argument does not need to be looked at because the
  entire expression is `$true` anyway.

  In the following example, the → Windows/PowerShell/command-inventory/noun/host/write[`write-host`] cmdlet is not invoked:
code {
PS C:\> $true -or (write-host 'Evaluated')
code }

  However, here it is:
code {
PS C:\> $false -or (write-host 'Evaluated')
code }
  

}

sa:

  The → Windows/PowerShell/language/statement/if[`if` statement]

  → Windows/PowerShell/language/operator[operators]
