$ PowerShell: access module-private variables with the call operator

The → Windows/PowerShell/language/operator/call[call operator `&`] allows to access → Windows/PowerShell/language/variable[variables] that are private to a
→ Windows/PowerShell/language/module with the following syntax:
code {
& $moduleInfo { … }
code }

`$moduleInfo` is an instance of → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSModuleInfo[`System.Management.Automation.PSModuleInfo`] (which can be obtained, for example, with
→ Windows/PowerShell/command-inventory/noun/module/get[`get-module`]) and `{ … }` is a → Windows/PowerShell/language/scriptblock (which is executed in the module's «context»).

This is demonstrated with the following simple example. First, we need a module (`mdl.psm1`) with a private variable `$private_variable`:
gh|about-PowerShell|/language/operator/call/mdl.psm1||

Then, we load the module into the current → Windows/PowerShell/session (→ Windows/PowerShell/command-inventory/noun/module/import[`import-module ./mdl.psm1`]),
use the functions `incVar` and `decVar` to modify the value of the internal variable and then print its value with the mentioned syntax:
gh|about-PowerShell|/language/operator/call/access-module-variable.ps1||
