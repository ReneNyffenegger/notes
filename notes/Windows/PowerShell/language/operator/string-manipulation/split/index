$ PowerShell: -split operator

The `-split` operator splits a string into an → Windows/PowerShell/language/type/array[array] of strings.

There is a unary and a binary variant of the operator;

The unary variant splits on consecutive whitespaces:
code {
PS C:\> -split "one two     three`tfour`t `tfive"
one
two
three
code }

For the binary variant, the first operand is the string to be split, the second argument the pattern on which to split:
code {
PS C:\> 'one two   three' -split ' '
one
two


three
code }

It's possible to → development/regular-expressions[regular expressions] in the second oparand
code {
PS C:\> "one two   three`t `tfour" -split '\s+'
one
two
three
four
code }

In order to retain the value that separates the splitted parts, a regexp-capturing group needs to be used;
code {
PS C:\> '12+345/6*78-9' -split '([+/\-*])'
12
+
345
/
6
*
78
-
9
code }

The result of a split can be joined, for example to produce a nicer string:
code {
PS C:\> '12+345/6*78-9' -split '([+/\-*])' -join ' '
12 + 345 / 6 * 78 - 9
code }

sa:
  → Microsoft/dot-net/namespaces-classes/System/String/Split
