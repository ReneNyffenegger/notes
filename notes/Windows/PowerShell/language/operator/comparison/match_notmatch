$ PowerShell: -Match and -Notmatch regular expression matching operators

`-match` and `-nomatch` are → Windows/PowerShell/language/operator/comparison[PowerShell comparison operators] that compare a string value against a → development/regular-expressions[regular expression].

`-match` returns true if the tested string matches the given regular expression. `-notmatch` returns true if the tested string does not match the given regular expression.

By default, `-match` and `-nomatch` treat strings case-insensitvely (as is the case for all, or most(?) string operations in PowerShell).
-
In order to use case-sensitive regular expressions, `-cmatch` or `-cnomatch` must be used. It is possible to explicitly state an insensitive match with `-imatch` and `-inomatch`.

{ Capture matched portions in the $matches variable

  The matched portions of the tested string are captured in the → Windows/PowerShell/language/variable/automatic/matches[`$matches` (array) variable].
  -
  The first element of this array stores the entire match, the subsequent elements the individual parts that were captured with
  parentheses:
  gh|about-PowerShell|/language/operator/comparison/match_notmatch/matches-variable.ps1||

  For easier reading, it's also possible to capture a matched portion of the text with name-tag. This requires the capturing parenthesis to look look like so:
  `(?<NAME>REGEXP)`. `NAME` then becomes the key in the `$matches` → Windows/PowerShell/language/type/hash-table[hash table]:
  gh|about-PowerShell|/language/operator/comparison/match_notmatch/named-capture-group.ps1||

}
{ Misc


 `-match` is the only → Windows/PowerShell/language/operator that is not allowed in *DATA sections*.

}
sa:

  The `-replace` operator also uses regular expressions.

  → Windows/PowerShell/language/operator/comparison[Comparison operators]
