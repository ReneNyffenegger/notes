$ PowerShell: Pipeline Chain Operators

The *pipeline chain operators* are `&&` and `||`. They differ from → Windows/PowerShell/language/operator[other operators] in that they connect
two → Windows/PowerShell/pipeline[pipelines] rather than are being used in expressions.

`&&` runs the next pipeline if the previous failed succeed, `||` runs the second pipeline if the previous one failed.

If a pipeline is considered successful is determined by the value of → Windows/PowerShell/language/variable/automatic/question-mark[`$?`] (and
→ Windows/PowerShell/language/variable/automatic/lastExitCode[`$lastExitCode`] ?).

The first pipeline is successful, the second one is not run:
code {
write-host 'first pipeline' || write-host 'second pipeline'
code }

The first pipeline is successful, so the seoncd on is run as well:
code {
write-host 'first pipeline' && write-host 'second pipeline'
code }

The first pipeline fails, so the second one is executed:
code {
no-such-command || write-host 'second pipeline'
code }

The first pipeline fails, so the second one is not executed.
(Note, if → Windows/PowerShell/language/variable/preference/errorActionPreference[`$errorActionPreference`] is set to stop, the second pipeline is not run when the first pipeline fails).
code {
no-such-command && write-host 'second pipeline'
code }


sa:
  → Windows/PowerShell/language/operator/call[The call operator (`&`)]
