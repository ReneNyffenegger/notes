$ PowerShell: literals

PowerShell has four types of literals:
  • integer
  • real
  • string
  • type

{ Integer literals

  { Data type #ps-int-literal-datatype

    An integer literal allows to specify its data type with one of the following suffixes. Most of those suffixes were added only with
    PowerShell version 6.2, though
    table { ll

      ~Suffix~ ☰ ~Type~
      `y`, `uy` ☰ `System.SByte`, `System.Byte`
      `s`, `us` ☰ `System.Int16`, `System.UInt16`
      `l`, `ul` ☰ `System.Int64`, `System.UInt64`
      `u` ☰ `System.Int32`
      `n` ☰ → Microsoft/dot-net/namespaces-classes/System/Numerics/BigInteger/index[`System.Numerics.BigInteger`]
    table }

    See also → Microsoft/dot-net/namespaces-classes/System/_integral-numeric-types[integral numeric types in .NET].

  }
  { Multipliers #ps-int-literal-multiplier

    PowerShell provides a few multipliers:
    table { ll
      `kb` ☰ Kilobyte = 2¹⁰
      `mb` ☰ Megabyte
      `gb` ☰ Gigabyte
      `tb` ☰ Terabyte
      `pb` ☰ Petabyte
    table }

code {
PS C:\> 4kb * 4
16384
code }

    Compare these multipliers with the → development/Data/prefixes[prefixes for data units] (such as kilo-meter).

  }

}
{ String literals

  { Embed characters in hexadecimal notation

    In order to insert characters in hexadecimal notation, `$([→ Microsoft/dot-net/namespaces-classes/System/Char[char]]0x..)` must be used, for example:
code {
"hello $([char]0x40) world$([char]0x0d)$([char]0x0a)next line"
code }

  }
  { Here document

    The `@"…"@` can be used like a → Linux/shell/bash/scripts/here-document[here document]. → Windows/PowerShell/language/variable[Variables] are expanded and the string may contain apostrophes:
    gh|about-powershell|/language/lexical-structure/token/literal/expandable-here-string.ps1||

code {
The number is: 42,
and it's value "forty-two"
code }

   Note that there must be no character between the starting `@"` and the following → development/line-break[end of line] (Error message *No characters are allowed after a here-string header but before the end of the line.*).
   -
   Similarly, the terminating `"@` must be placed at the start of a line.

  }

}
