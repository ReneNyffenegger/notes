$ PowerShell: automatic variables

Automatic variables are created by → Windows/PowerShell[PowerShell]. They store the state of PowerShell.

`$^` and `$$`: the first and last → Windows/PowerShell/language/lexical-structure/token[token] that was received by a → Windows/PowerShell/session[session].

`$?` a boolean (`$true` or `$false`) that contains the status of the last operation.
-
Compare with `$lastExitCode` which contains the eixt code of the last native command or script that was run.

→ Windows/PowerShell/language/variable/automatic/psItem[`$_`] for which `$PsItem` is an alias. This automatic variable only makes sense inside a → Windows/PowerShell/language/scriptblock[script block] that is evaluated multiple times within a
→ Windows/PowerShell/pipeline[pipeline].

`$args` Used for example for → Windows/PowerShell/language/statement/function/parameters#ps-param-args[function parameters]

`$consoleFileName`

`$error`

`$event`

`$eventSubscriber`

`$executionContext`

`$input` is set within the → Windows/PowerShell/language/function/begin-process-end-block[`process` and `end` block of functions] within → Windows/PowerShell/pipeline[pipelines] and refers to the
→ Windows/PowerShell/language/object[objects] as they're being processed from the function.

`$isCoreCLR`

`$isLinux`, `$isMacOS` and `$isWindows`

`$lastExitCode`

`$true` and `$false`

`$foreach`

`$home` is equivalent to `$env:homeDrive$env:homePath` and points to a → Windows/user-account[user's] home directory (for example → Windows/dirs/Users/username[`C:\Users\username`]).
code {
PS C:\> Windows/PowerShell/command-inventory/noun/output/write[write-output] $home`n$env:homeDrive$env:homePath
code }

`$host`

→ Windows/PowerShell/language/variable/automatic/matches[`$matches`] is a collection that is populated when using → development/regular-expressions[regular expressions] with the
→ Windows/PowerShell/language/operator/comparison[`-match`] operator.

→ Windows/PowerShell/language/variable/automatic/myInvocation[`$myInvocation`]

`$nestedPromptLevel`

→ Windows/PowerShell/language/variable/automatic/null[`$null`]

→ Windows/PowerShell/language/variable/automatic/PID[`$PID`]

`$psBoundParameters`

→ Windows/PowerShell/language/variable/automatic/profile[`$profile`]

→ Windows/PowerShell/language/variable/automatic/PsCmdLet[`$psCmdlet`]

`$psCulture`

`$psDebugContext`


→ Windows/dirs/Windows/System32/WindowsPowerShell/vn_m[`$psHome`] stores the path the the PowerShell installation directory (Usually
→ Windows/dirs/Windows/System32/WindowsPowerShell/vn_m[`C:\Windows\System32\WindowsPowerShell\v1.0`]).
-
For example, *predefined views* are stored in this directory: `ls $pshome -filter *.format.ps1xml`

→ Windows/PowerShell/language/variable/automatic/psEdition[`$psEdition`] indicates the used .NET runtime (PowerShell version 5.1 or higher) 

`$PSModuleAutoLoadingPreference` controls the → Windows/PowerShell/language/module[module] autoloading behavior.

When running a PowerShell script, `$PsScriptRoot` contains the path of the directory where that script is located. Otherwise, the value is
→ Windows/PowerShell/language/variable/automatic/null[`$null`].

`$PsUICulture`

→ Windows/PowerShell/language/variable/automatic/PsVersionTable[`$PsVersionTable`]

`$Pwd`

`$Sender`

`$ShellID` whose value might be `Microsoft.PowerShell`.

`$SourceArgs`

`$SourceEventArgs`

`$switch`

→ Windows/PowerShell/language/variable/automatic/this[`$this`]

sa:
  → Windows/PowerShell/language/variable[Variables]
