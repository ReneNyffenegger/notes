$ PowerShell: The automatic variable $HOME
@ $home

`$home` is equivalent to `$env:homeDrive$env:homePath` and points to a → Windows/user-account[user's] home directory (for example → Windows/dirs/Users/username[`C:\Users\username`]).

code {
PS C:\> → Windows/PowerShell/command-inventory/noun/output/write[write-output] $home`n$env:homeDrive$env:homePath
code }

The home directory can be abbreviated with the *tilde*:
code {
ls ~/*
cd ~
code }

{ Changing value of $home

  `$home` is read-only, its value cannot simply be changed by assigning a new value to it:
code {
PS: C:\Users\rene> $home = 'c:\xyz'
Cannot overwrite variable HOME because it is read-only or constant.
…
code }

  It's possibly, however, to remove the variable with the `-force` option in the following command…
code {
PS: C:\Users\rene> → Windows/PowerShell/command-inventory/noun/variable/remove -force home
PS: C:\Users\rene> $home = 'c:\xyz'
code }

  Note, that the tilde still is an abbreviation for the correct home directory:
code {
PS: C:\Users\rene> ls ~
code }

}

sa:

  → Windows/PowerShell/language/variable/automatic/pwd[`$pwd`] stores the current working directory.

  Other → Windows/PowerShell/language/variable/automatic[automatic variables]
