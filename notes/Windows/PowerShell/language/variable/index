$ PowerShell: variables

A *variable* stores a value of a specific → Windows/PowerShell/language/type[type]. The variable itself, however, is not *typed*, although it can be *constrained* to hold a specific type.

A variable to which no value was assigned has the value `$null`. The `test-path` → Windows/PowerShell/language/cmdlet[cmdlet] checks if a variable has been assigned a value.

{ Categories of variables

  Variables can be categorized like so:
    • static
    • instance
    • array element
    • hashtable key/value pair
    • parameter
    • ordinary
    • provider dirves

}
{ Constraining variable types

code {
[int] $theNum = 42
code }

  See also → Windows/PowerShell/language/statement/function/parameters#ps-param-constrained-type[constrained types for function parameters].

  Variables in the `env:`, `alias:` and the *file system* namespaces are constraint to type `string`.
  -
  Variables in the `function:` namespace are constraint to the type `scriptblock`.

}
