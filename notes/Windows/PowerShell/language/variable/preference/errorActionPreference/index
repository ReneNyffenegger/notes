$ PowerShell: the preference variable $errorActionPreference
@ errorActionPreference

The `$errorActionPreference` → Windows/PowerShell/language/variable/preference[preference variable] can be set to a value of the
→ Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference` enum].

{ Simple example

  The following simple script tries to demonstrate the effect of the value of the `$errorActionPreference` variable by opening three → Windows/registry/tree-structure/key[registry keys].
  -
  Of these three keys, the second one, → Windows/registry/tree/HKEY_LOCAL_MACHINE/SAM/SAM[`HKEY_LOCAL_MACHINE\SAM\SAM`], requires 
  → Windows/security/SID/S-1-5/18[SYSTEM] privileges to be opened. Because in most cases, these privileges are not granted to an ordinary user, this key
  cannot be opened.

  The three statements that try to open the registry key are guarded by → Windows/PowerShell/language/statement/try-catch-finally[`try` … `catch`] statements.

  gh|about-PowerShell|/language/variable/preference/errorActionPreference/intro.ps1||

  When the script is run with the default of `$errorActionPreference` (continue), an error message is written and the script continues to also open the third key.
code {
PS:\> .\errorActionPreference.ps1
Opened HKEY_LOCAL_MACHINE\SOFTWARE
get-item : Requested registry access is not allowed.
At …
  […]

Opened
Opened HKEY_LOCAL_MACHINE\SYSTEM
code }
  
  However, if the value of `$errorActionPreference` is set to stop, the error is caught in the exception handler and the third key is not opened.
code {
PS:\> $ErrorActionPreference='stop'
PS:\> .\errorActionPreference.ps1
Opened HKEY_LOCAL_MACHINE\SOFTWARE
Caught error Requested registry access is not allowed.
code }

}
{ Using the -errorAction parameter of a cmdlet to set the value of $errorActionPreference

  In a → Windows/PowerShell/language/cmdlet, the → Windows/PowerShell/language/cmdlet#cmdlet-common-parameter[common parameter] `-errorAction` sets the value for
 `$errorActionPreference` in the scope of the cmdlet, as is demonstrated with the following simple example:

  gh|about-PowerShell|/language/variable/preference/errorActionPreference/param-errorAction.ps1||

  When this function (cmdlet) is executed, it prints the value that was passed via `-errorAction`:
code {
PS C:\> eap -errorAction inquire
errorActionPreference:       Inquire
code }

}

sa:
  The common parameter → Windows/PowerShell/language/cmdlet/parameter/common/errorAction[`-errorAction`]

  → Windows/PowerShell/language/error-handling[Error handling in PowerShell]
