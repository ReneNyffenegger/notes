$ PowerShell: preference variables

Preference variables are created by → Windows/PowerShell and assigned default values. The values of the preference values adjust and affect how PowerShell operates and executes cmdLets.
The user of a → Windows/PowerShell/session[session] can change them according to his/her preferences.

table { llll
  ~Variable~ ☰ ~Comment~ ☰ ~default value~ ☰ ~Type~

 → Windows/PowerShell/language/variable/preference/confirmPreference[`$ConfirmPreference`] ☰ ☰ High ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ConfirmImpact[`System.Management.Automation.ConfirmImpact`]
 `$DebugPreference`           ☰ ☰ SilentlyContinue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
 → Windows/PowerShell/language/variable/preference/errorActionPreference[`$ErrorActionPreference`]     ☰ Controls how → Windows/PowerShell reacts to a → Windows/PowerShell/language/error-handling#ps-error-types[non-terminating error] ☰ Continue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
 `$ErrorView`                 ☰ ☰ NormalView ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`]
 `$FormatEnumerationLimit`    ☰ ☰ 4 ☰ → Microsoft/dot-net/namespaces-classes/System/Int32[`System.Int32`]
 → Windows/PowerShell/language/variable/preference/informationPreference[`$InformationPreference`] ☰ ☰ SilentlyContinue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
 `$LogCommandHealthEvent`     ☰ → Windows/PowerShell/event-log[Logs] command errors ☰ False ☰ ?
 `$LogCommandLifecycleEvent`  ☰ → Windows/PowerShell/event-log[Logs] the starting and completion of commands ☰ False ☰ ?
 `$LogEngineHealthEvent`      ☰ → Windows/PowerShell/event-log[Logs] PowerShell program errors  ☰ True ☰ ?
 `$LogEngineLifecycleEvent`   ☰ → Windows/PowerShell/event-log[Logs] the start and stop of PowerShell ☰ True ☰ ?
 `$LogProviderLifecycleEvent` ☰ → Windows/PowerShell/event-log[Logs] the start and stop of PowerShell → Windows/PowerShell/language/provider[providers] ☰	True ☰ ?
 `$LogProviderHealthEvent`    ☰ → Windows/PowerShell/event-log[Logs] PowerShell → Windows/PowerShell/language/provider errors ☰ True ☰ ?
  → Windows/PowerShell/language/variable/preference/MaximumAliasCount[`$MaximumAliasCount`] ☰ ☰ ? (still used?) ☰ 
  → Windows/PowerShell/language/variable/preference/MaximumDriveCount[`$MaximumDriveCount`] ☰ ☰ ? (still used?) ☰ 
  `$MaximumErrorCount` ☰ ☰ ? (still used?) ☰ → Microsoft/dot-net/namespaces-classes/System/Int32[`System.Int32`]
  → Windows/PowerShell/language/variable/preference/MaximumFunctionCount[`$MaximumFunctionCount`] ☰ ☰ ? (stil used?) ☰ `System.Int32`
  `$MaximumHistoryCount` ☰ ☰ 4096 ☰ `System.Int32`
  → Windows/PowerShell/language/variable/preference/MaximumVariableCount[`$MaximumVariableCount`] ☰ ☰ ? (stil used?) ☰ `System.Int32`
  → Windows/PowerShell/language/variable/preference/OFS[`$OFS`] ☰ ☰ `" "` (Space character) ☰  ?
  → Windows/PowerShell/language/variable/preference/OutputEncoding[`$OutputEncoding`] ☰ ☰ → Microsoft/dot-net/namespaces-classes/System/Text/UTF8Encoding[`System.Text.UTF8Encoding`] object ☰ 
  `$ProgressPreference` ☰ ☰ Continue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
  → Windows/PowerShell/language/variable/preference/psDefaultParameterValues[`$psDefaultParameterValues`] ☰ ☰	None, that is: empty → Windows/PowerShell/language/type/hash-table[hash table] ☰ `System.Collections.Hashtable` / if empty: → Microsoft/dot-net/namespaces-classes/System/Management/Automation/DefaultParameterDictionary[`System.Management.Automation.DefaultParameterDictionary`]
  `$PSEmailServer` ☰ Default SMTP Server for → Windows/PowerShell/command-inventory/noun/mailMessage/send[`send-mailMessage`]☰ None ☰ `System.String`
  `$PSModuleAutoLoadingPreference` ☰ ☰ All ☰  ?
  `$PSSessionApplicationName` ☰ ☰ WSMAN ☰ `System.String`
  `$PSSessionConfigurationName` ☰ ☰ http://schemas.microsoft.com/PowerShell/microsoft.PowerShell ☰ `System.String`
  `$PSSessionOption` ☰ ☰ compare $PSSessionOption ☰ `System.Management.Automation.Remoting.PSSessionOption`
  → Windows/PowerShell/language/variable/preference/verbosePreference[`$VerbosePreference`] ☰ Influences the → Windows/PowerShell/command-inventory/noun/verbose/write[`write-verbose` cmdLet]. Can be set to `Continue` with the → Windows/PowerShell/language/cmdlet#cmdlet-common-parameter[common cmdlet parameter `-verbose`] ☰ SilentlyContinue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
  `$WarningPreference` ☰ Determines what happens with strings in the *warning stream* (as for example placed into this stream with the → Windows/PowerShell/command-inventory/noun/warning/write[`write-warning`] cmdLet. ☰ Continue ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ActionPreference[`System.Management.Automation.ActionPreference`]
  `$WhatIfPreference` ☰ ☰ 0 ☰ `System.Boolean`
table }


sa:
  → Windows/PowerShell/language/variable[Variables]
