$ PowerShell: while statement
@ while

The `while` → Windows/PowerShell/language/statement iterates over a block of statements until a given condition becomes true:
gh|about-powershell|/language/statement/while/condition.ps1||

{ Assignment

  It is possible to assign a value to a → Windows/PowerShell/language/variable in the while loop's condition. After assigning a value to the variable, the value of the variable is checked in a boolean context.

  This is demonstrated in the following example:
  gh|about-powershell|/language/statement/while/assignment.ps1||

  Because `0` is considered to be → Windows/PowerShell/language/variable/automatic/true-false[`$false`] in a boolean context, the loop terminates when `nextNum()` returns `0`. Thus, this script prints
code {
num = 42
num = 99
num = 17
code }

  It is also possible to assign a value *and* check the assigned value with a → Windows/PowerShell/language/operator/comparison[comparison operator]. Because the assignment has a lower
  → Windows/PowerShell/language/operator#ps-operator-precedence[precedence] than the comparison operator, the assignment must be put into parentheses:
  gh|about-powershell|/language/statement/while/assignment-gt.ps1||
  This script prints
code {
num = 42
num = 99
code }

}

sa:
  → Windows/PowerShell/language/statement[Other statements]
