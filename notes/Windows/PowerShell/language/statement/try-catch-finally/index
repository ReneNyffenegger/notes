$ PowerShell: try … catch … finally statements

In a `try` … `catch` statement sequence, → Windows/PowerShell tries to execute the → Windows/PowerShell/language/statement[statements] of the `try` block. If an error (aka exception) occurs, the execution of the statements in the
`try` block is left (for good) and the statements in the `catch` block are executed.

In a `catch` block, the → Microsoft/dot-net/namespaces-classes/System/Exception[exception object] that describes the error condition can be queried through the
→ Windows/PowerShell/language/variable/automatic/psItem[automatic variable `$_` (`$psItem`)].

An optional `finally` block may follow the `catch` block. It contains the statements that need to be executed regardless of an exception was thrown in the `try` block. Usually, the `finally` block is used for
cleaning up resources that might have been allocated in the `catch` block.


gh|about-Powershell|/language/statement/try-catch-finally/simple.ps1||

sa:
  → Windows/PowerShell/language/statement[Others statements]
