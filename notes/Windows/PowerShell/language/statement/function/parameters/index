$ PowerShell: function parameters

{ Not explicitely named parameters #ps-param-args

  It's possible to define a → Windows/PowerShell/language/statement/function[function] that does not explicitely name its parameters. The values of the parameters can
  then be accessed within the function using the `$args` array.

  This is similar to the → development/languages/Perl/variables/at__parameters_passed_to_a_sub[`@_`] variable that stores the values that are passed to a  → development/languages/Perl[Perl] `sub`.

  gh|about-powershell|/language/statement/function/parameters/args.ps1||

}
{ Named parameters

  The parameters can be given a name so as to make life easier for the programmer.

  gh|about-powershell|/language/statement/function/parameters/named.ps1||

}
{ Constrained types #ps-param-constrained-type

  The → Windows/PowerShell/language/type[types] of the parameters can be constrained to make sure that the function gets what it expects.

  gh|about-powershell|/language/statement/function/parameters/typed.ps1||

}
{ The param statement

  The parameters can be listed more explicitely in a `param` statement:

  gh|about-powershell|/language/statement/function/parameters/param.ps1||

}

sa:
  The → Windows/PowerShell/language/statement/function[function statement]
