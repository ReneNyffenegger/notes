$ PowerShell: Pass function/cmdlet parameters by reference


{ Integral types

 «Integral types» are passed by value by default.

  In order to pass such → Windows/PowerShell/language/statement/function/parameters[parameter] to a
  → Windows/PowerShell/language/function or → Windows/PowerShell/language/cmdlet by reference, the parameter needs to be declared as a
  → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSReference[`System.Management.Automation.PSReference`] type.
  -
  This type can be abbreviated with the → Windows/PowerShell/language/object/type/accelerators[type accelerator] `[ref]`.

  { Function-parameter definition

    Optionally, the expected type of the parameter can be specified after `[ref]`, for example `[ref][string]` as shown in the following simple
    → Windows/PowerShell/language/function declaration.

    The value of the parameter that needs to be returned to the caller can then be assigned to the parameter's property `.value`:
    gh|about-PowerShell|/language/function/parameter/pass-by-reference/func.ps1||

  }
  { Calling the function

    When calling the function, the variable that receives the out value also needs to be declared with the `[ref]` type accelerator and enclosed in parantheses, as shown
    below:
    gh|about-PowerShell|/language/function/parameter/pass-by-reference/call.ps1||

  }
}
{ Object types

  Object types (such as a → Windows/PowerShell/language/object/psObject[psObject] or a → Windows/PowerShell/language/type/hash-table) are passed by reference by default:
  gh|about-PowerShell|/language/function/parameter/pass-by-reference/object.ps1||

}
