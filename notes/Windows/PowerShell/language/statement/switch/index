$ PowerShell: switch statement
@ switch

{ Simple switch statement

  The following scriptlet demonstrates the most simple form of a `switch` statement:
  gh|about-powershell|/language/statement/switch/num-to-text.ps1||

}
{ Evaluation of expressions #switch-psItem

  It is possible to evaluate expressions in order to determine which script block es executed. The → Windows/PowerShell/language/variable/automatic/psItem[automatic variable `$_`] is bound to the
  → Windows/PowerShell/language/object[object] that is tested in the `switch($obj)` condition and also in the corresponding evaluated block:
  gh|about-powershell|/language/statement/switch/eval.ps1||

}
{ Assignment

  The result of a `switch` statement can be assigned to a → Windows/PowerShell/language/variable:
  gh|about-powershell|/language/statement/switch/assignment.ps1||


}
{ Using the break statement #swith-break

  In a `switch` statement, the → Windows/PowerShell/language/statement/break[`break`] statement makes sure that the `switch` statement is exited without testing the following conditions:
  gh|about-powershell|/language/statement/switch/break.ps1||

}

sa:
  → Windows/PowerShell/language/statement[Other statements]
