$ PowerShell: script block
@ script block

A *script block* is a series of → Windows/PowerShell/language/statement[statements] and expressions. It accepts arguments and might return a value.

A script block is identified by the curly brackets that contain it. In → Windows/PowerShell, anything within curly brackets, except → Windows/PowerShell/language/type/hash-table[hash tables],
are script blocks.

A script block is an instance of the → Microsoft/dot-net[.NET] framework type `System.Management.Automation.ScriptBlock` which can be verified by getting the type of (an empty) script block and then showing the `FullName` property:
code {
PS C:\> {}.GetType().FullName
code }

A script block can be assigned to a variable and then be called with the → Windows/PowerShell/language/operator/call[call operator (`&`)] (See → Windows/PowerShell/language/operator/call#ps-call-operator-script-block[here]).

A script block that is assigned to a variable might also be invoked with the → Windows/PowerShell/command-inventory/noun/command/invoke[`invoke-command`] → Windows/PowerShell/language/cmdlet[cmdLet].

Within a → Windows/PowerShell/pipeline, a script block can be executed for each element in the pipeline with the → Windows/PowerShell/command-inventory/noun/object/forEach[`forEach-object` cmdLet].

sa:

  → Windows/PowerShell/language/variable/automatic/psItem[The automatic variable `$psItem` (for which `$_` is an alias)].
