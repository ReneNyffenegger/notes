$ PowerShell: type

Each → Windows/PowerShell[PowerShell] value has a type.

There are two categories of types:
  • value types (for example: `int`)
  • reference types (for example: `array` or `$null`)

Special types are:
  • `void` cannot be instantiated and is used for the `cast` operator
  • `null` has one instance only
  • `object` from which all other types, except `null` are dervied, either directly or indirectly.

Value types:
  • `bool`
  • `char`
  • `int`
  • `long`
  • `float` (`single` is a synonym for `float`)
  • `double`
  • `decimal`
  • `switch` which is used for parameters.
  •  enumeration types

Reference types:
  • `string`
  • → Windows/PowerShell/language/type/array[`array`]
  • `hashtable`
  • → development/XML[`xml`]
  • → development/regular-expressions[`regex`]
  • `ref`
  • `scriptblock`
  • `math` (used for constants `e`, `pi` and functions like `abs()`, `max()`, `sin()` etc.)
  • `ordered` (which is considered a *pseudo* type)
  • `pscustomobject` (which is ony used for conversions

*generic types* (which problably would be *template* types in → development/languages/C-C-plus-plus/CPP[C++]).

*description types* to describe
  • → Windows/PowerShell/language/provider[providers]
  • drives
  • variables
  • → Windows/PowerShell/language/alias[aliases]
  • working locations
  • → development/environment-variable[environment variables]
  • applications
  • → Windows/PowerShell/language/cmdlet[cmdlets]
  • external scripts
  • functions
  • filters
  • modules
  • custom objects
  • commands
  • error records
  • enumerators
  • directories
  • files
  • date-times
  • group infos
  • generic measures (average, count, …)
  • text measure info 
  • credentials
  • method designators
  • member definitions

sa:
  → Windows/PowerShell/language/type/conversion[Type conversions]
