$ PowerShell: object members

The members of an → Windows/PowerShell/language/object can be shown by → Windows/PowerShell/pipeline[piping] it to the the → Windows/PowerShell/command-inventory/noun/member/get[`get-member`] cmdLet:
code {
$obj = → Windows/PowerShell/command-inventory/noun/item/get .
$obj | → Windows/PowerShell/command-inventory/noun/member/get
code }

{ Properties related to items #item-related-properties

  Objects that are related to → Windows/PowerShell/command-inventory/noun/item[items] seem to have the following «special» properties:
  table { ll

    `psChildName` ☰ 
    `psDrive` ☰
    `psIsContainer` ☰
    `psParentPath` ☰
    `psPath` ☰
    `psProvider` ☰

  table }

  Such a list can be obtained with the following → Windows/PowerShell/pipeline:
code {
get-item . | get-member -memberType noteProperty
code }

  These `ps*` properties are even present in the object that are returned by → Windows/PowerShell/command-inventory/noun/content/get[`get-content`]:
code {
PS C:\> ( get-content  someFile.txt )[0] | → Windows/PowerShell/command-inventory/noun/object/select *
code }

  Compare with an object's → Windows/PowerShell/language/object#psobject-intrinsic-members[intrinsic members].

}

sa:

  A → Windows/PowerShell/script[PowerShell script] can be made more robust by making sure referenced object-members actually exist by
  using the statement → Windows/PowerShell/command-inventory/noun/strictMode/set#ps-set-strict-mode-v2[`set-strictMode -version 2`] in a script.
