$ PowerShell: Type accelerators
@ type accelerator

A *type accelerator* is an alias for a → Microsoft/dot-net/namespaces-classes[.NET class].

{ Currently available type accelerators

  The currently available type accelarators can be determined with the → Microsoft/dot-net/namespaces-classes/System/Management/Automation/TypeAccelerators[`System.Management.Automation.TypeAccelerators` class]:
  gh|about-PowerShell|/language/object/type/accelerators/get.ps1||

table { lll

 ~Accelerator~                 ☰ → Microsoft/dot-net/namespaces-classes[.NET class/struct … ] ☰ ~Comment~
  adsi                         ☰ `System.DirectoryServices.DirectoryEntry` ☰
  adsisearcher                 ☰ `System.DirectoryServices.DirectorySearcher` ☰
  Alias                        ☰ `System.Management.Automation.AliasAttribute` ☰
  AllowEmptyCollection         ☰ `System.Management.Automation.AllowEmptyCollectionAttribute` ☰
  AllowEmptyString             ☰ `System.Management.Automation.AllowEmptyStringAttribute` ☰
  AllowNull                    ☰ `System.Management.Automation.AllowNullAttribute` ☰
  ArgumentCompleter            ☰ `System.Management.Automation.ArgumentCompleterAttribute` ☰
  ArgumentCompletions          ☰ `System.Management.Automation.ArgumentCompletionsAttribute` ☰
  array                        ☰ → Microsoft/dot-net/namespaces-classes/System/Array[`System.Array`] ☰
  bigint                       ☰ → Microsoft/dot-net/namespaces-classes/System/Numerics/BigInteger[`System.Numerics.BigInteger`] ☰
  bool                         ☰ `System.Boolean` ☰
  byte                         ☰ → Microsoft/dot-net/namespaces-classes/System/Byte[`System.Byte`] ☰
  char                         ☰ `System.Char` ☰
  cimclass                     ☰ `→ Microsoft/dot-net/namespaces-classes/Microsoft/Management/Infrastructure/CimClass` ☰
  cimconverter                 ☰ `Microsoft.Management.Infrastructure.CimConverter` ☰
  ciminstance                  ☰ `Microsoft.Management.Infrastructure.CimInstance` ☰
  CimSession                   ☰ `Microsoft.Management.Infrastructure.CimSession` ☰
  cimtype                      ☰ `Microsoft.Management.Infrastructure.CimType` ☰
  CmdletBinding                ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/CmdletBindingAttribute[`System.Management.Automation.CmdletBindingAttribute`] ☰ ? Required to create an → Windows/PowerShell/language/function/advanced[advanced function] ?
  cultureinfo                  ☰ `System.Globalization.CultureInfo` ☰
  datetime                     ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`] ☰
  decimal                      ☰ `System.Decimal` ☰
  double                       ☰ `System.Double` ☰
  DscLocalConfigurationManager ☰ `System.Management.Automation.DscLocalConfigurationManagerAttribute` ☰
  DscProperty                  ☰ `System.Management.Automation.DscPropertyAttribute` ☰
  DscResource                  ☰ `System.Management.Automation.DscResourceAttribute` ☰
  enum                         ☰ → Microsoft/dot-net/namespaces-classes/System/Enum[`System.Enum`] ☰ This accelerator was not found with → https://github.com/ReneNyffenegger/about-PowerShell/blob/master/language/object/type/accelerators/get.ps1[this script].
  ExperimentAction             ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ExperimentAction[`System.Management.Automation.ExperimentAction`] ☰
  Experimental                 ☰ `System.Management.Automation.ExperimentalAttribute` ☰
  ExperimentalFeature          ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ExperimentalFeature[`System.Management.Automation.ExperimentalFeature`] ☰ → Windows/PowerShell/command-inventory/noun/experimentalFeature[experimental features] in PowerShell core
  float                        ☰ `System.Single` ☰
  guid                         ☰ `System.Guid` ☰
  hashtable                    ☰ → Microsoft/dot-net/namespaces-classes/System/Collections/Hashtable[`System.Collections.Hashtable`] ☰ See also → Windows/PowerShell/language/type/hash-table[hashtables in PowerShell]
  initialsessionstate          ☰ `System.Management.Automation.Runspaces.InitialSessionState` ☰
  int                          ☰ → Microsoft/dot-net/namespaces-classes/System/Int32[`System.Int32`] ☰ Same as `[int32]`
  int16                        ☰ `System.Int16` ☰
  int32                        ☰ → Microsoft/dot-net/namespaces-classes/System/Int32[`System.Int32`] ☰ Same as `[int]`
  int64                        ☰ `System.Int64` ☰
  ipaddress                    ☰ `System.Net.IPAddress` ☰
  IPEndpoint                   ☰ `System.Net.IPEndPoint` ☰
  long                         ☰ `System.Int64` ☰
  mailaddress                  ☰ `System.Net.Mail.MailAddress` ☰
  NullString                   ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/Language/NullString[`System.Management.Automation.Language.NullString`] ☰
  ObjectSecurity               ☰ `→ Microsoft/dot-net/namespaces-classes/System/Security/AccessControl/ObjectSecurity` ☰
  OutputType                   ☰ `System.Management.Automation.OutputTypeAttribute` ☰
  Parameter                    ☰ `System.Management.Automation.ParameterAttribute` ☰
  PhysicalAddress              ☰ `System.Net.NetworkInformation.PhysicalAddress` ☰
  powershell                   ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PowerShell[`System.Management.Automation.PowerShell`] ☰
  psaliasproperty              ☰ `System.Management.Automation.PSAliasProperty` ☰
  pscredential                 ☰ `System.Management.Automation.PSCredential` ☰
  psCustomObject               ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject[`System.Management.Automation.PSObject`] ☰ Same as type accelerator psObject 
  PSDefaultValue               ☰ `System.Management.Automation.PSDefaultValueAttribute` ☰
  pslistmodifier               ☰ `System.Management.Automation.PSListModifier` ☰
  psmoduleinfo                 ☰ `→ Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSModuleInfo` ☰
  psnoteproperty               ☰ `System.Management.Automation.PSNoteProperty` ☰
  psObject                     ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSObject[`System.Management.Automation.PSObject`] ☰ Same as type accelerator psCustomObject
  psprimitivedictionary        ☰ `System.Management.Automation.PSPrimitiveDictionary` ☰
  pspropertyexpression         ☰ `Microsoft.PowerShell.Commands.PSPropertyExpression` ☰
  psscriptmethod               ☰ `System.Management.Automation.PSScriptMethod` ☰
  psscriptproperty             ☰ `System.Management.Automation.PSScriptProperty` ☰
  PSTypeNameAttribute          ☰ `System.Management.Automation.PSTypeNameAttribute` ☰
  psvariable                   ☰ `System.Management.Automation.PSVariable` ☰
  psvariableproperty           ☰ `System.Management.Automation.PSVariableProperty` ☰
  ref                          ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSReference[`System.Management.Automation.PSReference`] ☰ Used for passing → Windows/PowerShell/language/statement/function/parameters/pass-by-reference[function parameters by reference]
  regex                        ☰ → Microsoft/dot-net/namespaces-classes/System/Text/RegularExpressions/Regex[`System.Text.RegularExpressions.Regex`] ☰ Used for → development/regular-expressions[regular expressions]
  runspace                     ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/Runspaces/Runspace[`System.Management.Automation.Runspaces.Runspace`] ☰
  runspacefactory              ☰ `→ Microsoft/dot-net/namespaces-classes/System/Management/Automation/Runspaces/RunspaceFactory` ☰
  sbyte                        ☰ `System.SByte` ☰
  scriptblock                  ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/ScriptBlock[`System.Management.Automation.ScriptBlock`] ☰
  securestring                 ☰ `System.Security.SecureString` ☰
  semver                       ☰ `System.Management.Automation.SemanticVersion` ☰
  short                        ☰ `System.Int16` ☰
  single                       ☰ `System.Single` ☰
  string                       ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`] ☰
  SupportsWildcards            ☰ `System.Management.Automation.SupportsWildcardsAttribute` ☰
  switch                       ☰ → Microsoft/dot-net/namespaces-classes/System/Management/Automation/SwitchParameter[`System.Management.Automation.SwitchParameter`] ☰ See → Windows/PowerShell/language/statement/function/parameters/switch[switch parameters in PowerShell functions]
  timespan                     ☰ → Microsoft/dot-net/namespaces-classes/System/TimeSpan[`System.TimeSpan`] ☰
  type                         ☰ `System.Type` ☰
  uint                         ☰ `System.UInt32` ☰
  uint16                       ☰ `System.UInt16` ☰
  uint32                       ☰ `System.UInt32` ☰
  uint64                       ☰ `System.UInt64` ☰
  ulong                        ☰ `System.UInt64` ☰
  uri                          ☰ `System.Uri` ☰
  ushort                       ☰ `System.UInt16` ☰
  ValidateCount                ☰ `System.Management.Automation.ValidateCountAttribute` ☰
  ValidateDrive                ☰ `System.Management.Automation.ValidateDriveAttribute` ☰
  ValidateLength               ☰ `System.Management.Automation.ValidateLengthAttribute` ☰
  ValidateNotNull              ☰ `System.Management.Automation.ValidateNotNullAttribute` ☰
  ValidateNotNullOrEmpty       ☰ `System.Management.Automation.ValidateNotNullOrEmptyAttribute` ☰
  ValidatePattern              ☰ `System.Management.Automation.ValidatePatternAttribute` ☰
  ValidateRange                ☰ `System.Management.Automation.ValidateRangeAttribute` ☰
  ValidateScript               ☰ `System.Management.Automation.ValidateScriptAttribute` ☰
  ValidateSet                  ☰ `System.Management.Automation.ValidateSetAttribute` ☰
  ValidateTrustedData          ☰ `System.Management.Automation.ValidateTrustedDataAttribute` ☰
  ValidateUserDrive            ☰ `System.Management.Automation.ValidateUserDriveAttribute` ☰
  version                      ☰ `System.Version` ☰
  void                         ☰ `System.Void` ☰
  WildcardPattern              ☰ `System.Management.Automation.WildcardPattern` ☰
  wmi                          ☰ `System.Management.ManagementObject` ☰
  wmiclass                     ☰ `System.Management.ManagementClass` ☰
  wmisearcher                  ☰ `System.Management.ManagementObjectSearcher` ☰
  X500DistinguishedName        ☰ `System.Security.Cryptography.X509Certificates.X500DistinguishedName` ☰
  X509Certificate              ☰ `System.Security.Cryptography.X509Certificates.X509Certificate` ☰
  xml                          ☰ → Microsoft/dot-net/namespaces-classes/System/Xml/XmlDocument[`System.Xml.XmlDocument`] ☰

table }

  The type accelerators that start with `validate*` (vor example `validateScript`) are used in a function's or script's
  → Windows/PowerShell/language/statement/function/parameters#ps-parameters-param-stmt[`param` statement] to validate
  the values of parameters (see → Windows/PowerShell/language/statement/function/parameters#ps-param-attribute).

}
{ 'using namespace' statement

  In PowerShell5, a namespace can be imported with the `using namespace` statement:

code {
add-type  -assemblyName Microsoft.VisualBasic

using namespace Microsoft.VisualBasic

$comObj = [System.Runtime.InteropServices.Marshal]::GetActiveObject('Excel.Application')

[Information]::TypeName($comObj.selection)
code }
}

sa:
  `[ordered] @{ … }` creates an ordered → Windows/PowerShell/language/type/hash-table[hash table]. Although `[ordered]` with its square brackets looks like a type accelerator, it is not.
