$ PowerShell: Formatting views

{ View types

  There are four fundamental *view types*:
  table { ll
    Table view ☰ Each record corresponds to *one* → Windows/PowerShell/language/object, each column displays a → Windows/PowerShell/language/object/member[property (member)] of this object
    List view ☰ A «two column» display where each row corresponds to *one* → Windows/PowerShell/language/object/member[property (member). The left column displays the property name or a label, the right column its value.
    Wide view ☰ Only *one* property is displayed in one or more columns. A wide view has no header.
    Custom view ☰ Displays objects and their properties in a customizable manner.
  table }

}
{ View name

  Each view is identified by a name.

  In a formatting file (`*.format.ps1xml`), the name is indicated like so:
code {
<?xml version="1.0" encoding="utf-8" ?>
<Configuration><ViewDefinitions>

   <View><Name>name for the view</Name>

     …

   </View>
  
</ViewDefinitions></Configuration>
code }

}
{ Object that is identified by the view

  The → Microsoft/dot-net/namespaces-classes[.NET object] that is configured by the view is specified with the `<TypeName>` within a `<ViewSelectedBy>` tag:
  It's possible to list multiple `<TypeName>`:

code {
…
  <View>
    <Name>…</Name>
    <ViewSelectedBy>
      <TypeName>…</TypeName>
      <TypeName>…</TypeName>
    </ViewSelectedBy>
  …  
code }

}

sa:
  → Windows/PowerShell/language/object/console-display[Displaying objects in the console]
