$ PowerShell: Classes
@ class

The `class` keyword allows to define user defined → Windows/PowerShell/language/type[types].

{ Simple demonstration of basic features

  The following simple example tries to demonstrate the most important and basic features of a user-defined class:
     • `class CLS` creates a class, named `CLS`
     • *Class members* are declared with a type and a name (for example `[int] $num`).
     • *Static members* are introduced with the `static` keyword.
     • The *constructor* has the same name as the class (here: `CLS`) and does not have a return type.
     • On the other hand, (member-) → Windows/PowerShell/language/class/method[methods] can have a return type (for example `[string] combineNumAndTxt()`). If a method does not return anything, the type can be omitted or explicitly stated to be `[void]`.
     • Within methods and the constructor, the instance of the → Windows/PowerShell/language/object is referred to by the automatic variable → Windows/PowerShell/language/variable/automatic/this[`$this`].
     • An object (instance) is created with `$obj = [CLS]::new(…)` (Alternatively, it could be created with the → Windows/PowerShell/command-inventory/noun/object/new[`new-object` cmdlet]).
     • Unlike → Windows/PowerShell/language/function[PowerShell functions] and → Windows/PowerShell/language/cmdlet[cmdLets], method names cannot have hyphens (and in extension, there are no → Windows/PowerShell/command-inventory/verb/approved[approved verbs] for method names).

  { Class definition

    The definition of a class named `CLS`:
    gh|about-PowerShell|/language/class/simple/CLS.ps1||

  }
  { Creating an instance

    An instance of a class is created with the → Windows/PowerShell/command-inventory/noun/object/new[`new-object`] cmdlet or
    by using the static method call syntax and the method name `new`:
    gh|about-PowerShell|/language/class/simple/create-instance.ps1||

  }
  { Call methods

    A method is called using the object variable followed by a dot and the name of the method:
    gh|about-PowerShell|/language/class/simple/call-methods.ps1||
   
  }
  { Call a static method

    A static method is called by putting the class name into square brackets, followed by two colons, followed by the name of the method:
    gh|about-PowerShell|/language/class/simple/call-static-method.ps1||

  }
  { Show type name

    gh|about-PowerShell|/language/class/simple/type.ps1||

  }

}

sa:
  → Windows/PowerShell/language/class/method[Class methods]

  → Windows/PowerShell/language/class/inheritance[Inheritance]

  → Windows/PowerShell/language/class/ToString[Classes with and without an explicit `ToString()` method]

  → Windows/PowerShell/language/operator/comparison#comparison-required[This PowerShell example] that demonstrates how a → Windows/PowerShell/language/class[PowerShell class] implements 
  → Microsoft/dot-net/namespaces-classes/System/IComparable[`System.IComparable`] and overrides → Microsoft/dot-net/namespaces-classes/System/Object#Equals-GetHashCode[`Equals()` and `GetHashCode()`] in order
  to be → Windows/PowerShell/language/operator/comparison[comparable with `-eq`, `-gt`, `-lt` etc.].
