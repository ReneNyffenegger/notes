$ PowerShell: Classes
@ class

The `class` keyword allows to define user defined → Windows/PowerShell/language/type[types].

{ Simple demonstration of basic features

  The following simple example tries to demonstrate the most important and basic features of a user-defined class:
     • `class CLS` creates a class, named `CLS`
     • *Class members* are declared with a type and a name (for example `[int] $num`
     •  The *constructor* has the same name as the class (here: `CLS`) and does not have a return type
     •  On the other hand, (member-) → Windows/PowerShell/language/class/method[methods] do have a return type.
     •  Within methods and the constructor, the instance of the → Windows/PowerShell/language/object is referred to by the automatic variable → Windows/PowerShell/language/variable/automatic/this[`$this`]
     •  An object (instance) is created with `$obj = [CLS]::new(…)` (Alternatively, it could be created with the → Windows/PowerShell/command-inventory/noun/object/new[`new-object` cmdlet])

  gh|about-PowerShell|/language/class/simple.ps1||

}

sa:
  → Windows/PowerShell/language/class/method[Class methods]

  → Windows/PowerShell/language/class/inheritance[Inheritance]

  → Windows/PowerShell/language/class/ToString[Classes with and without an explicit `ToString()` method]

  → Windows/PowerShell/language/operator/comparison#comparison-required[This PowerShell example] that demonstrates how a → Windows/PowerShell/language/class[PowerShell class] implements 
  → Microsoft/dot-net/namespaces-classes/System/IComparable[`System.IComparable`] and overrides → Microsoft/dot-net/namespaces-classes/System/Object#Equals-GetHashCode[`Equals()` and `GetHashCode()`] in order
  to be → Windows/PowerShell/language/operator/comparison[comparable with `-eq`, `-gt`, `-lt` etc.].
