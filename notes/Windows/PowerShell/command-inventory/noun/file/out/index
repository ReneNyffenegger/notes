$ PowerShell cmdLet Out-File
@ out-file

`out-file` redirects the objects of a → Windows/PowerShell/pipeline into a file.

Since PowerShell 5.1, the → Windows/PowerShell/language/operator/redirection[redirection operators] are
basically aliases for `out-file`. However, with the parameters that `out-file` provides, it is more flexible than the redirection operators.

Unless the → Windows/PowerShell/command-inventory/noun/file/out/append[`-append`] option is used, the
file is newly created or overwritten.
-
With the `-append` option, the file is created if it does not exist, then the objects are appended to the file.

{ Creating vs writing to a new file

  By default, `out-file` creates a file (as does the redirection operator `>`). Using `-append`, content is added to a file (if the file exists). Otherwise, `-append` also creates the file.

code {
'some text' | out-file  xyz.log
'more text' | out-file  xyz.log -append
code }

}
{ Preventing accidental creation of a file

  The accidential creation of a file can be prevented with `-noClobber`
code {
'foo bar baz' | out-file xyz.log -noClobber
code }

}
{ Write a file line by line

  gh|about-PowerShell|/cmdlets/file/out/write-file.ps1||

  The behaviour of `out-file` seems to have changed between PowerShell version 5.1 and 7.0. With 5.1, the script prints
code {
           Path: …

           00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000   FF FE 41 00 0D 00 0A 00 C3 00 1E 20 0D 00 0A 00  .þA.....Ã.. ....
00000010   42 00 0D 00 0A 00                                B.....
code }

  With 7.0, the script prints
code {
                       Path: …

                       00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
00000000000000000000   41 0D 0A C3 84 0D 0A 42 0D 0A                    A..Ã..B..
code }

   The difference is that the 5.1 version writes the file in UTF16, LE, with a BOM (Byte Order mark) while the 7.0 version writes the file in → development/Unicode/UTF-8.

}
{ -Encoding #ps-out-file-encoding

  The → Windows/PowerShell/command-inventory/parameter/encoding[parameter `-encoding`] allows to specify the → development/Unicode/character-encoding[encoding] with which text is written to the file:
code {
'abc' | out-file -encoding ascii abc.txt
code }

}
{ -NoNewLine

  gh|about-PowerShell|/cmdlets/file/out/noNewLine-pipeline.ps1||

}


sa:

  The → Windows/PowerShell/language/operator/redirection[redirection operators] (`>`, `>>`, `2>`, `2>>`, `2>&1`)

  → Windows/PowerShell/command-inventory/noun/file

  → Windows/PowerShell/command-inventory/verb/out

  → Windows/PowerShell/command-inventory/noun/content/set[`set-content`]

  `out-file` belongs to the → Windows/PowerShell/language/cmdlet[cmdlets] with the → Windows/PowerShell/command-inventory/parameter/encoding[`-encoding` parameter].


  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/IO/StreamWriter[`System.IO.StreamWriter`]
