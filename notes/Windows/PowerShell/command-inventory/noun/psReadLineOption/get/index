$ PowerShell cmdLet get-psReadLineOption

`get-psReadLineOption` returns a → Microsoft/dot-net/namespaces-classes/Microsoft/PowerShell/PSConsoleReadLineOptions[`Microsoft.PowerShell.PSConsoleReadLineOptions`] object.

Invoking `get-psReadLineOption` might the following option names and values
table { lll
  EditMode                               ☰ Vi ☰
  ContinuationPrompt                     ☰ >> ☰
  ContinuationPromptForegroundColor      ☰ White ☰ not in PowerShell 7?
  ContinuationPromptBackgroundColor      ☰ Black ☰ not in PowerShell 7?
  ExtraPromptLineCount                   ☰ 0 ☰
  AddToHistoryHandler                    ☰ ☰ A → Windows/PowerShell/language/scriptblock that determines if a → Windows/PowerShell/language/command is added to the → Windows/PowerShell/language/command/history[history]
  CommandValidationHandler               ☰ ☰
  CommandsToValidateScriptBlockArguments ☰ {ForEach-Object, %, Invoke-Command, icm...} ☰
  HistoryNoDuplicates                    ☰ False ☰ Not in PowerShell 7
  MaximumHistoryCount                    ☰ 4096 ☰
  MaximumKillRingCount                   ☰ 10 ☰
  HistorySearchCursorMovesToEnd          ☰ False ☰
  ShowToolTips                           ☰ False ☰
  DingTone                               ☰ 1221 ☰
  CompletionQueryItems                   ☰ 100 ☰
  WordDelimiters                         ☰ ;:,.[]{}()/\|^&*-=+'"–—― ☰
  DingDuration                           ☰ 50 ☰
  BellStyle                              ☰ Audible ☰
  PromptText                             ☰ {> } ☰ Not in PowerShell .NET?
  HistorySearchCaseSensitive             ☰ False ☰
  ViModeIndicator                        ☰ None ☰
  HistorySavePath                        ☰ → Windows/dirs/Users/username/AppData/Roaming/Microsoft/Windows/PowerShell/PSreadline/ConsoleHost_history_txt[C:\Users\rene\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt] ☰
  HistorySaveStyle                       ☰ SaveIncrementally ☰
  DefaultTokenForegroundColor            ☰ White ☰
  CommentForegroundColor                 ☰ DarkGreen ☰
  KeywordForegroundColor                 ☰ Green ☰
  StringForegroundColor                  ☰ DarkCyan ☰
  OperatorForegroundColor                ☰ DarkGray ☰
  VariableForegroundColor                ☰ Green ☰
  CommandForegroundColor                 ☰ Yellow ☰
  ParameterForegroundColor               ☰ DarkGray ☰
  TypeForegroundColor                    ☰ Gray ☰
  NumberForegroundColor                  ☰ White ☰
  MemberForegroundColor                  ☰ White ☰
  DefaultTokenBackgroundColor            ☰ Black ☰
  CommentBackgroundColor                 ☰ Black ☰
  KeywordBackgroundColor                 ☰ Black ☰
  StringBackgroundColor                  ☰ Black ☰
  OperatorBackgroundColor                ☰ Black ☰
  VariableBackgroundColor                ☰ Black ☰
  CommandBackgroundColor                 ☰ Black ☰
  ParameterBackgroundColor               ☰ Black ☰
  TypeBackgroundColor                    ☰ Black ☰
  NumberBackgroundColor                  ☰ Black ☰
  MemberBackgroundColor                  ☰ Black ☰
  EmphasisForegroundColor                ☰ Cyan ☰
  EmphasisBackgroundColor                ☰ Black ☰
  ErrorForegroundColor                   ☰ Red ☰
  ErrorBackgroundColor                   ☰ Black ☰
table }

In PowerShell 7, a background and foreground color pair is represented with *one* ANSI Escape code.


sa:
  → Windows/PowerShell/command-inventory/noun/psReadLineOption
