$ PowerShell Cmdlet: Get-Process
@ get-process

`get-process` returns objects whose type is → Microsoft/dot-net/namespaces-classes/System/Diagnostics/Process[`System.Diagnostics.Process`].

`ps` is an → Windows/PowerShell/language/alias for `get-process`.

{ Terminating a process

  A process can be terminated with the returned object's `Kill()` method, for example because the process in question is hanging:
code {
PS:\> (get-process excel).kill()
code }

}
{ Selecting specific processes

  { Property value

    By combining `get-process` and → Windows/PowerShell/command-inventory/noun/object/where[`where-object`] in a → Windows/PowerShell/pipeline, it's possible to select processes by criterias applied on their properties:
code {
get-process  | where-object name -match app
code }

   Select processes whose process memory (`pm`) is greater than 250 mega bytes:
code {
get-process  | where-object pm -gt 250mb
code }

  }
  { -id / (Process identifier) #get-process-id

  The `-id` option allows to select a process by its → Windows/development/process/identifer[process identifier].
code {
get-process -id → Windows/PowerShell/language/variable/automatic/PID[$PID] | → Windows/PowerShell/command-inventory/noun/object/select[select-object] startTime, totalProcessorTime, userProcessorTime, virtualMemorySize, workingSet
code }

  }

}
{ Select my session's processes

code {
get-process | where-object {
   $_.SI -eq ([System.Diagnostics.Process]::GetCurrentProcess().SessionId) -and
 #
 #    Exclude some well known proceses: 
 #
   $_.processName -notin
      'csrss',
      'dllhost',
      'dwm',
      'explorer',
      'RuntimeBroker',
      'SecurityHealthSystray',
      'ShellExperienceHost',
      'sihost',
      'svchost',
      'taskhostw', 
      'unsecapp',
      'winlogon',
     # WSL related
      'wsl', 'wslrelay', 'wslhost'
}
code }

  TODO: Is `TextInputHost` a well-known process as well?

}
{ Property aliases

  The objects returned by `get-process` have some *property aliases*.
code {
PS: 6 C:\Users\rene> get-process | → Windows/PowerShell/command-inventory/noun/member/get -memberType → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSMemberTypes#psMemberType-aliasProperty[aliasProperty], → Microsoft/dot-net/namespaces-classes/System/Management/Automation/PSMemberTypes#psMemberType-scriptProperty[scriptProperty]


   TypeName: System.Diagnostics.Process

Name           MemberType     Definition
----           ----------     ----------
Handles        AliasProperty  Handles = Handlecount
Name           AliasProperty  Name = ProcessName
NPM            AliasProperty  NPM = NonpagedSystemMemorySize64
PM             AliasProperty  PM = PagedMemorySize64
SI             AliasProperty  SI = SessionId
VM             AliasProperty  VM = VirtualMemorySize64
WS             AliasProperty  WS = WorkingSet64
Company        ScriptProperty System.Object Company {get=$this.Mainmodule.FileVersionInfo.CompanyName;}
CPU            ScriptProperty System.Object CPU {get=$this.TotalProcessorTime.TotalSeconds;}
Description    ScriptProperty System.Object Description {get=$this.Mainmodule.FileVersionInfo.FileDescription;}
FileVersion    ScriptProperty System.Object FileVersion {get=$this.Mainmodule.FileVersionInfo.FileVersion;}
Path           ScriptProperty System.Object Path {get=$this.Mainmodule.FileName;}
Product        ScriptProperty System.Object Product {get=$this.Mainmodule.FileVersionInfo.ProductName;}
ProductVersion ScriptProperty System.Object ProductVersion {get=$this.Mainmodule.FileVersionInfo.ProductVersion;}
code }

}

sa:

  Using the cmdlet → Windows/PowerShell/command-inventory/noun/counter/get[`get-counter`] to
  → Windows/PowerShell/command-inventory/noun/counter/get#get-counter-process-intensive-processes[find processor intensive processes].

  `get-process` is one of the cmdLets with the → Windows/PowerShell/command-inventory/parameter/computerName[`-computerName` parameter].

  → Windows/development/process

  → Windows/PowerShell/command-inventory/noun/process
