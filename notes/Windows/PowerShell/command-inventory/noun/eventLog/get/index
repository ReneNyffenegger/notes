$ PowerShell cmdLet get-eventLog

code {
get-eventLog system
get-eventLog application
get-eventLog security     # requires admin privileges

get-eventLog system      -entryType error
get-eventLog application -source    oracle.ora19
code }

{ View classic event logs

  The names of «classic events logs» can be viewed with `-list`:
code {
PS: C:\> get-eventLog -list

  Max(K) Retain OverflowAction        Entries Log
  ------ ------ --------------        ------- ---
  20,480      0 OverwriteAsNeeded       5,565 Application
  20,480      0 OverwriteAsNeeded           0 HardwareEvents
     512      7 OverwriteOlder              0 Internet Explorer
  20,480      0 OverwriteAsNeeded           0 Key Management Service
  20,480      0 OverwriteAsNeeded      26,267 Security
  20,480      0 OverwriteAsNeeded      51,773 System
  15,360      0 OverwriteAsNeeded       6,702 Windows PowerShell
code }

}

sa:

  → Windows/PowerShell/examples/Problem-Ejecting-USB-Mass-Storage-Device[This example] demonstrates how `get-eventLog` is used to determine which application is preventing an → hardware/USB drive from being ejected.

  → Windows/PowerShell/command-inventory/noun/winEvent/get[`get-winEvent`] will eventually(?) replace `get-eventLog`.

  → Windows/PowerShell/command-inventory/noun/eventLog
