$ PowerShell cmdLet measure-command

`measure-command` clocks the time it is needed to run a → Windows/PowerShell/language/scriptblock or execute a → Windows/PowerShell/language/cmdlet. The cmdLet returns
a → Microsoft/dot-net/namespaces-classes/System/TimeSpan[`System.TimeSpan`] object.

Unsurprisingly, it takes 3 seconds to sleep for 3 seconds:
code {
measure-command { → Windows/PowerShell/command-inventory/noun/sleep/start[start-sleep] 3 }

Days              : 0
Hours             : 0
Minutes           : 0
Seconds           : 3
Milliseconds      : 1
Ticks             : 30013870
TotalDays         : 3.4738275462963E-05
TotalHours        : 0.000833718611111111
TotalMinutes      : 0.0500231166666667
TotalSeconds      : 3.001387
TotalMilliseconds : 3001.387
code }

  Of course, if I am only interested in the (rounded) number of seconds, I can → Windows/PowerShell/pipeline[pipe] the result through → Windows/PowerShell/command-inventory/noun/object/select[`select-object`]:
code {
measure-command { start-sleep 3 } | select-object seconds

Seconds
-------
      3
code }

{ Measure the time of any command or pipeline

 `measure-command` reports the time needed to finish any → Windows/PowerShell/language/command or → Windows/PowerShell/pipeline:
  gh|about-PowerShell|/cmdlets/command/measure/pipeline.ps1||

}

sa:

  → Windows/PowerShell/command-inventory/noun/command
