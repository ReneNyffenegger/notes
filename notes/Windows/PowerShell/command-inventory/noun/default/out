$ PowerShell cmdLet out-default

The → Windows/PowerShell/language/cmdlet `out-default` is automatically added to every → Windows/PowerShell/pipeline[pipeline's] end.

`out-default` tries to write a textual representation of the → Windows/PowerShell/language/object[objects] it receives to the console.

{ If objects are strings

  If these objects are strings, it simply passes these these strings to → Windows/PowerShell/command-inventory/noun/host/out[`out-host`].

}
{ If there is a registered view for the objects' type

  If the objects are not strings, `out-default` checks if there is a *registered view* for the received objects' types.

  Such views define a → Windows/PowerShell/command-inventory/verb/format[formatter] for the respective object type. There are four of them and each of them corresponds to a
  → Windows/PowerShell/language/cmdlet whose verb is → Windows/PowerShell/command-inventory/verb/format[`format`]:
     • → Windows/PowerShell/command-inventory/noun/custom/format[`format-custom`]
     • → Windows/PowerShell/command-inventory/noun/list/format[`format-list`]
     • → Windows/PowerShell/command-inventory/noun/table/format[`format-table`]
     • → Windows/PowerShell/command-inventory/noun/wide/format[`format-wide`]

}
{ There is no registered view

  If `out-default` does not find a registered view, `out-default` uses the first object it receives to determine the number of properties it has.

  If this number is greater or equal to 5, it pipes the objects to → Windows/PowerShell/command-inventory/noun/list/format[`format-list`], otherwise
  to → Windows/PowerShell/command-inventory/noun/table/format[`format-table`].

}

links:
  Much of the information on this page is condensed from the valuable post by jeffrey Snover:
  → https://devblogs.microsoft.com/powershell/how-powershell-formatting-and-outputting-really-works/[How PowerShell Formatting and Outputting REALLY works]

sa:

  → Windows/PowerShell/command-inventory/noun/default

  → Windows/PowerShell/command-inventory/verb/out
