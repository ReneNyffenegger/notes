$ PowerShell cmdLet group-object

`group-object` returns an → Windows/PowerShell/language/type/array[array] of → Microsoft/dot-net/namespaces-classes/Microsoft/PowerShell/Commands/GroupInfo[`Microsoft.PowerShell.Commands.GroupInfo`] objects.

`group` is an → Windows/PowerShell/language/alias[alias] for `group-object`.

{ Group first, then print group's objects

  The following example first groups an array of objects according to a given property value and then prints some property values of each object in the found groups:
  gh|about-PowerShell|/cmdlets/object/group/group-then-print-objects.ps1||

}
{ -asHashTable #ps-group-object-asHashTable

  A nice option of `group-object` is `-asHashTable`: it returns a the grouped → Windows/PowerShell/language/object[objects] as a → Windows/PowerShell/language/type/hash-table[hash table] whose keys correspond
  to the values of the grouped-by property.

  In the following example, the → Windows/PowerShell/command-inventory/noun/CSV/import[`import-CSV`] cmdLet is used to import the following → development/Data/exchange/formats/CSV file:
  gh|about-PowerShell|/cmdlets/object/group/data.csv||

  The imported CSV values (`$data`) is then grouped by the value of `quarter` and assigned to the → Windows/PowerShell/language/variable `$quarters`.

 `$quarters.GetType().FullName` is used to verify that the returned value is indeed a hashtable (whose underlying type is a → Microsoft/dot-net/namespaces-classes/System/Collections/Hashtable[`System.Collections.Hashtable`].

  Then, the (three) object of the third quarter (`$quarters.Q3`) are → Windows/PowerShell/pipeline[piped] through → Windows/PowerShell/command-inventory/noun/object/where[`where-object`] to find the object whose `item` value is `baz`. This
  object's `val` value is then printed.

  Finally, `where-object` is used on the second quarter to find all objects whose `val` value is greater or equal to 20 and then, their `item` property is printed.

  gh|about-PowerShell|/cmdlets/object/group/asHashTable.ps1||

}

sa:

  → Windows/PowerShell/command-inventory/noun/object
