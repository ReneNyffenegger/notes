$ Powershell command noun: experimentalFeature

The → Windows/PowerShell/language/cmdlet noun `experimentalFeature` is avaialble in → Windows/PowerShell Core.

Commands related to the → Windows/PowerShell[PowerShell] command noun `experimentalFeature`:
  • `disable-experimentalFeature`
  • `enable-experimentalFeature`
  • `get-experimentalFeature`

As of → https://github.com/PowerShell/PowerShell/commit/fd125c9cf7bfc740eea3783b6bcb77072cb97aca[commit `fd125c9`], features that can be enabled or disabled are
table { ll
   `PSImplicitRemotingBatching` ☰ Batch implicit remoting proxy commands to improve performance
   `PSCommandNotFoundSuggestion` ☰ Recommend potential commands based on fuzzy search on a CommandNotFoundException
   `PSForEachObjectParallel` ☰ New parameter set for → Windows/PowerShell/command-inventory/noun/object/forEach[ForEach-Object] to run → Windows/PowerShell/language/scriptblock[script blocks] in parallel
   `PSTernaryOperator` ☰ Support the ternary → Windows/PowerShell/language/operator[operator] in PowerShell language
   `PSErrorView` ☰ New formatting for ErrorRecord
   `PSUpdatesNotification` ☰ Print notification message when new releases are available
   `PSCoalescingOperators` ☰ Support the null coalescing operator and null coalescing assignment operator in PowerShell language
   `PSPipelineChainOperators` ☰ Allow use of `&&` and `||` as operators between → Windows/PowerShell/pipeline[pipeline] invocations
table }

A list of all experimental features that are discovered by PowerShell can be queried with `get-experimentalFeature`.

{ Check if a specific experimental feature is enabled

If a specific experimental feature is enabled can be determined like so:
code {
PS C:\> [→ Microsoft/dot-net/namespaces-classes/System/Management/Automation/ExperimentalFeature[System.Management.Automation.ExperimentalFeature]]::IsEnabled('PSTernaryOperator')
True
code }

  Because `[ExperimentalFeature`] is a → Windows/PowerShell/language/object/type/accelerators[type accelerator] for `System.Management.Automation.ExperimentalFeature`], the check can be abbreviated:
code {
PS C:\> [ExperimentalFeature]::IsEnabled('PSTernaryOperator')
True
code }

}

sa:
 → Windows/PowerShell/command-inventory/noun
