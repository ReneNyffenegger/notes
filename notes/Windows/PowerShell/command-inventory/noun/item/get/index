$ PowerShell cmdLet get-item
@ get-item

{ Returned types

  The → Microsoft/dot-net type that is returned by `get-item` depends on the thing that `get-item` gets.

  table { ll

    ~Item~ ☰  ~Class~
    → Windows/file-system[File system directory] ☰ → Microsoft/dot-net/namespaces-classes/System/IO/DirectoryInfo[`System.IO.DirectoryInfo`]
    File System file ☰ TODO
    → Windows/registry/tree-structure/key[Registry key] ☰ → Microsoft/dot-net/namespaces-classes/Microsoft/Win32/RegistryKey[`Microsoft.Win32.RegistryKey`]
    … ☰ TODO

  table }

}
{ Getting an items parent item

  If the item is a directory:
code {
(get-item $env:temp).parent
(get-item $env:temp).parent.fullName
code }

  If the item is a file:
code {
(get-item → development/tools/scripts/personal/profile_ps1[$profile]).directory
(get-item → development/tools/scripts/personal/profile_ps1[$profile]).directory.fullkame
code }

}

sa:
  The → Windows/PowerShell/language/command parameter → Windows/PowerShell/command-inventory/parameter/credential[`-credential`].

  → Windows/PowerShell/command-inventory/noun/item
