$ PowerShell cmdLet Copy-Item
@ copy-item

`copy-item` copies an → Windows/PowerShell/language/item (typically files or directories, but also → Windows/registry/tree-structure/key[registry keys]) from one location to another.

{ Copy directories recursively

  In order to copy a directory with its subdirectories and their files to another directory, the `-recurse` parameter is required. Without this parameter, a directory will be created, but it will be empty.

  There are slight nuances how a command to copy a directory must be entered: it depends on whether the destination directory already exists or if the command should create it.

  { Destination directory does not exist

    If the destination directory (named `dest`) does not exist, the following will create it:
code {
copy-item   -recurse  src    dest
code }

    `dest` won't have a `src` directory after copying it.

  }
  { Destination directory already exists

    If the destination directory already exists, the source directory can be copied into the destination directory with one of the following → Windows/PowerShell/language/command[commands]:
code {
copy-item   -recurse  src    dest
copy-item   -recurse  src/*  dest
code }

    The first command will create a subdirectory named `src` below `dest` while the second command does not create such a `src` directory.
    -
    Thus, the result of the second command is the same as the result if the destination directory does not exist (see above).

  }

}
{ Recursively create backup files

  The following simple → Windows/PowerShell/pipeline uses → Windows/PowerShell/command-inventory/noun/childItem/get[`get-childItem -recurse *.ps1`] to recursively select
  all → Windows/PowerShell scripts and then uses → Windows/PowerShell/command-inventory/noun/object/forEach[`forEach-object`] to invoke
 `copy-item` to create a backup file (with the → development/filename-extensions[extension] `.bak`) for each of these files.
  gh|about-powershell|/cmdlets/item/copy/create-backups.ps1||

}
{ Aliases

 `copy` and `cp` are → Windows/PowerShell/language/alias[aliases] for `copy-item`.
  These names are apparently inspired by the → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] command → Windows/dirs/Windows/System32/cmd_exe/commands/copy[`copy`] and the
  Shell command → Linux/shell/commands/cp[`cp`].

}

sa:
  The → Windows/PowerShell/language/command parameter → Windows/PowerShell/command-inventory/parameter/credential[`-credential`].

  → Windows/PowerShell/command-inventory/noun/item
