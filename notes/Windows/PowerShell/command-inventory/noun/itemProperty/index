$ Powershell command noun: itemProperty

With the `itemProperty` command noun, an → Windows/PowerShell/command-inventory/noun/item[item's] (such as a file's, directory's or → Windows/registry/tree-structure/key[registry key's]) attributes can be modified.

Commands related to the → Windows/PowerShell[PowerShell] command noun `itemProperty`:
  • → Windows/PowerShell/command-inventory/noun/itemProperty/clear[`clear-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/copy[`copy-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/get[`get-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/move[`move-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/new[`new-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/remove[`remove-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/rename[`rename-itemProperty`]
  • → Windows/PowerShell/command-inventory/noun/itemProperty/set[`set-itemProperty`]

{ File and directory attributes

  File ind directory related attributes that can be gotten and set (if not read only) are:
  table { llll

    ~Attribute Name~    ☰ ~Data Type~                                                                                  ☰ ~Writeable~ ☰ ~Comment~

    `Attributes`        ☰ → Microsoft/dot-net/namespaces-classes/System/IO/FileAttributes[`System.IO.FileAttributes`]  ☰ ✓           ☰
    `CreationTime`      ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `CreationTimeUtc`   ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `Directory`         ☰ → Microsoft/dot-net/namespaces-classes/System/IO/DirectoryInfo[`System.IO.DirectoryInfo` ]   ☰ ✗           ☰ Files only
    `DirectoryName`     ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`]                        ☰ ✗           ☰ Files only
    `Exists`            ☰ → Microsoft/dot-net/namespaces-classes/System/Boolean[`System.Boolean`]                      ☰ ✗           ☰ ?
    `Extension`         ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`]                        ☰ ✗           ☰
    `FullName`          ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`]                        ☰ ✗           ☰
    `IsReadOnly`        ☰ → Microsoft/dot-net/namespaces-classes/System/Boolean[`System.Boolean`]                      ☰ ✓           ☰ Files only
    `LastAccessTime`    ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `LastAccessTimeUtc` ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `LastWriteTime`     ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `LastWriteTimeUtc`  ☰ → Microsoft/dot-net/namespaces-classes/System/DateTime[`System.DateTime`]                    ☰ ✓           ☰
    `Length`            ☰ `System.Int64`                                                                               ☰ ✗           ☰ Files only
    `Name`              ☰ → Microsoft/dot-net/namespaces-classes/System/String[`System.String`]                        ☰ ✗           ☰
    `Parent`            ☰ → Microsoft/dot-net/namespaces-classes/System/IO/DirectoryInfo[`System.IO.DirectoryInfo`]    ☰ ✗           ☰ Directories only
    `Root`              ☰ → Microsoft/dot-net/namespaces-classes/System/IO/DirectoryInfo[`System.IO.DirectoryInfo`]    ☰ ✗           ☰ Directories only

  table }


}
{ Registry values

  For → Windows/PowerShell, → Windows/registry/tree-structure/value[registry values] are `itemProperties`, not
   → Windows/PowerShell/command-inventory/noun/item[items]: in order to create a new value with PowerShell,
   the → Windows/PowerShell/command-inventory/noun/itemProperty/new[`new-itemProperty` cmdLet] is needed.

   So, in that respect, the registry values are treated differently from file-system files in PowerShell.

}

sa:

  → Windows/PowerShell/language/provider[PowerShell providers]

  The → Windows/PowerShell/command-inventory/noun[cmdLet nouns] → Windows/PowerShell/command-inventory/noun/item[`item`] and
  → Windows/PowerShell/command-inventory/noun/itemPropertyValue[`itemPropertyValue`].

  → Windows/PowerShell/command-inventory/noun
