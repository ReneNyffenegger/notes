$ PowerShell module filesystem: resolve-relativePath

The → Windows/PowerShell/language/function[function] `resolve-relativePath` of the → Windows/PowerShell/language/module → Windows/PowerShell/modules/personal/filesystem[filesystem]
returns the *relative path* between a directory and a file or directory.
-
Thus, it improves the functionality provided by the built-in cmdlet → Windows/PowerShell/command-inventory/noun/path/resolve[`resolve-path`] which only allows to get the relative path from the current directory
(→ Windows/PowerShell/language/variable/automatic/pwd[`$pwd`]).

code {
resolve-relativePath $fromDir  $destPath
code }


Note: `$fromDir` and `$destPath` must share a common prefix in order for the function to succeed.

This function was inspired (and copied with minor adaptions) by/from
→ https://github.com/webmd-health-services/Carbon/[Carbon's] command → https://get-carbon.org/Resolve-RelativePath.html[`Resolve-RelativePath`].
-
The function uses the → Windows/development/WinAPI function `PathRelativePathTo`.

It seems that the returned value of `PathRelativePathTo` always starts with a dot.

{ Simple example

code {
$sql_file_root = 'P:\ath\to\development\sql'

→ Windows/PowerShell/language/statement/foreach[foreach] ($file in → Windows/PowerShell/command-inventory/noun/childItem/get[get-childItem] $sql_file_root -recurse -include *.sql) {

    $rel_path = resolve-relativePath $sql_file_root $file
    $rel_path

}
code }

}
{ Passing an array to the second parameter

  The second parameter accepts an → Windows/PowerShell/language/type/array:
code {
PS:> resolve-relativePath  x/y  x/a/b, x/y/z, x/
..\a\b
.\z
..\
code }

}
{ Quirk

  The function currently calls `PathRelativePathTo` with the → https://github.com/ReneNyffenegger/ps-modules-filesystem/blob/d5acd52da38ebee39a7b9aef2b66ef631fe56699/filesystem.psm1#L67C67-L67C80[Directory] attribute for the `$fromDir` and
  the → https://github.com/ReneNyffenegger/ps-modules-filesystem/blob/d5acd52da38ebee39a7b9aef2b66ef631fe56699/filesystem.psm1#L67C114-L67C135[Normal (File)] attribute for `$destPath`.

  Thus, when going from a directory to another, the function returns a somewhat quirky result (`..\..` would already be ok):
code {
PS: 32 C:/Users/igsnyre/a/b/c/d> resolve-relativePath   a/b/c/d   a/b
..\..\..\b
code }

  This behavior should probably be changed once.

}
{ PowerShell 7

  In PowerShell 7 (Netstandard 2.1?), relative paths can apparently be queried like so:
code {
[System.IO.DirectoryInfo]$x = './a/b/c/d'
[System.IO.DirectoryInfo]$y = './a/b/x/y'
[System.IO.Path]::GetRelativePath($x,$y)
code }

}
