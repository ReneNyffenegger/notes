$ Powershell module: COM

table { ll
  
   → #ps-mod-com-get-activeObject[`get-activeObject`] ☰ `get-activeObject` tries to simulate the → development/languages/VBA/functions/getObject[VBA function `getObject`].
   `get-COMPropertyValue` ☰ Returns the value of a collection that is indexed by name or number, returns → Windows/PowerShell/language/variable/automatic/null[`$null`] if it does not exist

table }


{ get-activeObject #ps-mod-com-get-activeObject

 `getActiveObject` tries to simulate the → development/languages/VBA/functions/getObject[VBA function `getObject`].

code {
$xls = → Windows/PowerShell/modules/personal/COM/get-activeObject[get-activeObject] excel.application
$xls.Workbooks | → Windows/PowerShell/command-inventory/noun/object/select[select-object] name 
$xls.run('vba_macro')

$acc = get-activeObject access.application
$acc.currentProject.path + '\' + $acc.currentProject.name
code }

  See also the function → Windows/PowerShell/modules/personal/MS-Office#ps-mod-ms-office-get-msOfficeComObject[`get-msOfficeComObject`] in the
  → Windows/PowerShell/modules/personal/MS-Office[`MS-Office` PowerShell module].


}
{ Source code

  { COM.psm1

    gh|ps-modules-COM|/COM.psm1||

  }
  { COM.psd1

    gh|ps-modules-COM|/COM.psd1||

  }
  { COM.cs

   `COM.cs` is required in PowerShell Core because → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/Marshal/GetActiveObject#GetActiveObject-missing-in-dotNetCore[`GetActiveObject` is missing in `System.Runtime.InteropServices.Marshal` of .NET Core].

    gh|ps-modules-COM|/COM.cs||

  }
}

{ History

  table { ll
    V0.1 ☰ Init
  table }

}
{ TODO

  Evaluate and/or interpret → https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/0642cb2f-2075-4469-918c-4441e69c548a[HRESULT] values in thrown errors.

}

sa:

  → Windows/PowerShell/modules/personal
