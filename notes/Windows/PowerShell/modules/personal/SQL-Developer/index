$ Powershell module: SQL Developer

The aim of the → Windows/PowerShell/language/module[PowerShell module] *SQL Developer* is to manage
→ development/Software/Oracle-SQL-Developer settings from the command line.

code {
set-SQLDeveloperFontFamily                Consolas
set-SQLDeveloperFontSize                  11

set-SQLDeveloperArrayFetchSize            100

set-SQLDeveloper_NLS_DATE_FORMAT         'yyyy-mm-dd hh24:mi:ss'
set-SQLDeveloper_NLS_TIMESTAMP_FORMAT    'yyyy-mm-dd hh24:mi:ssXff'
set-SQLDeveloper_NLS_TIMESTAMP_TZ_FORMAT 'yyyy-mm-dd hh24:mi:ssXff tzr'

set-SQLDeveloper_NULL_text               '-'
set-SQLDeveloper_NULL_color               NONE

set-SQLDeveloperUseCaseDelimitedWord     $false

get-SQLDeveloperFontFamily
get-SQLDeveloperFontSize


get-SQLDeveloperUserConnectionsPSObjects  | select-object name, password
code }

{ General get- functions

  table { ll
    `get-SQLDeveloperUserInformationDirectory` ☰ Returns the → development/Software/Oracle-SQL-Developer/directories/user-information as a → Microsoft/dot-net/namespaces-classes/System/IO/DirectoryInfo[`System.IO.DirectoryInfo`] object
    `get-SQLDeveloperUserPreferencesFileName` ☰ Returns the full path to the user preference file as a string (for example → development/Software/Oracle-SQL-Developer/directories/user-information/systemV_W_X_Y_Z/o_sqldeveloper/product-preferences_xml[`C:\Users\Rene\AppData\Roaming\SQL Developer\system19.2.1.247.2212/o.sqldeveloper/product-preferences.xml`])
    `get-SQLDeveloperUserPreferencesXml` ☰ Returns the content of the user preference file as a → Microsoft/dot-net/namespaces-classes/System/Xml/XmlDocument[`System.Xml.XmlDocument`] object.
    `get-SQLDeveloperUserConnectionsFileName` ☰ Returns the name of the connections file (*if* it is a → development/languages/JavaScript/JSON file), for example → development/Software/Oracle-SQL-Developer/directories/user-information/systemV_W_X_Y_Z/o_jdeveloper_db_connection/connections_json[`C:\Users\Rene\AppData\Roaming\SQL Developer\system19.2.1.247.2212/o.jdeveloper.db.connection/connections.json`]
    `get-SQLDeveloperUserConnectionsPSObjects` ☰ Returns the content of the connections file as a → Windows/PowerShell/language/object/psObject[`psObject` object].
    `get-SQLDeveloperDBSystemId` ☰ Returns the *DB System ID*.
  table }

}

{ get- and set- functions for settings

  The following list includes the `get-` and `set-` functions for settings found in the *user preference file* (whose name can be determined with the function `get-SQLDeveloperUserPreferencesFileName`).
  -
  The names must be prependeded by `get-SQLDeveloper` or `get-SQLDeveloper_` (for example `get-SQLDeveloperFontSize`).

  table { ll
    `FontSize` ☰
    `FontFamily` ☰
    `TNS_NAMES_directory` ☰
    `NLS_DATE_FORMAT`, `NLS_TIMESTAMP_FORMAT`, `NLS_TZ_FORMAT` ☰
    `NULL_text` ☰ The value that is displayed in the result grid for → development/databases/Oracle/SQL/null[`null` values].
    `NULL_color` ☰ The color with which a `null` value is displayed.
    `caseDelimitedWord` ☰ Set to `$false` in order to jump over underscors when using ctrl+arrow (rather than to treat them as word boundaries). Corresponds to *Use Change of Case As Word Boundary* in → development/Software/Oracle-SQL-Developer/GUI/menu/Tools/Preferences/Code-Editor/Fonts[Tools -> Preferences -> Code Editor]. see also → https://twitter.com/thatjeffsmith/status/1448730627335991300[Jeff Smith's tweet])
    `NewWorksheetConnection` ☰
    `ArrayFetchSize` ☰
    `glogin` ☰ A boolean that controls if the → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/sqlplus/admin/glogin_sql[`glogin.sql`] file is sourced on startup
    → Windows/PowerShell/modules/personal/SQL-Developer/get-set/StartupScript[`StartupScript` ☰ The path to a script that is executed when SQL developer starts up (configured under the menu → development/Software/Oracle-SQL-Developer/GUI/menu/Tools/Preferences/Database#sql-dev-filename-for-startup-script[Tools -> Preferences -> Database: Filename for connection startup script])
    `UsethickDriver` ☰ A boolean that controls if the Java thick driver is used to establish a connection
    `KerberosThinConfigFile` ☰
    `KerberosThinCredentialCache` ☰

  table }

}
{ Source code

  The source code for this module is hosted in → https://github.com/ReneNyffenegger/ps-module-SQL-Developer[this GitHub repository].

  { SQL-Developer.psm1

    gh|ps-module-SQL-Developer|/SQL-Developer.psm1||

  }
  { Manifest file (SQL-Developer.psd1)

    gh|ps-module-SQL-Developer|/SQL-Developer.psd1||

  }

}
{ History

  table { ll
    V.2 ☰  return XML file if `.json` not found in `get-SQLDeveloperUserConnectionsFileName`.
    V.3 ☰ `set-` and `get-SQLDeveloperArrayFetchSize` / Fix bug in `set-preference`
    V.4 ☰ `set-` and `get-SQLDeveloperUseCaseDelimitedWord`
  table }

}
{ TODO

  Try to implement the 19.2 encrypt/decrypt algorithm from → https://github.com/maaaaz/sqldeveloperpassworddecryptor[maaaaz/sqldeveloperpassworddecryptor]

}

sa:

  → Windows/PowerShell/modules/personal
