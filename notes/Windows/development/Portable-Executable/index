
→ Windows/development/Portable-Executable/DLL

→ Windows/development/Portable-Executable/EXE

{ Modules

  
  DLLs and EXEs are commonly referred to as *modules*.

  The WinAPI function `GetModuleHandle()` returns a module handle (a `HMODULE` (and sometimes also a `HINSTANCE`?)) for a module that is loaded into the process that calls this function.

  ? The value of the `HMODULE`/`HINSTANCE` is the address of the *DOS/PE header* of the loaded DLL in memory.


}
{ PE Header

  An image's PE Header stores (among others) the information whether the image is a Console or GUI application.

}
{ Segments

  table { ll

    `.data` ☰ global variables
    `.text` ☰ compiled (executable) code
    `.pdata` ☰ X64: contains an array of function table entries for exception handling; is pointed to by the `.xdata` table entry in the image data directory.
    `.xdata` ☰ Unwind information
    `.debug` ☰
    `.drectve` ☰ 

  table }

  

}

sa:

  → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/bin/dumpbin_exe[`dumpbin.exe`] and → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/bin[`editbin.exe`].

  → Windows/dirs/Program-Files-x86/Microsoft-SDKs/Windows/version/bin/NETFX-version-Tools/PEVerify_exe[`PEVerify.exe`]

  The method `GetHINSTANCE` of the .NET class → Microsoft/dot-net/namespaces-classes/System/Runtime/InteropServices/Marshal[`System.Runtime.InteropServices.Marshal`].
 
links:
  docs.microsoft.com: → https://docs.microsoft.com/en-us/windows/desktop/Debug/pe-format[PE Format]
