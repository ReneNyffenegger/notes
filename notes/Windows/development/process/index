$ Windows process

In order to run an executable program (the *base image*), a process is needed.

A process is identified by its process id.

The owner of the process, his privileges and security groups are identified by an → Windows/security/access-token[access token].

The process has → Windows/development/memory#win-virtual-memory[virtual memory] for private use available.

A process consists of one ore more → Windows/development/process/thread[threads].

*Ressources* that were allocated by Windows on behalf of the processes are identified by handles.

Two importand structures for processes are
   • EPROCESS (kernel mode)
   • PEB (user mode)

{ Foreground process

  Apparently, at most one process is the *foreground process*. It seems possible that no process is the foreground process.

}
{ Services

  Background processes that require no user interaction are referred to as *services*.

  Services are controlled by *service control manager* (SCM) and run under `services.exe`.

  An important → Windows/registry[registry] key is `HKLM\System\CurrentControlSet\Services`.

  `svchost.exe` is apparently somehow user for shared processes.

}
{ TODO

  `taskmgr.exe`

}
sa:
  → development/languages/VBA/Win-API/PSAPI/EnumProcessModules

  All programs (processes) in Windows are ultimately started with the → Windows/development/WinAPI[WinAPI] function `CreateProcess()`.
  → development/languages/VBA/Win-API/examples/CreateProcess[This is an VBA example] to use `CreateProcess`.

  → Windows/cmd-exe/commands/taskkill[`taskkill`] to kill processes in → Windows/cmd-exe[cmd.exe].

  → Windows/development/process/thread[Threads]

  Each process has a → Windows/development/memory/page/table[page table] that maps → Windows/development/memory#win-virtual-memory[virtual addresses] to their corresponding physical addresses.

  → Windows/development/process/PEB[PEB]
