$ Windows environment variable: PATH
@ PATH

`PATH` consists of a list of directories, separated by semicolons, that are searched for → Windows/development/Portable-Executable/EXE[executables] or executable scripts (whose suffixes is listed in
→ Windows/development/environment-variables/PATHEXT[`PATHEXT`]) when trying to execute them without stating their location with an absolute directory path.

After installing → Windows/versions/10[Windows 10], the components seem to consist of the following
 directories:
   • → Windows/dirs/Windows/System32[C:\Windows\system32]
   • → Windows/dirs/Windows[C:\Windows]
   • → Windows/dirs/Windows/System32/wbem[C:\Windows\System32\Wbem]
   • → Windows/dirs/Windows/System32/WindowsPowerShell/vn_m[C:\Windows\System32\WindowsPowerShell\v1.0\]
   • → Windows/dirs/Windows/System32/OpenSSH[C:\Windows\System32\OpenSSH\]
   • → Windows/dirs/Users/username/AppData/Local/Microsoft/WindowsApps[C:\Users\Rene\AppData\Local\Microsoft\WindowsApps]

On a notebook, I also found this directory: `C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static`.

 The value of `PATH` is a combination (concatenation?) of
 → Windows/registry/tree/HKEY_LOCAL_MACHINE/System/CurrentControlSet/Control/Session-Manager/Environment[`HKLM\SYSTEM\CurrentControlSet\Session Manager\Environment`] and 
 → Windows/registry/tree/HKEY_CURRENT_USER/Environment[`HKEY_CURRENT_USER\Environment`] and the value of `Path` under
 → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/DefaultUserEnvironment[`HKEY_LOCAL_MACHINE\Software\DefaultUserEnvironment`]



The → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] command
→ Windows/dirs/Windows/System32/cmd_exe/commands/start[`start`] is able to locate executables (binaries) that are not found via the `PATH` environment variable. These
applications need to be registered under the → Windows/registry[registry] key
 → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows/CurrentVersion/App-Paths[`HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\App Paths`].

{ PowerShell

  In → Windows/PowerShell, the individual → Windows/file-system/directories[directories] in the `PATH` variable can be printed each on its own line with one of the following two commands:
code {
PS C:\> $env:path -split   ';'
PS C:\> $env:path -replace ';', "`n"
code }


}

sa:

  → Windows/dirs/Windows/System32/where_exe[`where.exe`] displays the directory of an executable that is located in any of the directories listed in `PATH`.

  → development/tools/scripts/personal/paths[`paths.ps1`] is a → Windows/PowerShell/script[PowerShell script] that prints the individual components
  of the `PATH` environment variable to the console.

  → Windows/development/environment-variables

  The PowerShell cmdlet `→ Windows/PowerShell/modules/personal/WinConfig/add-dirToPath` (of the `→ Windows/PowerShell/modules/personal/WinConfig` module).
