-

Every → Windows/development/COM/object[COM object] needs an `IUnknown` interface. It serves two purposes:
  • *Reference counting* of objects
  • Dynamic discovery of *interfaces*.

{ QueryInterface #iunknown-queryInterface

  TODO: It can be assumed that → development/languages/VBA[VBA] implements → development/languages/VBA/functions/typeOf-is[`typeOf(var) … is …`] using `QueryInterface()`.

}
{ AddRef #iunknown-addref

  `AddRef()` increases the reference counter of the object.

}
{ Release #iunknown-release

 `Release()` decreases the referece counter of the object.

  { VBA

    In → development/languages/VBA, the reference counter of a (COM-)Object is released by setting the object to → development/languages/VBA/language/null-and-nothing-etc#vba-nothing[`Nothing`]:
code {
Dim obj As Object
…
Set obj = Nothing
code }

  }

}
{ c struct of vTable

  gh|about-COM|/c/structs/IUnknown_vTable.h||

}

sa:

  → Windows/development/WinAPI/data-types#winapi-datattype-unknwn_h

  → development/languages/VBA/language/classes/reference-counting

  → Windows/development/COM/IUnknown/IDispatch[IDispatch]

  → development/languages/VBA/IUnknown[`IUnknown` in Visual Basic for Applications (VBA)]

  The → Microsoft/dot-net class → Microsoft/dot-net/namespaces-classes/System/__ComObject[`System.__ComObject`]
