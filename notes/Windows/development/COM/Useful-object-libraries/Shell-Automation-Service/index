
The → Windows/registry/tree/HKEY_CLASSES_ROOT/ProgId[Prog ID] for *Shell Automation Service* is `shell.application`.

{ Methods #shell-automation-methods

code {
$sh = → Windows/PowerShell/command-inventory/noun/object/new[new-object] -com shell.application
$sh | → Windows/PowerShell/command-inventory/noun/member/get[get-member] -type method | → Windows/PowerShell/command-inventory/noun/object/forEach[foreach-object] {$x = $_.definition -match '(\S+)\s+(\S+)\s+\(([^)]*)\)'; "$(→ Windows/PowerShell/language/variable/automatic/matches[$matches][1])`t$($matches[2])`t$($matches[3])" }
code }

  table { llll
   ~Return type~ ☰ ~Name~ ☰ ~Arguments~ ☰
   `void` ☰ `AddToRecent` ☰ `Variant`, `string` ☰ Adds a file to the MRU (most recently used) list
   `Folder` ☰ `BrowseForFolder` ☰ `int`, `string`, `int`, `Variant` ☰ Opens a dialog to let the user browse for a folder
   `Variant` ☰ `CanStartStopService` ☰ `string` ☰
   `void` ☰ `CascadeWindows` ☰  ☰
   `void` ☰ `ControlPanelItem` ☰ `string` ☰
   `void` ☰ `EjectPC` ☰  ☰
   `void` ☰ `Explore` ☰ `Variant` ☰ Opens a given folder in the → Windows/dirs/Windows/explorer_exe[explorer]
   `Variant` ☰ `ExplorerPolicy` ☰ `string` ☰
   `void` ☰ `FileRun` ☰  ☰ Same as *start Menu -> Run*
   `void` ☰ `FindComputer` ☰  ☰
   `void` ☰ `FindFiles` ☰  ☰
   `void` ☰ `FindPrinter` ☰ `string`, `string`, `string` ☰
   `bool` ☰ `GetSetting` ☰ `int` ☰
   `Variant` ☰ `GetSystemInformation` ☰ `string` ☰ Returns some system values such as processor leve, CPU speed, amount of installed physical memory etc.
   `void` ☰ `Help` ☰  ☰ Same as *Start Menu -> Help and Support*
   `int` ☰ `IsRestricted` ☰ `string`, `string` ☰
   `Variant` ☰ `IsServiceRunning` ☰ `string` ☰
   `void` ☰ `MinimizeAll` ☰  ☰
   `Folder` ☰ `NameSpace` ☰ `Variant` ☰ The value of the parameter is either a directory path or an entry of the → Microsoft/dot-net/namespaces-classes/System/Environment/SpecialFolder[`System.Environment+SpecialFolder`] enum.
   `void` ☰ `Open` ☰ `Variant` ☰
   `void` ☰ `RefreshMenu` ☰  ☰
   `void` ☰ `SearchCommand` ☰  ☰
   `Variant` ☰ `ServiceStart` ☰ `string`, `Variant` ☰
   `Variant` ☰ `ServiceStop` ☰ `string`, `Variant` ☰
   `void` ☰ `SetTime` ☰  ☰
   `void` ☰ `ShellExecute` ☰ `string`, `Variant`, `Variant`, `Variant`, `Variant` ☰
   `Variant` ☰ `ShowBrowserBar` ☰ `string`, `Variant` ☰
   `void` ☰ `ShutdownWindows` ☰  ☰
   `void` ☰ `Suspend` ☰  ☰
   `void` ☰ `TileHorizontally` ☰  ☰
   `void` ☰ `TileVertically` ☰  ☰
   `void` ☰ `ToggleDesktop` ☰  ☰
   `void` ☰ `TrayProperties` ☰  ☰
   `void` ☰ `UndoMinimizeALL` ☰  ☰
   `IDispatch` ☰ `Windows` ☰  ☰
   `void` ☰ `WindowsSecurity` ☰  ☰  Simulate `ctrl+alt+delete`. Can be used only when connected by a terminal session to → Windows/Remote-Desktop-Services[Terminal Server].
   `void` ☰ `WindowSwitcher` ☰  ☰
  table }

}

sa:

  → Windows/dirs/_Recycle_Bin#ps-recycle-bin

  → hardware/USB#eject-usb-windows

  Don't confuse `shell.application` with → development/languages/VBA/Useful-object-libraries/Windows-Script-Host[`wScript.shell` (Windows Script host)].
