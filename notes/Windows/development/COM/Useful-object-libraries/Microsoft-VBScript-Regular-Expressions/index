$ Microsoft VBScript Regular Expressions

{ Classes

  Collections are zero-based.

  { RegExp

    table { ll
       `Execute(txt)` ☰ Applies the regular expression (`Pattern`) on `txt` and returns a `IMatchCollection2` (See `MatchCollection`). If `txt` didn't match the `.Pattern`, the returned object's value of `.count` seems to be `0` (rather than returning → development/languages/VBA/language/null-and-nothing-etc[`nothing`]).
       `Global` ☰
       `IgnoreCase` ☰
       `Multiline` ☰
       `Pattern` ☰ The text of the *regular expression*.
       `Replace()` ☰
       `Test(txt)` ☰ Returns true if the regular expression (`Pattern`) matches `txt`
    table }

  }
  { MatchCollection

    table { ll

      `Count` ☰
      `Item` ☰ Returns an `IMatch2` (See `Match`)

    table }

  }
  { Match

     table { ll
        `FirstIndex` ☰
        `Length` ☰
        `Submatches` ☰  Returns an `ISubMatches` (see `Submatches`)
        `Value` ☰
     table }

  }
  { SubMatches

    table { ll
       `Count` ☰
       `Item()` ☰
    table }

  }


}


{ Misc

  The → development/UUID-GUID[GUID] of version 5.5 seems to be `{3F4DACA7-160D-11D2-A8E9-00104B365C9F}`.

}

sa:
  → Windows/development/COM/Useful-object-libraries

  → development/regular-expressions[Regular expressions]

  In → development/databases/SQL-Server[SQL Server], this library can be used to create a function for regular expression replacements:
  → development/databases/SQL-Server/helpers/regexp#mssql-regexp_replace[`regexp_replace()`].

  → development/languages/VBA/regular-expressions[Using regular expressions in VBA]
