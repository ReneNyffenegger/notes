
Every COM object needs an → Windows/development/COM/IUnknown[`IUnknown`] interface.

All COM objects are eidentified by a → development/UUID-GUID[GUID]: the CLSID (= class identifier). Some are additionally identified by *ProgIds*.

{ Registry

  Some relevant → Windows/registry[registry] keys for COM are:
    • → Windows/registry/tree/HKEY_CLASSES_ROOT/AppID[`HKCR\AppID`]
    • → Windows/registry/tree/HKEY_CLASSES_ROOT/ProgId[`HKCR\<ProgId>`]
    • → Windows/registry/tree/HKEY_CLASSES_ROOT/CLSID[`HKCR\CLSID`] (where the the CLSIDs are stored)
    • → Windows/registry/tree/HKEY_CLASSES_ROOT/Interface[`HKCR\Interface`]

}
{ TODO

   → https://www.codeproject.com/Articles/13601/COM-in-plain-C[COM in plain C] (CodeProject).
   → https://www.codeproject.com/Articles/13862/COM-in-plain-C-Part-2[Part 2],
   → https://www.codeproject.com/Articles/14037/COM-in-plain-C-Part-3[3],
   → https://www.codeproject.com/Articles/14117/COM-in-plain-C-Part-4[4],
   → https://www.codeproject.com/Articles/14117/COM-in-plain-C-Part-5[5],
   → https://www.codeproject.com/Articles/14117/COM-in-plain-C-Part-6[6],
   → https://www.codeproject.com/Articles/14117/COM-in-plain-C-Part-7[7] and
   → https://www.codeproject.com/Articles/14117/COM-in-plain-C-Part-8[8].

   → http://progtutorials.tripod.com/COM.htm

   { Reserved/Well known DISPIDs

     Four DISPIDs are reserved:
       • `DISPID_VALUE` (0): This DISPID is used to identify an object's *default member*.
       • `DISPID_UNKNOWN` (-1): *Must* be returned by `GetIDsOfNames` to indicate that a member is not found.
       • `DISPID_PROPERTYPUT` (-3)
       • `DISPID_NEWENUM` (-4): The `_NewWnum` method

      Apparently, in → development/languages/VBA[VBA] → development/languages/VBA/language/classes[classes], a method can be decorated with the `→ development/languages/VBA/attribute[attribute] … vb_userMemId` construct
      to assign such predefined disp ids to such a member.

   }

}

sa:

   → development/languages/VBA/Win-API/ole
