$ Visual Studio: environment variables

The *Visual Studio environment variables* are needed for the → Windows/development/Visual-Studio/platform-toolset[platform toolset] to work correctly. They locate and specify
  • include files
  • library files
  • SDK directories

{ Setting the variables on the command line #vs-set-env-vars

  { Visual Studio 2017 and later

     Beginning with Visual Studio 2017, this `%VSxxxCOMNTOOLS%` is not set globally anymore. Instead, the installer comes with
     → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/Installer/vswhere_exe[`vswhere.exe`], which is (by default) located under
     → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/Installer[`C:\Program Files (x86)\Microsoft Visual Studio\Installer`]
     -
     Also, `vsvars32.bat` is replaced with → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools/VsDevCmd_bat[`VsDevCmd.bat`] (which seems to have more options).
     -
     Now, with a combination of `vswhere.exe` and → Windows/dirs/Windows/System32/cmd_exe/commands/for/f[`for /f`], it is possible to call `VsDevCmd.bat` in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe]:
code {
C:\> for /f "usebackq delims=#" %a in (`"%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere" -latest -property installationPath`) do "%a\Common7\Tools\VsDevCmd.bat"
**********************************************************************
** Visual Studio 2017 Developer Command Prompt v15.9.7
** Copyright (c) 2017 Microsoft Corporation
**********************************************************************
code }

    `VsDevCmd.bat` among others also sets the `VSxxxCOMNTOOLS` environment variable.

     Although in Visual Studio 2017, `vsvars32.bat` is not under `…\Common7\Tools` anymore, there is `vcvars32.bat` (and `vcvars64.bat` and a few other
     → Windows/dirs/Windows/System32/cmd_exe/batch-files[batch files]) under
     → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Auxiliary/Build[`Installation-root\VC\Auxiliiary\Build`]. (*Note*: these batch files
     begin with with `vcvars…`, not with `vsvars…`!)
     -
     These scripts can be invoked similarly as before:
code {
C:\> for /f "usebackq delims=#" %a in (`"%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere" -latest -property installationPath`) do "%a\VC\Auxiliary\Build\vcvars32.bat"
**********************************************************************
** Visual Studio 2017 Developer Command Prompt v15.9.7
** Copyright (c) 2017 Microsoft Corporation
**********************************************************************
[vcvarsall.bat] Environment initialized for: 'x86'
code }

     See also the → development/tools/scripts/personal/vsenv_bat[`vsenv.bat`] batch file.

  }
  { Up to Visual Studio 2015

    Up to Visual Studio → Windows/development/Visual-Studio/versions[version] 2015 (?), the installer set the → development/environment-variable[environment variable] `%VSxxxCOMNTOOLS%` with which it was possible to
    set the environment variables. The `xxx` refers to the Visual Studio version (without dots), for example `100`, thus the variable being `%VS100COMNTOOLS%`. The value of the variable points to the
    → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools[`Commont7\Tools`] directory under
    the respective → Windows/development/Visual-Studio#vs-installation-root[installation root].

    With `%VSxxxCOMNTOOLS%`, it possible to locate and run `vsvars32.bat`, a batch file that sets the necessary environment variables.
    -
    Note the apostrophes when using this variable because of the spaces in the path that the variable points at:
code {
C:\> "%VS100COMNTOOLS%\vsvars32.bat"
Setting environment for using Microsoft Visual Studio 2010 x86 tools.
code }

  }
  


}

{ Modifications of these scripts

  These script (`VsDevCmd.bat` etc.) modify and add the following environment variables:

 { PATH

  The following directories are added to `%PATH%`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/bin[%VCToolsInstallDir%\bin]\HostX{86\x86,64\x64}`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE/VC/vcpackages[%VCIDEInstallDir%\VCPackages]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE/CommonExtensions/Microsoft/TestWindow[%DevEnvDir%\CommonExtensions\Microsoft\TestWindow]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team-Explorer[%DevEnvDir%\CommonExtensions\Microsoft\TeamFoundation\Team Explorer]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/MSBuild/x_y/bin[%VSINSTALLDIR%\MSBuild\15.0\bin]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/MSBuild/x_y/bin/Roslyn[%VSINSTALLDIR%\MSBuild\15.0\bin\Roslyn]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Team-Tools/Performance-Tools[%VSINSTALLDIR%\Team Tools\Performance Tools]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Team-Tools/Performance-Tools[%VSINSTALLDIR%\Team Tools\Performance Tools\x64`]  (*Only in 64 bit environment*)
  • → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/Shared/Common/VSPerfCollectionTools[`C:\Program Files (x86)\Microsoft Visual Studio\Shared\Common\VSPerfCollectionTools\`]
  • `C:\Program Files (x86)\Microsoft Visual Studio\Shared\Common\VSPerfCollectionTools\x64` (*Only in 64 bit environment*)
  • `→ Windows/dirs/Program-Files-x86/Microsoft-SDKs/Windows/version/bin/NETFX-version-Tools[%WindowsSDK_ExecutablePath_x86%\]` (x64 ?)
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/bin/version[%WindowsSdkVerBinPath%]x{86,64}`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/bin[%WindowsSdkDir%\bin]\x{86,64}`
  • `C:\Windows\Microsoft.NET\Framework{,64}\v4.0.30319`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE[%DevEnvDir%]`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools[%VSxxxCOMNTOOLS%]`

  The `__VSCMD_PREINIT_PATH` variable contains the value of `%PATH%` it had prior to adding the Visual Studio variables.
 }
 { INCLUDE

  These directories are added to the `%INCLUDE%` variable:
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[%VCToolsInstallDir%]\ATLMFC\include`
  • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/include[%VCToolsInstallDir%\include]`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n[%WindowsSdkDir%]\NETFXSDK\4.6.1\include\um`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version[%UniversalCRTSdkDir%/Include/%UCRTVersion%]\ucrt`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version[%UniversalCRTSdkDir%/Include/%UCRTVersion%]\shared`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version[%UniversalCRTSdkDir%/Include/%UCRTVersion%]\um`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version[%UniversalCRTSdkDir%/Include/%UCRTVersion%]\winrt`
  • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version[%UniversalCRTSdkDir%/Include/%UCRTVersion%]\cppwinrt`

  The `INCLUDE` directories are not dependent on the 86,64 environment.

 }
 { LIB

   These directories are added to the `LIB` variable:
    • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[%VCToolsInstallDir%]\ATLMFC\lib\{x86,x64}`
    • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/lib[v\lib]\{x86,x64}`
    • `C:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\lib\um\{x86,x64}`
    • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n[%WindowsSdkDir%]\lib\%UCRTVersion%\ucrt\{x86,x64}`
    • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n[%WindowsSdkDir%]\lib\%UCRTVersion%\um\{x86,x64}`

 }
 { LIBPATH

  These directories are added to the `LIBPATH` variable:
    • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[%VCToolsInstallDir%]\ATLMFC\lib\{x86,x64}`
    • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[%VCToolsInstallDir%]\lib\{x86,x64}`
    • `→ Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[%VCToolsInstallDir%]\lib\x86\store\references`  (*No difference in 86 and 64 environment. Error in batch file? *)
    • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n[%WindowsSdkDir%]\UnionMetadata\%UCRTVersion%`
    • `→ Windows/dirs/Program-Files-x86/Windows-Kits/n[%WindowsSdkDir%]\References\%UCRTVersion%`
    • `→ Windows/dirs/Windows/Microsoft_NET/Framework[%SystemRoot%\Microsoft.NET\Framework]{,64}\%FrameworkVersion%`   (*Note: 86 environment without 86 in path name.*)
 }
 { Directories

  Variables that specify specific directories.

table { lll

  ~Variable~                     ☰ ~Possible value~ ☰ ~Comment~
   VSINSTALLDIR                  ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition[`C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\`] ☰ The Visual Studio installation root-directory. Note the similarity to `%VCINSTALLDIR%`
   VCINSTALLDIR                  ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC[`%VSINSTALLDIR%VC\`] ☰  The `VC` directory below `%VSINSTALLDIR%`, it contains the C and C++ specific parts of a Visual Studio installation.
   VSxxxCOMNTOOLS                ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools[`%VSINSTALLDIR%Common7\Tools\`] ☰  `xxx` corresponds to `%VisualStudioVersion%` *without dot*.
   DevEnvDir                     ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE[`%VSINSTALLDIR%Common7\IDE\`] ☰ 
   VCIDEInstallDir               ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/IDE/VC[`%DevEnvDir%VC`] ☰ 
   VCToolsInstallDir             ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version[`%VCINSTALLDIR%Tools\MSVC\%VCToolsVersion%\`] ☰ 
   VCToolsRedistDir              ☰ → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Redist/MSVC/version[`%VCINSTALLDIR%Redist\MSVC]\x.y.z` ☰ 
   FrameworkDir32                ☰ → Windows/dirs/Windows/Microsoft_NET/Framework[`C:\Windows\Microsoft.NET\Framework\`] ☰ The location of the → Microsoft/dot-net[.NET] Framework
   FrameworkDir64                ☰ → Windows/dirs/Windows/Microsoft_NET/Framework64[`C:\Windows\Microsoft.NET\Framework64\`] ☰ The location of the → Microsoft/dot-net[.NET] Framework
   UniversalCRTSdkDir            ☰ → Windows/dirs/Program-Files-x86/Windows-Kits/n[`C:\Program Files (x86)\Windows Kits\10\`] ☰ 
   WindowsSdkDir                 ☰ → Windows/dirs/Program-Files-x86/Windows-Kits/n[`C:\Program Files (x86)\Windows Kits\10\`] ☰ Contains include files like `<windows.h>` under → Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version/um[`%UniversalCRTSdkDir%\Include\%UCRTVersion%\um`] or `<stdio.h>` under → Windows/dirs/Program-Files-x86/Windows-Kits/n/Include/version/ucrt[`%UniversalCRTSdkDir%\Include\%UCRTVersion%\ucrt`]
   WindowsSdkBinPath             ☰ → Windows/dirs/Program-Files-x86/Windows-Kits/n/bin[`%WindowsSdkDir%bin`] ☰ 
   WindowsSdkVerBinPath          ☰ → Windows/dirs/Program-Files-x86/Windows-Kits/n/bin/version[`%WindowsSdkDir%bin\%WindowsSDKVersion%\`] ☰ 
   WindowsLibPath                ☰ `%WindowsSdkDir%\UnionMetadata\10.0.17763.0;%WindowsSdkDir%\References\10.0.17763.0` ☰ 
   ExtensionSdkDir               ☰ `→ Windows/dirs/Program-Files-x86/Microsoft-SDKs[C:\Program Files (x86)\Microsoft SDKs]\Windows Kits\10\ExtensionSDKs` ☰ 
   WindowsSDK_ExecutablePath_x64 ☰ `→ Windows/dirs/Program-Files-x86/Microsoft-SDKs/Windows/version/bin/NETFX-version-Tools[C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.6.1 Tools]\x64\` ☰ 
   WindowsSDK_ExecutablePath_x86 ☰ `→ Windows/dirs/Program-Files-x86/Microsoft-SDKs/Windows/version/bin/NETFX-version-Tools[C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.6.1 Tools\`] ☰ 

  table }

}

{ Version numbers

  table { ll

  ~Variable name~                ☰ ~Possible value~
   Framework40Version            ☰ v4.0
   FrameworkVersion              ☰ v4.0.30319
   FrameworkVersion32            ☰ v4.0.30319
   FrameworkVersion64            ☰ v4.0.30319
   UCRTVersion                   ☰ 10.0.17763.0
   VSCMD_VER                     ☰ 15.9.7
   → Windows/development/Visual-Studio/versions[VisualStudioVersion] ☰ 15.0
   VCToolsVersion                ☰ 14.16.27023
   WindowsSDKVersion             ☰ 10.0.17763.0\
   WindowsSDKLibVersion          ☰ 10.0.17763.0\

 table }

   The `%FrameworkVersion%` variables seem to be used to locate the → Windows/dirs/Windows/Microsoft_NET/Framework64/version[`%SystemRoot%\Microsoft.NET\Framework64\%FrameWorkVersion64%`] directory.

}
{ Environment dependent

  Variables that are dependent on the target-bitness

 table { lll

   ~Variable~                  ☰ ~env 32 value~ ☰ ~env 64 value~
    Platform                   ☰ x86   ☰ x64
    FrameworkDir               ☰ C:\Windows\Microsoft.NET\Framework\ ☰ C:\Windows\Microsoft.NET\Framework64\
    VSCMD_ARG_HOST_ARCH        ☰ x86    ☰ x64
    VSCMD_ARG_TGT_ARCH         ☰ x86    ☰ x64
    __DOTNET_PREFERRED_BITNESS ☰ 32     ☰ 64
    __DOTNET_ADD_32BIT         ☰ 1      ☰ *n/a*
    __DOTNET_ADD_64BIT         ☰ *n/a*  ☰ 1

 table }

 }
 { Others

  table { ll

  ~Variable name~       ☰ ~Possible value~
   CommandPromptType    ☰ Native
   VSCMD_ARG_app_plat   ☰ Desktop

  table }

 }


}
