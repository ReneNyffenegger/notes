$ cl /FA

`cl /FA translation-unit.c` creates an → development/languages/assembler/x86[assembler] listing for the translation unit.

Without further options, the generated file has the suffix `.asm`.

`cl /FAs` adds the source file text into the generated file.

`cl /FAc` adds machine (byte) code into the generated file. The default suffix is then `.cod`.

`cl /FAcs` adds both source file text and machine code into the compiled file.

Unlike the gnu compiler, The assembler output that is produced with `/FA` cannot be fed to → Windows/development/Visual-Studio/masm[macro assembler] (`ml.exe`, `ml64.exe`), see also this
→ https://stackoverflow.com/questions/2815636[stackoverflow question].

The following → Windows/PowerShell script creates x86 and x64 `.asm` files with `/FA`, `/FAs`, `/FAc` and `/FAu` so that it's possible to diff the output.
gh|about-cl|/options/F/A/simple-program/run.ps1||

gh|about-cl|/options/F/A/simple-program/simple-program.c||

sa:

  Files that are created with the `/FA` compiler switch contain the following include:
code {
include → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/include/listing_inc
code }

  → Windows/development/Visual-Studio/cl/options/F[`cl /F…`]
