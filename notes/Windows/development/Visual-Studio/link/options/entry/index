$ link /ENTRY

The `/ENTRY` option specifies the symbol of the start address (→ Windows/development/Portable-Executable/EXE/entry-point[entry point]) for an
→ Windows/development/Portable-Executable/EXE[exe] or a → Windows/development/Portable-Executable/DLL[dll].

This entry point is expected to have *stdcall* → development/languages/C-C-plus-plus/calling-convention[calling convention].

{ Default entry points

table { lll

  → Windows/development/Visual-Studio/link/options/subsystem[`/SUBSYSTEM:CONSOLE`] ☰ `mainCRTStartup` or `wmainCRTStartup`       ☰ → Windows/development/CRT/source/crt0_c[`crt0.c`]
  → Windows/development/Visual-Studio/link/options/subsystem[`/SUBSYSTEM:WINDOWS`] ☰ `WinMainCRTStartup` or `wWinMainCRTStartup` ☰ → Windows/development/CRT/source/wincrt0_c[`wincrt0.c`], → Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/VC/Tools/MSVC/version/crt/src/vcruntime/mcrtexe_cpp[`mcrtexe.cpp`]
  `/DLL`                                                                           ☰ `_DllMainCRTStartup`                        ☰ → Windows/development/CRT/source/dllcrt0_c[`dllcrt0.c`]

table }

}
{ Specifying a non default entry point

  The following little progam simply creates a message box and returns 42. Thus, it does not need the → Windows/development/CRT[CRT] and can be linked with
  → Windows/development/Visual-Studio/link/options/nodefaultlib[`/nodefaultlib`].

  gh|about-cl|/linker/options/entry/app.c||
  
  Because it does not use the CRT, there is no → development/languages/C-C-plus-plus/C/main[`main`] function either and consequently no default entry point.

  Because the linker does not find one of the default entry points, it needs to be specfied with the `/ENTRY` option.

  Additionally, without default entry point, the linker cannot determine the target *subsystem*. Thus, it must be specified with the → Windows/development/Visual-Studio/link/options/subsystem[`/SUBSYSTEM`] linker option.
  Otherwise, the linker will complain with the error message *fatal error LNK1221: a subsystem can't be inferred and must be defined*.

  The subsystem is chosen to be `console` in order to be able to check the exit value of `app.exe` with `%errorlevel%`.
  
  The `Makefile` to create `app.exe`:
  gh|about-cl|/linker/options/entry/Makefile||

}
