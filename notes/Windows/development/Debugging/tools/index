$ Debugging Tools for Windows 

Microsoft's *Debugging Tools for Windows* include
table { ll
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/cdb_exe[`cdb.exe`] ☰ Console debugger
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/ntsd_exe[`ntsd.exe`] ☰ The *NT symbolic debugger*, which is identical to CDB except that it spawns a new text window when it is started.
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/kd_exe[`kd.exe`] ☰ Kernel debugger
  NTKD ☰ is identical to KD except that it spawns a new text window when it is started.
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/windbg_exe[`windbg.exe`] ☰ The *Windows debugger*, which is the GUI counterpart to CDB/NTSD and to KD and NTKD.
  WinDbg Preview ☰
table }

{ Installation

  These tools are included as part of the
    • → Windows/development/Kits/Driver[WDK] (Windows Driver Kit)
    • → Windows/development/Kits/Software-Development (Windows Development Kit)

  They can also be installed without installing an entiere Kit by selecting the corresponding feature
  from the SDK installer.

  If → Windows/development/Visual-Studio is also installed on a computer, then there are 6 debugging
  environments in total.

  The default installation directory is
  → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/index

}
{ Symbolig Debugger Engine

  All (? or only the non-Visual Studio ones?) of these environments use the same functionality that is provided by
  *Windows Symbolic Debugger Engine*, which is implemented in → Windows/dirs/Windows/System32/dbgeng_dll[`dbgeng.dll`].

}
{ Scripting the Debugger with JavaScript

  The debugger can be scripted with JavaScript
code {
.load → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/winext/JsProvider_dll
code }

}
{ Additional tools

  The *Debugging Tools for Windows* include a few additional tools which are located under the → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch[installation directory].

  TODO:
  table { ll
    SymProxy ☰  Create a single HTTP symbol server on your network that all your debuggers can point to. This has the benefit of pointing to multiple symbol servers (both internal and external) with a single symbol path, handling all authentication, and increasing performance via symbol caching. Symproxy.dll is in the SymProxy folder in the installation directory.
    SymChk ☰ Compare executable files to symbol files to verify that the correct symbols are available.
  table }

}
{ Differences to Visual Studio Debugging

  *Debugging Tools for Windows* are different from the → Windows/development/Visual-Studio debugger.

}

rem {

  https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/symbols-and-symbol-files

  Visual Studio Debugger Documentation
    https://docs.microsoft.com/en-us/visualstudio/debugger/?view=vs-2019

  Tools:
    https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/extra-tools


rem }

sa:
  Extensions (→ Windows/development/Portable-Executable/DLL[DLLs]) are located under → Windows/dirs/Program-Files-x86/Windows-Kits/n/Debuggers/arch/winext.

  → Windows/development/Debugging/tools/scripting[Using scripts] to automate debuggin.
