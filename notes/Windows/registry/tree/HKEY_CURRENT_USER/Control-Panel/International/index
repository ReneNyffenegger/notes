$ Registry: HKEY_CURRENT_USER\Control Panel\International

The `HKEY_CURRENT_USER\Control Panel\International` → Windows/registry/tree-structure/key stores the values that can be changed with the
→ Windows/dirs/Windows/System32/intl_cpl[region] → Windows/control-panel.

All → Windows/registry/tree-structure/value[values] in this key are → Windows/registry/data-types[`REG_SZ`]. A value-name's prefix of `s` seems to indicate that a «real» string is expected while `i` seems
to indicate an integer value.

table { llll

  ~Value name~ ☰ ~Description~ ☰ ~Example~ ☰ ~Comment~
  Locale ☰ ☰ `00000409` ☰ The hexadecimal representation of a → Windows/development/Internationalization/language#windows-language-id[language id].
  LocaleName ☰ ☰ `en-US` ☰ 
  s1159 ☰ ☰ `AM` ☰ 
  s2359 ☰ ☰ `PM` ☰ 
  sCountry ☰ ☰ `United States` ☰ 
  sCurrency ☰ Currency symbol ☰ `$` ☰ 
  sDate ☰ ☰ `/` ☰ These (up to 4, including NULL) characters that separate day, month and year. (Deprecated in favour of `sShortDate`)
  sDecimal ☰ Decimal Symbol ☰ `.` ☰ 
  sGrouping ☰ Digit grouping ☰ `3;0` ☰ 
  sLanguage ☰                  ☰ `ENU` ☰ 
  sList     ☰ List separator   ☰ `,` ☰ 
  sLongDate ☰ Long date format ☰ `dddd, MMMM d, yyyy` ☰ 
  sMonDecimalSep ☰ Decimal symbol (currency) ☰ `.` ☰ 
  sMonGrouping ☰ Digit grouping (currency) ☰ `3;0` ☰ 
  sMonThousandSep ☰ Digit grouping symbol (currency) ☰ `,` ☰ 
  sNativeDigits ☰ Standard digits ☰ `0123456789` ☰ Can for example be set to Chinese digits (`〇一二三四五六七八九`)
  sNegativeSign ☰                 ☰ `-` ☰ 
  sPositiveSign ☰                 ☰  ☰ 
  sShortDate    ☰ *Short date* format ☰ `M/d/yyyy` ☰ 
  sThousand     ☰ ☰ `,` ☰ 
  sTime         ☰ ☰ `:` ☰ 
  sTimeFormat ☰ Long time format ☰ `h:mm:ss tt` ☰ 
  sShortTime ☰ Short time format ☰ `h:mm tt` ☰ 
  sYearMonth ☰ ☰ `MMMM yyyy` ☰ 
  iCalendarType ☰ ☰ `1` ☰ 
  iCountry ☰ ☰ `1` ☰ 
  iCurrDigits ☰ Number of digits after decimal (Currency) ☰ `2` ☰ `(→ Windows/PowerShell/command-inventory/noun/culture/get[get-culture]).NumberFormat.CurrencyDecimalDigits`
  iCurrency ☰ Positive currency format ☰ `0` ☰ How `x` currency units are displayed: 0 = `$x`, 
  iDate ☰ ☰ `0` ☰ The *short-date* format ordering specifier: `0` = month, day, year; `1` = day, month, year, `2` = year, month, day. (`sShortDate` is preferred over `iDate`).
  iDigits ☰ Number of digits after decimal ☰ `2` ☰ 
  NumShape ☰ Use native digits ☰ `1` ☰ `1` = Never
  iFirstDayOfWeek ☰ ☰ `6` ☰  `0` = Monday, … `6` = Sunday
  iFirstWeekOfYear ☰ ☰ `0` ☰ 
  iLZero ☰ Display leading zeroes ☰ `1` ☰ 
  iMeasure ☰ Measurement system ☰ `1` ☰ `0`: Metric, `1`: U.S.
  iNegCurr ☰ Negative currency format ☰ `0` ☰ 
  iNegNumber ☰ Negative number format ☰ `1` ☰ 
  iPaperSize ☰ ☰ `1` ☰ 
  iTime ☰ ☰ `0` ☰ 
  iTimePrefix ☰ ☰ `0` ☰ 
  iTLZero ☰ ☰ `0` ☰ 

table }

{ Format specifiers #intl-format-specifiers

  The following table tries to list the format specifiers that can be used in date and time related formats (such as `sShortDate` or `sShortTime`):
  table { ll
    `d` / `dd` ☰ Day (ordinal) without/with leading zero
    `dddd` ☰ Name of day
    `h` / `hh` ☰ Hour, without/with leading zero
    `M` / `MM` ☰ Month, without/with leading zero
    `MMMM` ☰ Name of month
    `ss` ☰ seconds
    `tt` ☰ AM / PM ; changes hour to 12-format
  table }

  See also → Windows/dirs/Windows/System32/intl_cpl#intl-cpl-date-time-formats[Setting date and time formats with `intl.cpl`].

}
{ Modifying some settings in a PowerShell script

  { with get/set-culture

    The PowerShell cmdLet nount → Windows/PowerShell/command-inventory/noun/culture[`culture`] can be used to modify some (all) values in this registry key:
    gh|about-Windows-Registry|/HKEY_CURRENT_USER/Control Panel/International/culture.ps1||

  }
  { With set-itemProperty

    Of course, it is also possible to directly change the values with → Windows/PowerShell/command-inventory/noun/itemProperty/set[`set-itemProperty`].
    -
    In fact, this method seems to be required in order to have a 24-hours without AM/PM designator, as per → https://superuser.com/a/1579859/16610[this superuser answer].

    The following → Windows/PowerShell script changes some of format settings that are specified in this registry key:
    gh|about-Windows-Registry|/HKEY_CURRENT_USER/Control Panel/International/set.ps1||

    I am not sure what the best way is to apply the modifications after the script is run. Maybe something like the following:
code {
→ Windows/PowerShell/command-inventory/noun/process/get[get-process] → Windows/dirs/Windows/explorer_exe[explorer] | → Windows/PowerShell/command-inventory/noun/process/stop[stop-process]
explorer
code }

  }

}

sa:

  These values might be changed with the → Windows/dirs/Windows/System32/intl_cpl[`intl.cpl`] control panel.

  → Windows/settings/international#windows-intl-cmdlet[CmdLet nouns for international settings]

  → Windows/settings/international[International settings]

  → Windows/registry/tree/HKEY_CURRENT_USER/Control-Panel[`HKEY_CURRENT_USER\Control Panel`]

links:
  The → https://docs.microsoft.com/en-us/windows/win32/intl/locale-information-constants[`LOCALE_…`] constants
