$ Registry: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem

Some values under this → Windows/registry/tree-structure/key[registry key] are:
   • DisableDeleteNotification
   • FilterSupportedFeaturesMode
   • LongPathsEnabled
   • NtfsAllowExtendedCharacter8dot3Rename
   • NtfsBugcheckOnCorrupt
   • NtfsDisable8dot3NameCreation
   • NtfsDisableCompression
   • NtfsDisableEncryption
   • NtfsDisableLastAccessUpdate
   • NtfsDisableLfsDowngrade
   • NtfsDisableVolsnapHints
   • NtfsEncryptPagingFile
   • NtfsMemoryUsage
   • NtfsMftZoneReservation
   • NtfsQuotaNotifyRate
   • RefsDisableLastAccessUpdate
   • ScrubMode
   • SymlinkLocalToLocalEvaluation
   • SymlinkLocalToRemoteEvaluation
   • SymlinkRemoteToLocalEvaluation
   • SymlinkRemoteToRemoteEvaluation
   • UdfsCloseSessionOnEject
   • UdfsSoftwareDefectManagement
   • Win31FileSystem
   • Win95TruncatedExtensions

{ LongPathsEnabled #reg-long-paths-enabled

  Beginning with → Windows/versions/10 (Version 1607), setting `LongPathsEnabled` to 1 apparently allows to have filenames longer than 255 or 260.

  As soon as a
  → Windows/development/process[process] performs a call to a → Windows/development/WinAPI[Win32] file or directory function,
  the set value will be cached on a per process basis. During the lifetime of a process, the value won't be re-read.

  The value can also be modified with *Group Policy* at
  *Computer Configuration -> Administrative Templates -> System -> Filesystem -> Enable → Windows/file-system/NTFS long paths.*

  See also → Windows/file-system#win-fs-max-path-len[Maximum length of path names]

}
sa:
  → Windows/file-system
