$ Registry: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon

{ DontWatchSysProcs #DontWatchSysProcs

  If set, → Windows/dirs/Windows/System32/wininit_exe[`wininit.exe`] won't check if one of the processes it created crashed.

}
{ Enable automatic logon #reg-enable-automatic-logon

  Automatic logon for a → Windows/user-account is enabled by setting the value
  of ~AutoAdminLogon~ to 1, the value of ~DefaultUserName~ to the name of an existing user and ~DefaultPassword~ to his/her password.
  -
  When in a domain, `DefaultDomain` is additionally needed.

  gh|about-Windows-Registry|/HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon/automatic-logon.bat||

 ~Note~: the → development/security/password is now stored *in clear form* in the → Windows/registry[registry].

  In order to bypass this mechanism, the *shift key* must be pressed after/while starting → Windows.

  In addtion, there is also the registy value → https://devblogs.microsoft.com/oldnewthing/20060306-08/?p=32053[`ForceAutoLogon`] which, when set, *logs you back on after you log off*,
  effectively making it impossible for other users to log into the system except via remote administration.
  -
  This functionality is intended for *kiosks* where the corresponding account should be the only one available.

  See also → https://docs.microsoft.com/en-us/sysinternals/downloads/autologon[`autologon.exe`].

}
{ mpnotify #reg-mpnotify

  → https://twitter.com/0gtweet[Grzegorz Tworek] has → https://twitter.com/0gtweet/status/1372550832416260103[this interesting tweet]:
  "
    How exactly → Windows/dirs/Windows/System32/winload_exe leaks user password? Thinking face
    It checks mpnotify value in *HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon*, and then launches exe specified there or
    → Windows/dirs/Windows/System32/mpnotify_exe if empty. Exe registers RPC endpoint and winlogon binds to it
    and passes the password.
  "

}
{ NoDebugThread

  If set, → Windows/dirs/Windows/System32/wininit_exe[`wininit.exe`] won't create the «periodic timer queue».

}
{ SFCDisable

  Specifies disabledness of *Windows File Protection *

  The value can be one of
    • 0x00: enabled
    • 0x01: disabled with prompt at next → Windows/booting[boot].
    • 0x02: disabled at *next* boot
    • 0x04: enabled, no pop ups
    • 0xffffff9d: completely disabled

}
{ SFCDllCacheDir 

  `SFCDllCacheDir` specifies the *Dll Cache* directory.

}
{ SfcScan #reg-sfcscan

  The value of `SfcScan` specifies the behavior of the *System File Checker tool* and can be set with → Windows/dirs/Windows/System32/sfc_exe[`sfc.exe`].

  Possible values for `sfcScan` are
    • 0: Do not scan files when → Windows/booting[booting] (default)
    • 1: Scan all protected files in every restart (set with `sfc.exe /scanboot`)
    • 2: Scan all protected files once in the next restart (set with `sfc.exe /scanonce`)

}
{ Shell #reg-shell

  The default value of `Shell` is → Windows/dirs/Windows/explorer_exe[`explorer.exe`].

}
{ UserenvDebugLevel

  Enable/disable logging of → Windows/Group-Policy Engine processing to → Windows/dirs/Windows/debug/UserMode/Userenv_log[`%SystemRoot%\debug\UserMode\Userenv.log`]

  Possible values are:
  table { ll
    NONE ☰ `0x00000000`
    NORMAL ☰ `0x00000001`
    VERBOSE ☰ `0x00000002`
    LOGFILE ☰ `0x00010000`
    DEBUGGER ☰ `0x00020000`
  table }

}
{ Userinit #reg-userinit

 `Userinit` specifies the executabe that *Winlogon* runs when a → Windows/user-account[user] logs into → Windows.

  The (default) value of `Userinit` is `→ Windows/dirs/Windows/System32/userinit_exe[C:\Windows\system32\userinit.exe]`.

  The value of `Userinit` is queried by → Windows/dirs/Windows/System32/winlogon_exe[`winlogon.exe`].

}
sa:
  → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion[`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion`]

  Sub keys include
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Winlogon/SpecialAccounts/UserList[`SpecialAccounts`]
    • → Windows/registry/tree/HKEY_LOCAL_MACHINE/Software/Microsoft/Windows-NT/CurrentVersion/Winlogon/GPExtensions[`GPExtensions`]
