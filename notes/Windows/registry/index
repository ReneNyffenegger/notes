$ Windows registry
@ registry

Hives are just files some of which are located under → Windows/dirs/Windows/System32/config[`%SystemRoot%\System32\Config`].

{ Registry tree structure

  The registry stores its → development/Data in a → Windows/registry/tree-structure[tree structure].

}
{ Data types

  The data that is stored in the registry is constraint to a few → Windows/registry/data-types[data types].

}
{ Command line manipulation

  → Windows/dirs/Windows/System32/reg_exe[`reg`] allows to query the registry or chane values in the registry in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe].
  -
  For example, the following command adds a default value to a → Windows/registry/tree-structure/key:
code {
reg add "HKEY_CLASSES_ROOT\path\to\key" /t REG_SZ /ve /d "The value inserted"
code }

  See also the → Windows/dirs/Windows/System32/cmd_exe/batch-files[batch file] → development/tools/scripts/personal/regQuery_bat[`regQuery.bat`]:
  it can be used in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe] to query a specific value under a given key.

  The batch file → development/tools/scripts/personal/regat_bat[`regat.bat`] can be used in → Windows/dirs/Windows/System32/cmd_exe[cmd.exe] to open the registry
  (→ Windows/dirs/Windows/regedit_exe[`regedit.exe`]) at a given → Windows/registry/tree-structure/key.

}
{ WinAPI

  WinAPI registry functions are implemented in → Windows/dirs/Windows/System32/advapi32_dll[`advapi32.dll`].

}
{ Tools

  → https://sourceforge.net/projects/regshot[Regshot] is an open-source
  registry compare utility.
  -
  It takes a snapshot of the registry
  then compare it with a second one taken after doing changes to the PC or installing a new software.

}
{ PowerShell

  → Windows/PowerShell has the special *registry* → Windows/PowerShell/language/provider which allows to access the registry.

  An example is → Windows/PowerShell/examples/registry[here].

}
{ Cygwin

  In → development/Cygwin, the registry seems to be mounted(?) unto → Linux/fhs/proc/registry[`/proc/registry`].

}

sa:

  → Windows/registry/tree[Registry tree]

  
  → Windows/registry/regedit, →Windows/registry/Configuring-Windows-with-registry
  -
  → Windows/dirs/Windows/System32/regini_exe[`regini.exe`] is the registry initializer.

  → development/languages/Perl/modules/Win32/TieRegistry

  → Windows/registry/Add-item-to-desktop-right-click-menu

  → Windows/Appearance/Mouse#mouse-registry[Mouse related] registry keys.

  → development/databases/SQL-Server[SQL Server] has the stored procedure → https://github.com/ReneNyffenegger/temp-SQL-Server/blob/master/xp_regRead.sql[`xp_regread`] that allows to read the registry.

links:
  → https://docs.microsoft.com/en-us/windows/desktop/sysinfo/enumerating-registry-subkeys[Enumerating Registry Subkeys] with → development/languages/C-C-plus-plus/CPP[C++].

  → https://pogostick.net/~pnh/ntpasswd[Offline registry tools and password resetter]

  → https://docs.microsoft.com/en-us/sysinternals/downloads/procmon[Process Monitor] (which replaced regmon) shows real-time registry (and file system and process/thread activity).
