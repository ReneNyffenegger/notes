
The *printk log buffer* is also referred as *kernel ring buffer* or *kernel log buffer*.

The kernel ring buffer is a *cyclic buffer* whose size is controlled by `LOG_BUF_LEN`.

{ printk #printk

  `printk` (defined in `→ Linux/kernel/source/kernel/printk/printk_c`) fills the *kernel log buffer*  with messages. The size of the log buffer is (`1<<→ Linux/kernel/CONFIG/LOG_BUF_SHIFT`)

}

{ Log levels

  Each message is associated with a log level:
    • `KERN_EMERG`   (0) - System is unusable
    • `KERN_ALERT`   (1) - Action must be taken immediately
    • `KERN_CRIT`    (2) - Critical conditions
    • `KERN_ERR`     (3) - Error conditions
    • `KERN_WARNING` (4) - Warning conditions
    • `KERN_NOTICE`  (5) - Normal, but significant condition
    • `KERN_INFO`    (6) - Informational
    • `KERN_DEBUG`   (7) - Debug-level messages

  { Console log level #console-log-level

    Messages with a log level less than the *console log level* are printed to the console.

    The console log level corresponds to the first number in → Linux/fhs/proc/sys/kernel/printk.

  }
     
}
{ Message format

  Linux' → https://www.kernel.org/doc/html/v4.10/process/coding-style.html#printing-kernel-messages[kernel coding style] has some notes on the preferred  message format, such as
    • Do not use crippled words like *dont*; use *do not* or *don't* instead
    • Messages do not have to be terminated with a period.
    • Printing numbers in parentheses (%d) adds no value and should be avoided.
    • `<linux/dev_printk.h>` has a number macros that make sure messages are matched to the right device and driver, and are tagged with the right level: `dev_err()`, `dev_warn()`, `dev_info()` etc. (Compare with `pr_info()`, `pr_warn()`, `pr_err()` etc. which are defined in `<linux/printk.h>`

}

{ TODO

  It seems as though `printk` can only be used when PDA is initialized.

}


sa:

 `→ Linux/fhs/proc/sys/kernel/printk`

 `→ Linux/kernel/CONFIG/LOG_BUF_SHIFT`

 `→ Linux/shell/commands/dmesg` can be used to examine the kernel ring buffer.
