$ Linux kernel module
@ kernel module

A (loadable) kernel module allows to extend the functionality of the →Linux/kernel[kernel] (new →hardware, →Linux/filesystem, system calls) or modify the behavior of the kernel *at runtime* (without restarting
the kernel) by inserting or removing special code into/from the kernel.

Modules that are listed in a  → Linux/fhs/etc/modules-load_d[/etc/modules-load.d/*.conf] file are automatically loaded when the system starts up.

{ Parameters #kernel-module-param

  When loaded into the kernel, a module shows its parameters in `→ Linux/fhs/sys/module/module-name/parameter/parameter-name`.
  -
  The current list of all parameters of a loadable module can be shown with
code {
→ Linux/shell/commands/modinfo -p $modulename
code }

  Some parameters can be changed at runtime like so:
code {
echo -n $value > → Linux/fhs/sys/module/module-name/parameter/parameter-name
code }

}

{ Module names

  The Kernel has a single global namespace for all modules.

  Hyphens (`-`) and underscores (`_`) are not differentiated in module names.

}
{ Relation to firmware

  An → https://forums.gentoo.org/viewtopic-p-7640140.html[answer in a Gentoo forum] says that there are four possible combinations for a module that needs fimware:
   • The module and firmware can both be in the kernel (that works)
   • The module can be in `/lib/modules` and the firmware in `/lib/firmware` (that works too)
   • The other two combinations fail.

  A built in driver cannot load its firmware from `/lib/firmware` as root is not yet mouted.

  A loadable module cannot get its firmware from inside the kernel as its no longer available.

}
{ Shell commands #module-shell-commands

 `→ Linux/shell/commands/insmod` inserts a module into the → Linux/kernel[kernel].

 `→ Linux/shell/commands/lsmod` displays loaded modules.

  → Linux/shell/commands/modinfo[`modinfo`] show information about a module.

  → Linux/shell/commands/modprobe[`modprobe`] adds or removes modules to/from the → Linux/kernel[kernel].

  → Linux/shell/commands/systool[`systool -v -m module_name`] shows the set options for a module.

}

sa:

 `→ Linux/kernel/module/dkms`

 `→ Linux/fhs/proc/modules`,
 `→ Linux/fhs/sys/module`

  → Linux/kernel/source/kernel/module_c

