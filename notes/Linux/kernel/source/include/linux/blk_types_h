$ include/linux/blk_types.h

Data types and constants for → Linux/devices#block-devices[block devices].

{ struct block_device #linux-struct-block_device

  An instance of `struct block_device` is pointed at from → #linux-struct-bio[`struct bio`].

  See also
    • the → Linux/kernel/source/include/linux/blkdev_h#linux-struct-gendisk[`struct gendisk`]
    • the environment variable `POSIXLY_CORRECT`

}
{ struct bio #linux-struct-bio

 `struct bio` is the main unit of I/O for the block layer and lower layers (i. e. drivers and stacking drivers).

  A `bio` → https://lwn.net/Articles/736534/[identifies]
    • the target device,
    • an offset into the linear address space of the device,
    • a request (typically `read` or `write`),
    • a size and
    • some memory where data will be copied to or from.

  Among others, `struct bio` contains a pointer to a → #linux-struct-block_device[`struct block_device`] (member `*bi_bdev`).

}
{ enum stat_group #linux-enum-stat_group

 `enum stat_group` defines categories of statistics that are gathered in block devices (see `→ Linux/kernel/source/include/linux/part_stat_h`)

}

{ Block/sector size, SECTOR_SIZE #linux-block-size

  The → https://github.com/torvalds/linux/blob/771ed66105de9106a6f3e4311e06451881cdac5e/include/linux/blk_types.h#L25-L34[basic unit of I/O is a sector of 512 bytes] and corresponds to the value of the macro `SECTOR_SIZE`.

  This size is used in a contexts such as
    • blk
    • bio
    • genhd

  Variables whose type is `sector_t` (a typedef'd `u64` in `→ Linux/kernel/source/include/linux/types_h`) represent an offset or size that is a multiple of 512 bytes.

}
