$ include/uapi/linux/types.h

{ __bitwise #linux-types-h-bitwise

code {
/* sparse defines __CHECKER__; see Documentation/dev-tools/sparse.rst */
#ifdef __CHECKER__
#define __bitwise	__attribute__((bitwise))
#else
#define __bitwise
#endif

/* The kernel doesn't use this legacy form, but user space does */
#define __bitwise__ __bitwise
code }

}
{ Little endian and big endian types #linux-types-h-endian

  Types to express → development/endianness (at least that's what I understand they do):
code {
typedef __u16 __bitwise __le16;
typedef __u16 __bitwise __be16;
typedef __u32 __bitwise __le32;
typedef __u32 __bitwise __be32;
typedef __u64 __bitwise __le64;
typedef __u64 __bitwise __be64;
code }

}
{ __poll_t #linux-types-h-__poll_t

 `__poll_t` is used in → Linux/kernel/source/include/uapi/linux/eventpoll_h#linux-epoll_event[`struct epoll_event`].

code {
typedef unsigned __bitwise __poll_t;
code }


}

sa:
 `→ Linux/kernel/source/include/uapi/linux/posix_types_h`
