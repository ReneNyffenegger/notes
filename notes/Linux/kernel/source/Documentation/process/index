$ Documentation/process/

table { ll
  `1.Intro.rst` ☰
  `2.Process.rst` ☰ Introduction to the development process, kernel release cycle, the mechanics of the merge window etc.
  `3.Early-stage.rst` ☰ Early stage planning (with emphasis on involving the development community as soon as possible)
  → Linux/kernel/source/Documentation/process/4-Coding_rst[`4.Coding.rst`] ☰ Coding process and its pitfals; introduction of assisting tools
  → Linux/kernel/source/Documentation/process/5_Posting_rst[`5.Posting.rst`] ☰ How to post patches for review (patch format, mail to email addresses)
  `6.Followthrough.rst` ☰ Description of process after submitting a patchj
  `7.AdvancedTopics.rst` ☰ Manage patches with git, review other developers' patches.
  `8.Conclusion.rst` ☰
  `adding-syscalls.rst` ☰
  `applying-patches.rst` ☰
  `botching-up-ioctls.rst` ☰
  `changes.rst` ☰
  `clang-format.rst` ☰
  `code-of-conduct-interpretation.rst` ☰
  `code-of-conduct.rst` ☰
  → Linux/kernel/source/Documentation/process/coding-style_rst[`coding-style.rst`] ☰
  `contribution-maturity-model.rst` ☰
  `deprecated.rst` ☰
  `development-process.rst` ☰
  → Linux/kernel/source/Documentation/process/email-clients_rst[`email-clients.rst`] ☰ helpful hints on making specific mail clients work for sending patches.
  `embargoed-hardware-issues.rst` ☰
  `handling-regressions.rst` ☰
  `howto.rst` ☰
  `index.rst` ☰
  `kernel-docs.rst` ☰
  `kernel-driver-statement.rst` ☰
  `kernel-enforcement-statement.rst` ☰
  `license-rules.rst` ☰
  `magic-number.rst` ☰
  `maintainer-handbooks.rst` ☰
  `maintainer-kvm-x86.rst` ☰
  `maintainer-netdev.rst` ☰
  `maintainer-pgp-guide.rst` ☰
  `maintainer-soc.rst` ☰
  `maintainers.rst` ☰
  `maintainer-tip.rst` ☰
  `management-style.rst` ☰
  `programming-language.rst` ☰
  `researcher-guidelines.rst` ☰
  `security-bugs.rst` ☰
  `stable-api-nonsense.rst` ☰
  `stable-kernel-rules.rst` ☰
  `submit-checklist.rst` ☰
  `submitting-patches.rst` ☰
  `volatile-considered-harmful.rst` ☰
table }
