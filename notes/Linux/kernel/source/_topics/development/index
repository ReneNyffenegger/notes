$ Kernel sources: Development

{ Patches #linux-patch

  Patches must be prepared against a specific version of the kernel (typically the current mainline version) - but sometimes, it's necessary to create a patch against *linux-next*, -mm or a subsystem tree.

  Complex modification or additions of functionality should be submitted as a *series of patches*.

  Use `→ Linux/kernel/source/scripts/checkpatch_pl` to verify the format of a patch.

  { Mailing patches

    Patches should always be sent in plain text format.

    See also → Linux/kernel/source/Documentation/process/email-clients_rst

    { Subject line

     `[PATCH nn/mm] subsys: one-line description of the patch` where `nn` is a counter and `mm` the number of patches in a series and subsys is the name of the affected subsystem.
     -
     `nn/mm` can be omitted for single standalone patches.

    }

  }
  { See also

    See also `→ Linux/kernel/source/Documentation/process/submitting-patches_rst`

  }

}
{ Only one GIT repository branch

  The → https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/[main git repository] has one branch only: *master*.

? Before a patch is applied to the Linux repository, if typically goes into on of → https://git.kernel.org/pub/scm/linux/kernel/git[the other repositories].

}
{ Tip tree #linux-tip-tree

  The → https://www.kernel.org/doc/html/latest/process/maintainer-tip.html[tip tree] comprises
    • x86 architecture
    • scheduler
    • locking and atomics
    • generic interrupt subsystem and interrupt chip drivers
    • time, timers, timekeeping, NOHZ and related chip drivers
    • performance counters core architecture support and tooling
    • CPU hotplug core
    • RAS core
    • EFI core, and
    • RCU

  See also `kernel/configs/x86_debug.config`

}
