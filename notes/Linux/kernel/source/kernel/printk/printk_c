$ kernel/printk/printk.c

This file defines the entry point for the following → Linux/kernel/sys-calls[syscalls]: `syslog`.

{ printk() #kernel-printk

  `printk`  fills the → Linux/kernel/printk-log-buffer[kernel log buffer] with messages. The size of the log buffer is (`1<<→ Linux/kernel/CONFIG/LOG_BUF_SHIFT`)

   TODO: `printk` is a macro defined in `→ Linux/kernel/source/include/linux/printk_h`.

}
{ oops_in_progress

  If `oops_in_progress` (an `int`) is set, it indicates that an *oops*, `panic()`, `BUG()` or `die()` is in progress.

  See also the functions `bust_spinlocks()` in `lib/bust_spinlocks.c` and `kdb_msg_write()` in `kernel/debug/kdb/kdb_io.c`.
 
}

sa:

  → Linux/kernel/printk-log-buffer

 `→ Linux/kernel/source/include/linux/printk_h`

 `→ Linux/kernel/source/arch/x86/kernel/early_printk_c`

  → Linux/kernel/debugging
