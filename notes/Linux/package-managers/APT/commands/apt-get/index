$ apt-get

`apt-get` is the *APT package handling utility*.

{ Commands

  table { ll

     `update` ☰ Resynchronize the *package index files* from their sources (whose location are specified in `→ Linux/fhs/etc/apt/sources_list`). Compare with `→ Linux/package-managers/APT/commands/apt/update` and `apt-get upgrade`
     `upgrade` ☰ Install the newest versions of all packages currently installed on the system.
     `dist-upgrade` ☰ Functionality of `upgrade` plus managing *changed dependencies*. `dist-upgrade` might choose to remove packages (which `update` will not).
     `dselect-upgrade` ☰ Used in conjunction with `dselect`.
     `install pgk…` ☰ Install the mentioned packages (package name, not fully qualified filename)
     `reinstall` ☰ Alias for `install --reinstall`
     `remove` ☰
     `purge` ☰ Note only remove a package, but also the associated configuration files.
     `source` ☰ Fetch source packages
     `build-dep` ☰ Install/remove packages in an attempt to satisfy the build dependencies for a source package.
     `satisfy` ☰ Satisfy the given dependency strings.
     `check` ☰ Updates the package cache and checks for broken dependencies (for diagnostic purposes)
     `download` ☰ Download the given binary package into the current directory.
     `clean` ☰ Clears out the local repository of retrieved package files. It removes everything but the lock file from `/var/cache/apt/archives/` and `/var/cache/apt/archives/partial/`
     `autoclean` ☰
     `autoremove` ☰
     `changelog` ☰ Tries to download the changelog of a package and displays it through sensible-pager.
     `indextargets` ☰ Displays by default a *deb822* formatted listing of information about all data files

  table }
}
{ Options

   table { llll
      ☰ ☰ ☰ ~Configuration item~
       ☰ `--no-install-recommends` ☰  Do not consider recommended packages as a dependency for installing.  ☰ `APT::Install-Recommends`
       ☰ `--install-suggests` ☰  Consider suggested packages as a dependency for installing.  ☰ `APT::Install-Suggests`
      `-d` ☰ `--download-only` ☰  Packages are neither unpacked nor installed.  ☰ `APT::Get::Download-Only`
      `-f` ☰ `--fix-broken` ☰  Try to fix system with broken dependencies. ☰ `APT::Get::Fix-Broken`
      `-m` ☰ `--ignore-missing,` ☰  ☰ `APT::Get::Fix-Missing`
       ☰ `--no-download` ☰ Disables downloading of packages, typicall used together with `--ignore-missing` to force APT to use only the `*.deb` files it has already downloaded.  ☰ `APT::Get::Download`
      `-q` ☰ `--quiet` ☰  `-q -q` is even quieter.  ☰ `quiet`
      `-y` ☰ `--yes,` ☰   ☰ `APT::Get::Assume-Yes`
       ☰ `--assume-no` ☰   ☰ `APT::Get::Assume-No`
       ☰ `--no-show-upgraded` ☰ Do not show a list of all packages that are to be upgraded.  ☰ `APT::Get::Show-Upgraded`
      `-V` ☰ `--verbose-versions` ☰ Show full versions for upgraded and installed packages.  ☰ `APT::Get::Show-Versions`
      `-a` ☰ `--host-architecture` ☰  ☰ `APT::Get::Host-Architecture`
      `-P` ☰ `--build-profiles` ☰   ☰ `APT::Build-Profiles`
      `-b` ☰ `--compile`, `--build` ☰  Compile source packages after downloading them.  ☰ `APT::Get::Compile`
       ☰ `--ignore-hold` ☰  Ignore package holds.  ☰ `APT::Ignore-Hold`
       ☰ `--with-new-pkgs` ☰   ☰ `APT::Get::Upgrade-Allow-New`
       ☰ `--no-upgrade` ☰   ☰ `APT::Get::Upgrade`
       ☰ `--only-upgrade` ☰  ☰ `APT::Get::Only-Upgrade`
       ☰ `--allow-downgrades` ☰  A *dangerous option* as it can destroy the system. ☰ `APT::Get::allow-downgrades`
       ☰ `--allow-remove-essential` ☰  A *dangerous option*.  ☰ `APT::Get::allow-remove-essential`
       ☰ `--allow-change-held-packages` ☰  A *dangerous option*  ☰ `APT::Get::allow-change-held-packages`
       ☰ `--force-yes` ☰ A *dangerous option*  ☰ `APT::Get::force-yes`
       ☰ `--print-uris` ☰ Print URIs of files to install rather than fetching them.  ☰ `APT::Get::Print-URIs`
       ☰ `--purge` ☰ `remove --purge` is equivalent to the `purge` command.  ☰ `APT::Get::Purge`
       ☰ `--reinstall` ☰  Re-install packages that are already installed and at the newest version.  ☰ `APT::Get::ReInstall`
       ☰ `--list-cleanup` ☰ Erase obsolete files from `→ Linux/fhs/var/lib/apt/lists` automatically. This option is on by default; `--no-list-cleanup` turns it off. ☰ `APT::Get::List-Cleanup`
      `-t` ☰ `--target-release`, `--default-release` ☰ Controls which distribution packages will be retrieved from (default input to the policy engine), overrides defaults in `/etc/apt/preferences`. Examples: `-t '2.1*'`,  `-t unstable` or `-t sid`.  ☰ `APT::Default-Release`
       ☰ `--trivial-only` ☰   ☰ `APT::Get::Trivial-Only`
       ☰ `--mark-auto` ☰  After successful installation, mark all freshly installed packages as *automatically installed*. Same as running `apt-mark` auto for all installed packages.  ☰ `APT::Get::Mark-Auto`
       ☰ `--no-remove` ☰  Abort (without prompting) if any packages are to be removed  ☰ `APT::Get::Remove`
       ☰ `--auto-remove` `--autoremove` ☰    ☰ `APT::Get::AutomaticRemove`
       ☰ `--only-source` ☰ Used for `source` and `build-`dep` commands: indicates that the given source names are not to be mapped through the binary table.  ☰ `APT::Get::Only-Source`
       ☰ `--diff-only`, `--dsc-only`, `--tar-only` ☰ Download only the diff, dsc or tar file of a source archive.  ☰ APT::Get::Diff-Only, APT::Get::Dsc-Only` and `APT::Get::Tar-Only`
       ☰ `--arch-only` ☰ Only process architecture-dependent build-dependencies.  ☰ `APT::Get::Arch-Only`
       ☰ `--indep-only` ☰  Only process architecture-independent build-dependencies.  ☰ `APT::Get::Indep-Only`
       ☰ `--allow-unauthenticated` ☰    ☰ `APT::Get::AllowUnauthenticated`
       ☰ `--no-allow-insecure-repositories` ☰   ☰ `Acquire::AllowInsecureRepositories`
       ☰ `--allow-releaseinfo-change` ☰  ☰ `Acquire::AllowReleaseInfoChange`
       ☰ `--show-progress` ☰  ☰  Dpkg::Progress and `Dpkg::Progress-Fancy`
       ☰ `--with-source filename` ☰  Adds the given file as a source for metadata.  ☰
       `-eany` ☰ `--error-on=any` ☰  Fail the update command if any error occurred, even a transient one. ☰
      `-h` ☰ `--help` ☰  Show a short usage summary. ☰
      `-v` ☰ `--version` ☰  Show the program version. ☰
      `-c` ☰ `--config-file` ☰ Read the default configuration file and then given configuration file.  ☰
      `-o` ☰ `--option` ☰  Set a Configuration Option; This will set an arbitrary configuration option: `-o Foo::Bar=bar` ☰

   table }

   { Simpulation options that perform no actions 

       `-s`, `--simulate`, `--just-print`, `--dry-run`, `--recon`, `--no-act`

        Simulated runs print out a series of lines, each representing a `dpkg` operation:
          • configure (Conf),
          • remove (Remv) or
          • unpack (Inst).

       Square brackets indicate broken packages; empty square brackets indicate breaks that are of no consequence.

   }

}


rem {

       apt-get [-asqdyfmubV] [-o=config_string] [-c=config_file] [-t=target_release] [-a=architecture] {update | upgrade | dselect-upgrade | dist-upgrade | install pkg [{=pkg_version_number | /target_release}]...  | remove pkg...  | purge pkg...  | source pkg [{=pkg_version_number | /target_release}]...  |
               build-dep pkg [{=pkg_version_number | /target_release}]...  | download pkg [{=pkg_version_number | /target_release}]...  | check | clean | autoclean | autoremove | {-v | --version} | {-h | --help}}


OPTIONS
       All command line options may be set using the configuration file, the descriptions indicate the configuration option to set. For boolean options you can override the config file by using something like -f-,--no-f, -f=no or several other variations.


FILES
       /etc/apt/sources.list
           Locations to fetch packages from. Configuration Item: Dir::Etc::SourceList.

       /etc/apt/sources.list.d/
           File fragments for locations to fetch packages from. Configuration Item: Dir::Etc::SourceParts.

       /etc/apt/apt.conf
           APT configuration file. Configuration Item: Dir::Etc::Main.

       /etc/apt/apt.conf.d/
           APT configuration file fragments. Configuration Item: Dir::Etc::Parts.

       /etc/apt/preferences
           Version preferences file. This is where you would specify "pinning", i.e. a preference to get certain packages from a separate source or from a different version of a distribution. Configuration Item: Dir::Etc::Preferences.

       /etc/apt/preferences.d/
           File fragments for the version preferences. Configuration Item: Dir::Etc::PreferencesParts.

       /var/cache/apt/archives/
           Storage area for retrieved package files. Configuration Item: Dir::Cache::Archives.

       /var/cache/apt/archives/partial/
           Storage area for package files in transit. Configuration Item: Dir::Cache::Archives (partial will be implicitly appended)

       /var/lib/apt/lists/
           Storage area for state information for each package resource specified in sources.list(5) Configuration Item: Dir::State::Lists.

       /var/lib/apt/lists/partial/
           Storage area for state information in transit. Configuration Item: Dir::State::Lists (partial will be implicitly appended)

SEE ALSO
       apt-cache(8), apt-cdrom(8), dpkg(1), sources.list(5), apt.conf(5), apt-config(8), apt-secure(8), The APT User's guide in /usr/share/doc/apt-doc/, apt_preferences(5), the APT Howto.



rem }
{ TODO

  merge with → Linux/APT/commands/apt-get[this note].

}

sa:
  `apt-get` is a «backend» utility for which some «frontend» utilities exist:
     • `aptitude`
     • `synaptic`
     • `wajig`
