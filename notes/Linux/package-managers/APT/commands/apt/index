
code {
apt [options] command
code }

`apt` provides the same functionality as `→ Linux/package-managers/APT/commands/apt-get` and `→ Linux/package-managers/APT/commands/apt-cache` but has different default values for some options (see `man 5 apt.conf`) which makes `apt`
more suitable to be used as an *end-user tool for interactive use* (while the two other commands are intended for usage in scripts).
-
In fact, `apt` prints the following message to → development/stdin-stdout-stderr[stderr]:
code {
$ apt install xyz 1>→ Linux/fhs/dev/null

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
code }

{ Most used commands

  table { ll

    → Linux/package-managers/APT/commands/apt/update[`update`] ☰ Update list of available packages from all configured sources. This list is used by other commands. Compare with `apt-get update`.
    → Linux/package-managers/APT/commands/apt/list[`list`] ☰ list packages based on package names (similar to `→ Linux/package-managers/dpkg/commands/dpkg-query --list`)
    `search` ☰ Use a → development/regular-expressions[regular expression] to search in the list of available packages in display names and package descriptions. Compare with `→ Linux/package-managers/APT/commands/apt-file` which searches for file names matching a given expression.
    → Linux/package-managers/APT/commands/apt/show[`show`] ☰ Show package details (version, tags, download size, APT source, description, section, dependencies, priority etc). Compare with `→ Linux/package-managers/APT/commands/apt-get showpkg`.
    → Linux/package-managers/APT/commands/apt/install[`install`] ☰ Install packages
    `reinstall` ☰ Reinstall packages
    `remove` ☰ remove packages
    `autoremove` ☰ Remove automatically all unused packages, unless they are marked with `apt-mark`.
    → Linux/package-managers/APT/commands/apt/upgrade[`upgrade`] ☰ Upgrade all currently installed packages on the system from the sources configured in `→ Linux/fhs/etc/apt/sources_list` and `/etc/apt/sources.list.d/`. Compare with `full-upgrade`.
    `full-upgrade` ☰ Upgrade the system by removing/installing/upgrading packages.
    `edit-sources` ☰ Edit `→ Linux/fhs/etc/apt/sources_list` with  some sanity checks when done editing.
    `satisfy` ☰ Satisfy dependency strings
    `full-upgrade` ☰ Like `upgrade`, but remove currently installed pacakges if so needed.
    → Linux/package-managers/APT/commands/apt/build-dep[`build-dep`] ☰

  table }

}
{ Options

  table { ll
     `-h` ☰ 
     `-o=config_string` ☰ 
     `-c=config_file` ☰ 
     `-t=target_release` ☰ 
     `-a=architecture` ☰ 

  table }


}

{ Misc

  { Selecting a specific package version / release

    A specific version of a package is indicated after an equal sign following the package name.

    A specific release can be chosen by specifying its codename (`bullseye`, `bookworm` etc) or suite name (`stable`, `testing`, `unstable`) after a forward slash.

  }
  { Python wrapper named apt in Linux Mint

    Apparently, Linux Mint has a Python script which is also named `apt`(!) and calls `apt-get` under the hood.

  }
}

sa:

  → Linux/package-managers/APT

  `/usr/share/doc/apt-doc`
