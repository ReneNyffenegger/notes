

code {
apt [options] command
code }

`apt` provides the same functionality as `apt-get` and `apt-cache` but has different default values for some options (see `man 5 apt.conf`) which makes `apt`
more suitable to be used as an *end-user tool for interactive use*.

{ Most used commands

  table { ll

    → Linux/package-managers/APT/commands/apt/update[`update`] ☰ update list of available packages from all configured sources. This list is used by other commands. Compare with `apt-get update`.
    `list` ☰ list packages based on package names (similar to `dpkg-query --list` in )
    `search` ☰ Use a → development/regular-expressions[regular expression] to search in the list of available pacakges in display names and package descriptions. Compare with `→ Linux/package-managers/APT/commands/apt-file` which searches for file names matching a given expression.
    `show` ☰ show package details (version, tags, download size, APT source, description, section, dependencies, priority etc). Compare with `→ Linux/package-managers/APT/commands/apt-get showpkg`.
    `install` ☰ install packages
    `reinstall` ☰ reinstall packages
    `remove` ☰ remove packages
    `autoremove` ☰ Remove automatically all unused packages, unless they are marked with `apt-mark`.
    `upgrade` ☰ upgrade all currently installed packages on the system from the sources configured in `→ Linux/fhs/etc/apt/sources_list` and `/etc/apt/sources.list.d/`. Compare with `full-upgrade`.
    `full-upgrade` ☰ upgrade the system by removing/installing/upgrading packages.
    `edit-sources` ☰ edit `→ Linux/fhs/etc/apt/sources_list` with  some sanity checks when done editing.
    `satisfy` ☰ satisfy dependency strings
    `full-upgrade` ☰ Like `upgrade`, but remove currently installed pacakges if so needed.

  table }

}
{ Options

  table { ll
     `-h` ☰ 
     `-o=config_string` ☰ 
     `-c=config_file` ☰ 
     `-t=target_release` ☰ 
     `-a=architecture` ☰ 

  table }


}

{ Misc

  { Selecting a specfic package version / release

    A specific version of a package is indicated after an equal sign following the package name.

    A specific release can be chosen by specifying its codename (`bullseye`, `bookworm` etc) or suite name (`stable`, `testing`, `unstable`) after a forward slash.

  }
}

sa:

  → Linux/package-managers/APT

  `/usr/share/doc/apt-doc`
