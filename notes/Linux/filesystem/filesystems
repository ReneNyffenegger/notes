
rem {

TODO CIFS

rem }

The filesystems that the running kernel supports can be displayed with
code {
$ → Linux/shell/commands/cat → Linux/fhs/proc/filesystems
code }

{ btrfs #btrfs

  The «B-Tree» filesystem uses B-Trees and is designed to meet the expanding scalability requirements of large storage subsystems.

  The B-Trees allow to efficiently access and update large blocks of data no matter how large the tree grows.

  Important features:
    • Copy-on-write allows to create both readable and writable snapshots, and to roll back a file system to a previous state.
    • Checksums to enforce data integrity («Self healing»)
    • Transparent compression
    • Integrated logical volume management allows to implement RAID 0, RAID 1 or RAID 10 configurations, and to dynamically add and remove storage capacity.

}
{ cgmfs
}
{ cgroup
}
{ debugfs #debugfs
  
  TODO: See → Linux/kernel/ftrace

}
{ devpts #devpts

  A pseudo filesystem, usually mounted on `→ Linux/fhs/dev/pts`.
}
{ ext2

  the standard → Linux/index filesystem.

}
{ ext3

  A version of ext2, enhanced with journaling.

}
{ ext4 #ext4

  ext3 with scalability and reliality enchancments.

  ext4 is a reliable all-purpose filesystem for all platforms.

  ext4 lacks modern features like reflinks, compare with → #xfs[xfs].

}
{ FAT #fs-fat

  FAT stands for *file allocation table*.

  FAT was the default file system for MS-DOS and Windows 9x.
  -
  In Windows XP and Windows NT, FAT was replaced by → Windows/file-system/NTFS.
  -
  A FAT partition can be converted to NTFS with the command line tool `→ Windows/dirs/Windows/System32/convert_exe`.

  There are three major variants of FAT: FAT12, FAT16 and FAT32

  Although dated, FAT is still used for → hardware/UEFI/ESP[EFI system partitions].

rem {
  FAT is not a filesystem, but a common part for the msdos, umsdos and vfat filesystems.
rem }

}
{ FUSE #fs-fuse

  FUSE stands for *filesystem in userspace*: it allows to implement a filesystem in user- (as opposed to kernel-) space.
  
  ntfs-3g is dependent on fuse.

  For example, `curlftpfs` converts file accesses into → tools/cURL[curl] ftp calls.

  Also, Gaetan Bisson has written → https://fenua.org/gaetan/src/[StirFS] that apparently builds upon fuse. It is a
  »Secure, transparent and irrestible filesystem«.

  See also → Linux/kernel/CONFIG#config_fuse_fs.

}
{ f2fs

  The flash-friendly file system, originally created by Samsung for the use with NAND flash memory.

}
{ hfs

}
{ hpfs

}
{ iso9660 #iso9660

  The standard filesystem for → hardware/CD[CD-ROMs]. See also →#udf.

  Filenames are in the → Windows/DOS format 8.3. The *Rock Ridge* extension provides UNIX like features and makes it indistinguishable from a UNIX filesystem (except that it is read only).

}
{ jfs

}
{ minix
}
{ msdos
}
{ ncpfs
}
{ nfs

  → Linux/filesystem/NFS

}
{ nfs4
}
{ ntfs

  → Windows/file-system/NTFS

}
{ proc #proc

  The *proc* pseudo filesystem provides an interface to → Linux/kernel[kernel] data structures in order to provide information about running → Linux/kernel/process[processes] and the kernel.

  This filesystem is described in more detail in *proc(5)*.

  It is usually mounted at → Linux/fhs/proc/index.

  See also → Linux/kernel/source/Documentation/filesystems/proc

}
{ ramfs

  A memory based filesystem. See → Linux/filesystem/ramfs

}
{ reiserfs

  A journaling filesystem.

}
{ romfs
}
{ squashfs

  A compressed, read-only filesystem, used for example for Live CD versions. 

}
{ smbfs
}
{ sysfs #sysfs

  *The* filesystem for exporting kernel objects. See → Linux/filesystem/sysfs

  Mounted on → Linux/fhs/sys[`/sys`].

}
{ sysv
}
{ tmpfs #tmpfs

  TODO: → Linux/shell/commands/free

}
{ ubifs

  A flash file system which works on top of UBI volumes.

}
{ udf #udf

  Universal disk format.

  See also →#iso9660.

}
{ ufs
}
{ umsdos
}
{ usbfs
}
{ vfat
}
{ xenix
}
{ xfs #xfs

  XFS is a high-performance journaling file system, initially created by Silicon Graphics, Inc. for the IRIX operating system, and later ported to Linux.

  XFS is a modern all-purpose filesystem for all platform, that also supports reflinks and copy on write (CoW), compare with → #ext4[ext4].
  
}


sa:
  → Linux/filesystem
