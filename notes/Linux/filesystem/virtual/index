$ Linux: Virtual File System

The Virtual File System (VFS) defines file system related → Linux/kernel/sys-calls[sys calls] such as `open()`, `stat()`, `read()`, `write()`, `chmod()` and so on
(See → Linux/kernel/source/fs/open_c[`fs/open.c`]).

{ Inode #linux-vfs-inode

  An *inode* represents a file system object such as a regular file, directory, symbolic link, etc.

  It is the central data structure used in the Virtual File System and contains information about the file: type, size, permissions, last modified time etc
 (see the → Linux/kernel/source/include/linux/fs_h#iattr[`iattr` struct] and the → Linux/kernel/source/include/linux/fs_h#inode[`inode` struct]).

  It should be noted that an inode represents a file, not a file name. A file (i.e. inode) might have many names (i.e. hard links).

  The operations that can be executed on an inode are defined in the → Linux/kernel/source/include/linux/fs_h#inode_operations[`inode_operations` struct]

  See also → Linux/kernel/source/fs/inode_c[`fs/indode.c`].

}
{ Dentry #linux-vfs-dentry

  A *dentry* is for example returned by the `lookup()` function (see struc → Linux/kernel/source/include/linux/fs_h#inode_operations[`inode_operations`]).

  See also → Linux/kernel/source/include/linux/dcache_h#linx-dentry[`dentry`] (`</linux/dcache.h>`).
}

sa:
  → Linux/filesystem[File systems in Linux]

links:
  → https://www.kernel.org/doc/html/latest/filesystems/vfs.html
