$ /proc/$pid

`$pid` is the → Linux/kernel/process#linux-pid[pid] of a → Linux/kernel/process.


{ Subdirectories (and files?)

  table { ll
    `attr` ☰ API for security modules (originally added for SELinux), present only if Kernel was compiled with `CONFIG_SECURITY`.
    `autogroup` ☰ See `man 7 sched`
    `auxv` ☰ Contents of the ELF interpreter information passed to the process at exec time. See also `man 3 getauxval`
    `cgroups` ☰ See `man 7 cgroups`
    `clear_refs` ☰ Clears page referenced bits shown in smaps output
    `→ Linux/fhs/proc/pid/cmdline` ☰ A read-only file that stores a process's complete command line unless the process is a zombie.
    `comm` ☰ 
    `coredump_filter` ☰ See `man 5 core`
    `cpuset` ☰ ­See `man 7 cpuset`
    `cwd` ☰ Symbolic link to the process's current working directory
    `environ` ☰ The process's initial environment (environment variables). Entries are separated by null bytes and can be displayed with `cat /proc/$pid/environ | tr '\000' '\n'`)
    `exe` ☰ A symbolic link to the actual filename of the executed command.
    `fd` ☰ Contains a subdirectory(?) for each open file
    `fdinfo` ☰
    `gid_map` ☰ See `man 7 user_namespaces`
    `io` ☰ I/O statistics
    `limits` ☰ Soft and hard limits, and their units of measurements 
    `map_files` ☰
    `→ Linux/fhs/proc/pid/maps` ☰ Currently mapped memory regions and their access permissions.
    `→ Linux/fhs/proc/pid/mem` ☰ Access a process's memory.
    `mountinfo` ☰
    `mounts` ☰
    `mountstats` ☰
    `net` ☰ See also `/proc/net`
    `ns` ☰ namespaces, see `man 7 namespaces`
    `numa_maps` ☰ An extension based on `maps`, showing the memory locality and binding policy as well as mem usage (in pages) of each mapping.
    `oom_adj` ☰ *Deprecated* in favor of `/oom_score_adj`
    `oom_score` ☰
    `→ Linux/fhs/proc/pid/oom_score_adj` ☰
    `→ Linux/fhs/proc/pid/pagemap` ☰ Mapping of virtual pages to physical page frams or swap area.
    `personality` ☰
    `root` ☰ The per-process filesystem root (`chroot`)
    `seccomp` ☰
    `setgroups` ☰
    `smaps` ☰ Memory consumption for the process's mappings (The `pmap` command shows similar information)
    `stack` ☰ Symbolic trace of function calls in kerne. stack (requires `CONFIG_STACKTRACE`)
    `projid_map` ☰
    `smaps_rollup` ☰ Accumulated smaps stats for all mappings of the proces.  This can be derived from `smaps`, but is faster and more convenient
    `→ Linux/fhs/proc/pid/stat` ☰ Process status. See also → https://github.com/torvalds/linux/blob/master/fs/proc/array.c[`fs/proc/array.c`]
    `→ Linux/fhs/proc/pid/statm` ☰ Memory usage
    `→ Linux/fhs/proc/pid/status` ☰ Displays the information of `stat` and `statm` in a more human friendly way.
    `syscall` ☰ The number of the system call currently being executed and its values
    `task` ☰
    `timers` ☰ List of POSIX timers
    `timerslack_ns` ☰
    `uid_map` ☰
    `→ Linux/fhs/proc/pid/wchan` ☰ The symoblic name corresponding to the location in the kernel where the process is sleeping (requires `CONFIG_KALLSYMS`, see → Linux/kernel/source#linux-kallsyms[kallsyms]).

  table }


}


sa:

 `→ Linux/kernel/source/fs/proc/base_c`

 `→ Linux/fhs/proc`
