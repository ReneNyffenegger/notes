$ /proc/$pid/status

`/proc/$pid/status` provides the information of `→ Linux/fhs/proc/pid/stat` and `→ Linux/fhs/proc/pid/statm` in a more human friendly way.

{ Fields

  table { ll

   Name ☰   Command run by this process.
   Umask ☰  Process umask (octal)
   State ☰  Current state of the process.  R=running, S=sleeping, D=disk sleep, T=stopped, t=tracing stop, Z=zombie, X=dead
   Tgid ☰ Thread group ID (i.e., Process ID).
   Ngid ☰ NUMA group ID
   Pid ☰  Thread ID
   PPid ☰ PID of parent process.
   TracerPid ☰ PID of process tracing this process (0 if not being traced).
   Uid ☰, Gid Real, effective, saved set, and filesystem UIDs (GIDs).
   FDSize ☰ Number of file descriptor slots currently allocated.
   Groups ☰ Supplementary group list.
   NStgid ☰ Thread group ID (i.e., PID) in each of the PID namespaces of which [pid] is a member.
   NSpid ☰  Thread ID in each of the PID namespaces of which [pid] is a member.
   NSpgid ☰ Process group ID in each of the PID namespaces of which [pid] is a member.
   NSsid ☰  descendant namespace session ID hierarchy Session ID in each of the PID namespaces of which [pid] is a member.
   VmPeak ☰ Peak virtual memory size.
   VmSize ☰ Virtual memory size.
   VmLck ☰  Locked memory size.
   VmPin ☰ Pinned memory size (i.e. pages that can't be moved because something needs to directly access physical memory).
   VmHWM ☰ Peak resident set size («fhigh water mark»). Value is inaccurate, compare with `→ Linux/fhs/proc/pid/statm`.
   VmRSS ☰  Resident set size. (= sum of RssAnon, RssFile and RssShmem). Value is also inaccurate.
   RssAnon ☰ Size of resident anonymous memory. Value is also inaccurate.
   RssFile ☰ Size of resident file mappings. Value is also inaccurate.
   RssShmem ☰ Size of resident shared memor
   VmData ☰, VmStk, VmExe Size of data, stack and text segments. Value is also inaccurate.
   VmLib ☰ Shared library code size.
   VmPTE ☰ Page table entries size.
   VmPMD ☰ Size of second-level page tables .removed in Linux 4.15).
   VmSwap ☰ Swapped-out virtual memory size by anonymous private pages; shmem swap usage is not included. Value is also inaccurate
   HugetlbPages ☰ Size of hugetlb memory portions.
   CoreDumping ☰ Contains the value 1 if the process is currently dumping core, and 0 if it is not. his information can be used by a monitoring process to avoid killing a process that is currently dumping core, which could result in a corrupted core dump file.
   Threads ☰ Number of threads in process containing this thread.
   SigQ ☰  This field contains two slash-separated numbers that relate to queued signals for the real user ID of this process. The first of these is the number of currently queued signals for this real user ID, and the second is the resource limit on the number of queued signals for this process.
   SigPnd ☰ ShdPnd Mask (expressed in hexadecimal) of signals pending for thread and for process as a whole.
   SigBlk ☰ SigIgn, SigCgt Masks (expressed in hexadecimal) indicating signals being blocked, ignored, and caught.
   CapInh ☰ CapPrm, CapEff Masks (expressed in hexadecimal) of capabilities enabled in inheritable, permitted, and effective sets.
   CapBnd ☰ Capability bounding set, expressed in hexadecimal.
   CapAmb ☰ Ambient capability set, expressed in hexadecimal.
   NoNewPrivs ☰ Value of the no_new_privs bit.
   Seccomp ☰ Seccomp mode of the process.  0 means SECCOMP_MODE_DISABLED; 1 means SECCOMP_MODE_STRICT; 2 means SECCOMP_MODE_FILTER. Requires `CONFIG_SECCOMP` kernel config option.
   Speculation_Store_Bypass ☰ Speculation flaw mitigation state.
   Cpus_allowed ☰ Hexadecimal mask of CPUs on which this process may run.
   Cpus_allowed_list ☰ Same as previous, but in "list format".
   Mems_allowed ☰ Mask of memory nodes allowed to this process.
   Mems_allowed_list ☰ Same as previous, but in "list format".
   voluntary_ctxt_switches, nonvoluntary_ctxt_switches ☰ Number of voluntary and involuntary context switches.

  table }

}

sa:
  `→ Linux/fhs/proc/pid`
