$ /etc/nginx/nginx.conf

`/etc/nginx/nginx.conf` is the main configuration file for → web/webserver/nginx (at least in a Debian system) - As far as I believe, the default would be `/usr/local/nginx/conf/nginx.conf`.

{ Configuration contexts

Contexts found in an nginx configuration file include
  • global
  • event, contained within the global context
  • http
  • server, contained within the http, mail and/or stream context. Used to define *virtual servers*.
  • location, contained within a server context or nested within a parent location context
  • upstream
  • if, for conditional execution
  • limit_except
  • stream
  • mail

  ? I believe that a context is formulated as a block with curly braces (so the hattp context is `http { … }`).

  Compare these contexts with the value of `type` in `ngx_module_s`.

}
{ Testing syntax of configuration file

  The syntax of the configuration file can be tested like so:
code {
# /usr/sbin/nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
code }

}
{ Reload config file after modification

  After a modification of the config file, the (running) nginx process can be informed to reload it with
code {
# /usr/sbin/nginx -s reload
code }

}
{ Simple example

  This is a simple example of an nginx configuration file. It is basically a slightly adapted version of that which I found after installing ningx with `sudo apt install -t nginx`.

code {
#
# Specify the user and group by which worker processes are run.
# Because the group is omitted here, it defaults to the name
# of the user.
#
user → Linux/user#user-www-data[www-data];

#
# Define the number of worker processes.
# Use the special value «auto» to bind worker processes
# automatically to available CPUs.
#
worker_processes auto;

#
# Specify the file where the main → Linux/kernel/process#linux-pid[process' ID] is stored:
#
pid → Linux/fhs/run[/run]/nginx.pid;

#
# The *.conf files included from /etc/nginx/modules-enabled
# typically contain a → https://nginx.org/en/docs/ngx_core_module.html#load_module[load_module] statement which
# loads a → development/languages/C-C-plus-plus/GCC/libraries/shared[shared library].
# These shared libraries are usually found in /usr/share/nginx/modules.
#
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

      #
      # Enable → https://man7.org/linux/man-pages/man2/sendfile.2.html[sendfile()]
      # which is required when enabling tcp_nopush
      #
        sendfile on;

      #
      # Set the socket option TCP_CORK (or TCP_NOPUSH in BSD).
      # Requires sendfile to be set when enabled. 
      #
        tcp_nopush on;

      #
      # See → https://nginx.org/en/docs/hash.html[this link].
      #
      # server_names_hash_bucket_size   64;
        types_hash_max_size           2048;

      # server_tokens off;

      # server_name_in_redirect off;

      #
      # Specify → development/web/Multipurpose-Internet-Mail-Extensions[MIME types] (default and depending on file suffix)
      #
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

      #
      # → development/security/cryptography/SSL-TLS[SSL] settings
      #
      # Enable the specified protocols (do not add SSLv3 because of → https://www.cisa.gov/news-events/alerts/2014/10/17/ssl-30-protocol-vulnerability-and-poodle-attack[Poodle attack])
      #
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        ssl_prefer_server_ciphers on;

      #
      # Specify location of → development/log-files.
      #
        access_log /var/log/nginx/access.log;
        error_log  /var/log/nginx/error.log;

      #
      # Enable compression
      #
        gzip on;

      #
      # Specify the MIME types which will be compressed.
      #
      # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_types *;

      # gzip_vary on;
      # gzip_proxied any;
      # gzip_comp_level 6;
      # gzip_buffers 16 8k;
      # gzip_http_version 1.1;

      #
      # Virtual Host Configs
      #
        include /etc/nginx/conf.d/*.conf;

      #
      # In a default configuration, the following directive
      # causes → Linux/fhs/etc/nginx/sites-available/default to be
      # included because → Linux/fhs/etc/nginx/sites-available/default is
      # a symbolic link to that file.
      #
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}
code }

}
sa:

 `→ Linux/fhs/etc/nginx`

 → web/webserver/nginx

 `/usr/share/doc/nginx-doc/examples/`

code {
$ auto/configure --conf-path=/etc/nginx/nginx.conf
code }

code {
$ nginx -c /path/to/conf.file
code }

links:
 
 → https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/[Configuration pitfalls and common mistakes].

 → https://wiki.debian.org/Nginx/DirectoryStructure

 The moz://a → https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.7[SSL Configuration Generator].
