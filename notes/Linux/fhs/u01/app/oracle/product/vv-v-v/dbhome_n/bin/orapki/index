
`orapki` manages the → development/security/cryptography/public-key/infrastructure[public key infrastructure (PKI)] elements, for example
(→ development/security/cryptography/public-key/cryptography#pkcs[PKCS #12]) wallets or certificate revocation lists.

Create a wallet:
code {
$ mkdir -p → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n[$ORACLE_HOME]/admin/ORA19/wallet
$ orapki wallet create → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n[$ORACLE_HOME]/admin/ORA19/wallet -pwd mySecret%passw0rd -autologin
code }

Add a certificate
code {
$ orapki wallet create → Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n[$ORACLE_HOME]/admin/ORA19/wallet -trusted_cert -cert "/path/to/renes.crt" -pwd mySecret%passw0rd
code }

{ Managing TDE keystores

  As per MOS Note 2253348.1, `orapki` can be used to manage TDE keystores, but is not recommended because
    • The necessary TDE metadata cannot be added to wallets
    • A security officer has to login to the machine where the wallets are stored to perform `orapki` operations. With `administer key management`, such operation can be performed without logging into the server machine.

}

sa:

 `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin/owm`

 `→ Linux/fhs/u01/app/oracle/product/vv-v-v/dbhome_n/bin`
