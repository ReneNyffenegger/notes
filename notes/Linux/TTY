
TTY is the abbrevation of *Tele-Typewriter* (or *Tele-Type*)

Originally, a TTY was physically connected to a Unix machine as an input/output device, usually on a RS-232 cable.
-
The *input* was fed on a keyboard.
-
In the beginning, computer's *output* was going to a printer and later also to screens (CRTS, for example the *DEC VT100* terminal)

Later, also the serial port connections were referred to as TTYs.


{ Terminal devices

  A TTY (or terminal) device is a special class of a → Linux/devices#character-devices[character device].

  A Terminal device might act as a *controlling terminal* for a session, such as
    • virtual consoles
    • serial ports
    • → development/misc/pseudo-terminal (PTYs)

  All registered TTY devices that are present in the → Linux/kernel are found under `→ Linux/fhs/sys/class/tty`.

  The most important *data structure* to implement a TTY driver is the struct `tty_driver` which is found in → Linux/kernel/source/include/linux/tty_driver_h.

}
{ PTY

  The → development/misc/pseudo-terminal[PTY] is a *pseudo* TTY: the physical serial connection is replaced with a *in-memory* software. Thus, it virtualizes a computer's serial communications hardware.

}
{ Flip buffer

  A *flip buffer* contains two input buffers. One buffer is used to store data from the TTY while the user reads from the other buffer.
  
  These buffers *flip* their role when the input-buffer becomes full or the user flushes it.


}
{ TODO

  VT (as in VT100) stands for *video terminal* (as opposed to the paper based TTYs).

}

sa:

  → Linux/terminal-subsystem

  `→ Linux/kernel/source/drivers/tty`
   -
  `→ Linux/fhs/dev/tty`, → Linux/fhs/dev/ttyN[`/dev/ttyN`]
   -
  `→ Linux/fhs/proc/tty`
   -
  `/proc/sys/dev/tty`

  R function → development/languages/R/functions/isatty[`isatty()`]

  → tools/PuTTY

