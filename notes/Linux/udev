
*udev* (= userspace `→ Linux/fhs/dev/`) is (systemd's) successor of → development/misc/devfs and provides persistent naming for devices.

udev dynamically creates device nodes in the `→ Linux/fhs/dev` directory with consistent naming.

Whenever the Kernel detects a change in the device tree (i. e. when a device is added or removed etc.), a → Linux/kernel/uevent is raised.
This uevent is then probed against the udev rules whose defined actions are triggered when the uevent matches the rule criteria.

When Linux is booted, udev takes an inventory of the hardware and loads the appropriate modules (drivers).

{ Configuration

  udev is configured in `→ Linux/fhs/etc/udev/udev_conf`

}
{ Rule files

  Udev rules are formulated in *rule files*.

  Every non-empty, uncommented line in a rule file has at least one key-value pair.
  -
  There are two types of keys:
    • match
    • assignment 

  All match keys must match against their values in order for the rule to be applied, i. e. for the assignment keys get their values assigned.

  Locations for rule files include:
    • `/usr/lib/udev/rules.d/`
    • `/usr/local/lib/udev/rules.d/`
    • `/run/udev/rules.d`
    • `→ Linux/fhs/etc/udev`,
    • `→ Linux/fhs/etc/udev/rules_d`,

  Also in the following?
    • `→ Linux/fhs/lib/udev`,
    • `→ Linux/fhs/lib/udev/rules_d`

  The files in these directories must have a `.rules` extension in order to be processed.

}
{ Hardware Information

  The `→ Linux/fhs/etc/udev/hwdb_d` and `→ Linux/fhs/usr/lib/udev/hwdb_d` directories maintain information about hardware devices.

  Udev turns this information into a binary database: `→ Linux/fhs/etc/udev/hwdb_bin`.

}
{ Eudev

  *Eudev* is an alternative to udev that is apparently independent from → Linux/init/systemd (or any other → Linux/distributions[distribution] or init system).

}

sa:


  → Linux/shell/commands/udevadm[`udevadm`]

  → Linux/kernel/uevent
