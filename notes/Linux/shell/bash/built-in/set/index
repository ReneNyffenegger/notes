$ Bash built-in: set
@ set

With `set`, values of internal script variables/options can be modified and positional parameters can be set.


? Apparently, the current settings can also be queried through the environment variable `$-` where set options are indicated
by a single letter.

{ Short and long version

  Options can be set with two equivalent forms: with `-o` and an option name or with `-X`, where `X` is a one letter abbreviation for
  the option.

code {
set -o option-name
set -X
code }

}
{ Disabling options

  Options are, unintuitively, disabled by using a plus (`+`) instead of a minus (`-`) sign:
code {
set +o option-name
set +X
code }

}
{ Setting positional parameters

  `set` can also be used to set the positional paramters `$1` … `$n`:
  gh|about-Bash|/built-in/set/positional-parameters||
}
{ Options

  → Linux/shell/bash/built-in/set/e[`set -e`] immediatly exits upon encountering an error.
  
  → Linux/shell/bash/built-in/set/h[`set -h`] remember location of executables when they were started.

  `set -v` (`set -o verbose`): echo all commands before executing them.
  
  → Linux/shell/bash/built-in/set/x[`set -x` / `set -o xtrace`] to trace (debug) commands while they're executed.

}

sa:
  → Linux/shell/bash/built-in[Bash built ins]

  → Linux/shell/bash/shopt
