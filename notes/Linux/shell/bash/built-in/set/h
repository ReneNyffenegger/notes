$ Bash: remember the full path of previous called executables with set -h
@ set -h

`set -h` (which is set by default) specifies to remember (referred to as *to hash*) the path in which an executable is located when it was first called.
-
Thus, when an executable is called again later, bash doesn't have to search all directories in the → development/environment-variable#path[`$PATH`] environment variable, which should, at least theoretically, improve performance when executing a script.

To turn the hashing off, `set +h` is needed.
-
Hashing can also be turned on and off with → Linux/shell/bash/built-in/set/o[`set -o hashall`] and `set +o hashall`, respectively.

This behaviour is demonstrated with the following two scripts `foo.sh` and `call-foo.sh`.
-
`call-foo.sh` is executed with either `./call-foo.sh +h` or `./call-foo.sh -h`.

{ call-foo.sh

  gh|about-Bash|/built-in/set/h/call-foo.sh||

  When executed with `-h`, it prints
code {
hello
foo.sh is hashed (./foo.sh)
hello
foo.sh is hashed (./foo.sh)
code }

  When executed with `+h`, it prints
code {
hello
foo.sh is ./foo.sh
hello
foo.sh is dir/foo.sh
code }

}
{ foo.sh

  gh|about-Bash|/built-in/set/h/foo.sh||

}

sa:
  → Linux/shell/bash/built-in

  → Linux/shell/bash/built-in/set

  → Linux/shell/bash/history[Bash history]
