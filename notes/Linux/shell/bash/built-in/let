$ Bash built-in: et
@ let

`let` evaluates arithmetic expressions.

table { ll
   `id++`, `id--` ☰ variable post-increment`, `post-decrement
   `++id`, `--id` ☰ variable pre-increment`, `pre-decrement
   `-`, `+` ☰	unary minus`, `plus
   `!, ~` ☰ logical and bitwise negation
   `**` ☰ exponentiation
   `+`, `-`, `*`, `/`, `%`  ☰ addition, subtraction, multiplication, division, remainder
   `<<`, `>>` ☰ left and right bitwise shifts
   `<=`, `>=`, `<`, `>` ☰ comparison
   `==`, `!=` ☰ equality`, `inequality
   `&`, `^`, `|`, `&&`, `||`  ☰ Bitwise operations (and, xor, or)
   `&`, `^`, `|`  ☰ Logical operations (and, or)
   `expr ? expr : expr`  ☰ Conditional (ternary) operator
   `=`, `*=`, `/=`, `%=`, ``+=`, `-=`, `<<=`, `>>=`, ``&=`, `^=`, `|=` ☰ assignment
table }

code {
num=41
let num++
echo $num
code }

sa:
  The shell command `→ Linux/shell/commands/expr`.

  → Linux/shell/bash/built-in
