$ bash

Bash stands for *Bourne-Again Shell*.

→ Linux/shell/bash/fc

→ Linux/shell/bash/for

→ Linux/shell/bash/hash

→ Linux/shell/bash/history

→ Linux/shell/bash/if (See also → Linux/shell/bash/conditional-constructs).

→ Linux/shell/bash/shopt

→ Linux/shell/bash/while

→ Linux/shell/bash/scripts

→ Linux/shell/bash/conditional-constructs

→ Linux/shell/bash/variables

{ Relationship to /bin/sh

  On some systems → Linux/fhs/bin/sh is a symlink to `/bin/bash`.
  
  On such systems, if bash is invoked via `sh` or `/bin/sh`, bash tries to follow the startup behaviour of older versions of `sh`, but also to conform to the POSIX standard.

}
{ TODO
 
  { programmable completion

    → Linux/fhs/usr/share/bash-completion/bash-completion

  }
  { Embed hexadecimal characters in strings #bash-hex-chars-in-string

    A string literal in the form `$'…'` allows to embed characters in hexadecimal form:
code {
→ Linux/shell/bash/built-in/echo   $'The first character of the alphabet is \x41'
code }

    The built-in `→ Linux/shell/bash/built-in/echo` command has the special → Linux/shell/bash/built-in/echo#bash-echo-e[`-e`] flag which also allows to embed hexadecimal characters.
code {
echo -e "The first character of the alphabet is \x41"
code }

  }

}
sa:
  → Linux/shell/bash/command-line/editing

  → Linux/shell/bash/built-in/

  → Linux/shell/bash/quoting

  → Linux/shell/bash/redirection

  → Linux/fhs/bin/bash

  → Windows/dirs/Windows/System32/bash_exe[`bash.exe`] is bash for the → Windows/Subsystem-for-Linux[Windows Subsystem for Linux].

