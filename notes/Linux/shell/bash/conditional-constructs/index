$ Bash: conditional constructs

{ True and false

  gh|about-Bash|/conditional-constructs/true-and-false||

}
{ String and numerical comparison

  Strings need to be compared with `<`, `>`, `<=` etc., numbers with `-gt`, `-lt`, `-eq` etc.

  gh|about-Bash|/conditional-constructs/string-and-numeric-comparison||

}
{ [[ vs [

  gh|about-Bash|/conditional-constructs/[-vs-[[||

  { >

    In `[ foo > bar]`, the `>` is intepreted as a → Linux/shell/bash/redirection[redirection operator]. Thus, `[ foo > bar ]` creates/overwrites the file `bar`.

    in `[[ foo >> bar ]`, the `>` compares its left and right side, as probably intended.

  }

}
{ Exit status

  
  gh|about-Bash|/conditional-constructs/if_command||

  { exit_0.sh

    gh|about-Bash|/conditional-constructs/exit_0.sh||

  }
  { exit_1.sh

    gh|about-Bash|/conditional-constructs/exit_1.sh||

  }

}
{ if fi

  gh|about-Bash|/conditional-constructs/if_fi||

}
{ case … esac

  gh|about-Bash|/conditional-constructs/case||

}
{ Testing for equalness with ==

  `==` tests case sensitively for equalness
  gh|about-Bash|/conditional-constructs/equal-equal||

}

sa:
  → Linux/shell/bash
