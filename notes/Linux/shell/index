$ shell

→ Linux/shell/bash/fc

→ Linux/shell/bash/for

→ Linux/shell/bash/history

→ Linux/shell/bash/if

→ Linux/shell/bash/shopt

→ Linux/shell/bash/while

→ Linux/shell/readline

{ Interactive vs non-interactive

  An *interactive* shell accepts input that is typed on a keyboard.

  a *non-interactive* shell executes commands that are stored in a file.

}
{ Login shells #login-shell

  Interactive login shells are started after a successful → Linux/shell/commands/login[login] (or with `bash -l`).

  The defaul login shell can be changed with → Linux/shell/commands/chsh

  At least, in bash, if a shell is a login shell can be determined with `→ Linux/shell/bash/shopt[shopt] login_shell`.

  → Linux/fhs/etc/shells contains a list of allowed login shells on the system.

  When a bash login shell is terminated, bash sources → Linux/fhs/home/username/_bash_logout.

}

{ TODO

  { Comments in here documents

  Apparently, a clever use of a → Linux/shell/bash/scripts/here-document[here document] can be used to block comment code in a shell script:
code {
#!/bin/sh

echo before DOC

: <<'DOC'

  This text is apparently not run by the
  shell interpreter. Therefore, it can
  be used like documentation

DOC

echo after DOC
code }

   See → https://stackoverflow.com/a/947936/180275[this stackoverflow ansswer] for more details.

  }
  
}

sa:

  → Linux/shell/bash,
  → development/environment-variable#ps1,
  → development/environment-variable#prompt_dirtrim

  → Linux/fhs/home/username/_profile

  
