
→ Linux/shell/bash/fc

→ Linux/shell/bash/for

→ Linux/shell/bash/history

→ Linux/shell/bash/if

→ Linux/shell/bash/shopt

→ Linux/shell/bash/while

→ Linux/shell/readline

{ Determine if a command is available

code {
if command -v make > → Linux/fhs/dev/null → Linux/shell/bash/redirection[2>&1]; then
   echo make is available
else
   echo make is not available
fi
code }

}
{ Interactive vs non-interactive

  An *interactive* shell accepts input that is typed on a keyboard.

  a *non-interactive* shell executes commands that are stored in a file.

}
{ Login shells #login-shell

  Interactive login shells are started after a successful → Linux/shell/commands/login[login] (or with `bash -l`).

  If this interactive login shell is → Linux/shell/bash[Bash], it normally reads → Linux/fhs/etc/profile and → Linux/fhs/home/username/_bash_profile (if available).

  The default login shell can be changed with → Linux/shell/commands/chsh

  At least, in bash, if a shell is a login shell can be determined with `→ Linux/shell/bash/shopt[shopt] login_shell`.

 `→ Linux/fhs/etc/shells` contains a list of allowed login shells on the system.

  When a bash login shell is terminated, bash sources `→ Linux/fhs/home/username/_bash_logout`.

}
{ Interactive non login shells

  An interactive non login shell is usually started from an other login or non-login shell with `/bin/bash` or → Linux/shell/commands/su[`su`], `xterm` or `konsole`.

}
{ Non-interacive shells

  A non-interactive shell processes the contents of a → Linux/shell/script. It is non-interactive because it doesn't have to wait for input from a user.

}

{ TODO

  { Comments in here documents

  Apparently, a clever use of a → Linux/shell/bash/scripts/here-document[here document] can be used to block comment code in a shell script:
code {
#!/bin/sh

echo before DOC

: <<'DOC'

  This text is apparently not run by the
  shell interpreter. Therefore, it can
  be used like documentation

DOC

echo after DOC
code }

   See → https://stackoverflow.com/a/947936/180275[this stackoverflow answer] for more details.

  }
  
}

sa:

  → misc/ISO/9949 defines a standard operating system interface and environment, including a command interpreter (aka *shell*)
  and common utility programs to support applications portability at the source code level.

  → Linux/shell/bash,
  → development/environment-variable#ps1,
  → development/environment-variable#prompt_dirtrim

  → Linux/shell/script

  → Linux/shell/Process-substitution

  → Linux/fhs/home/username/_profile

  → development/languages/JavaScript/SpiderMonkey/shell
  
