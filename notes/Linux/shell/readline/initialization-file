$ readline initialization file

The initialization file is a list of commands that bind a keyname or key sequence to a macro, a → Linux/shell/readline/functions[readline function name] or a → Linux/shell/commands[shell command].

Comments start with `#`.

{ Conditional constructs

  Conditional constructs are possible with `$if`, `$else` and `$endif`.

code {
$if mode=vi
    bind …
$endif

$if term=xvrt
    …
$endif

$if Bash
$endif


code }

}
{ Re-reading an init file

  An initialization file can be re-read with `bind -f init-file`.

}
{ $INPUTRC

  With `$INPUTRC`, a non default location/path of an init file can be specified.

}
{ Including other files

  An initialization file can include other files with `$include /path/to/file`.

}
{ Some settings

  { 8-bit input/output

code {
set meta-flag    on
set convert-meta off
set input-meta   on
set output-meta  on
code }

  }
  { Filename completion/expansion

code {
set completion-ignore-case on
set show-all-if-ambiguous  on
code }

  }
  { Expand homedir name

code {
set expand-tilde on
code }

  }
  { Append a slash (/) to directory names

code {
set mark-directories           on
set mark-symlinked-directories on
code }

  }
  { Match all files

code {
set match-hidden-files on
code }

  }
  { Magic space #readline-magic-space

Typing a space performs a → Linux/shell/bash/history#bash-history-expansion[history expansion]
code {
Space: magic-space
code }

  }

}
{ TODO

code {
# the following line is actually
# equivalent to "\C-?": delete-char
"\e[3~": delete-char

# VT
"\e[1~": beginning-of-line
"\e[4~": end-of-line

# kvt
"\e[H": beginning-of-line
"\e[F": end-of-line

# rxvt and konsole (i.e. the KDE-app...)
"\e[7~": beginning-of-line
"\e[8~": end-of-line

# VT220
"\eOH": beginning-of-line
"\eOF": end-of-line

code }

}

sa:
  → Linux/fhs/etc/inputrc
  → Linux/fhs/home/username/_inputrc
