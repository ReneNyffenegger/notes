
Readline: a library for editing and manipulating text on command lines.

{ Bind key sequence to text

code {
bind '"\C-ab": "you typed control a followed by a b"'
code }

}

{ Bind key sequence to command

With the following bind command, `→ Linux/shell/commands/date[date]` is executed when `,dt` is typed, yet, the already typed text in the command line remains.

code {
bind -x '",dt": "date"'
code }

  Within the command, the variables `READLINE_LINE` and `READLINE_POINT` provide access to the content and cursor position of the text currently being edited.
  -
  If the command is a function (that executes in the same process as the shell, rather than a a script that executes as a child process), these variables
  can even be written to and thus the edited line can be changed.

  Apparently, it's not possible to associate a key sequence to commands in → Linux/shell/readline/initialization-file[inputrc like initialization files].

}

{ Modes

  Two modes: vi (`set -o vi`) and emacs (`set -o emacs`).

}
{ Various

  `ctrl-t` exchanges the letter before the cursor with the second letter before the cursor.

}

sa:
  → Linux/shell/readline/initialization-file[initialization file]

  → Linux/shell/readline/variables[variables]
