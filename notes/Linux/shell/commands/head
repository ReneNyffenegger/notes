$ Shell command: head
@ head

`head` is similar to `→ Linux/shell/commands/tail`, but return's a file's (or → development/stdin-stdout-stderr[stdin's]) first lines:
code {
head → Linux/fhs/home/username/_profile[~/.profile]
code }

In order to get a file's first `n` lines, the `-n` option can be used:
code {
head -n 20 → Linux/fhs/home/username/_profile[~/.profile]
code }

{ Getting arbitrary lines

  In order to display arbitrary lines from a file, `→ development/languages/sed` can be used.

  For example, the following command gets lines 15 through 20:
code {
$ sed -n /path/to/file -e 15,20p
code }

  The following command prints lines 42 and 99:
code {
$ → Linux/shell/commands/seq 1 100 | sed -n -e '42p;99p'
code }

}


sa:

  A useful example of `head` is to → Linux/shell/commands/ls#ls-largest-files[show a directory's largest n files].

  The → Windows/PowerShell command → Windows/PowerShell/command-inventory/noun/content/get#get-content-first-last[`get-content -first n` and `get-content -last n`].
 
  → Linux/shell/commands[Shell commands]
