$ Shell command: sort
@ sort

`sort` sorts lines of text files.

`sort` is especially useful in conjunction with `→ Linux/shell/commands/uniq` (because `uniq` needs the input lines to be sorted).
-
However, the traditional sequence `sort | uniq` can nowadays usually be abbreviavated with `sort -u`

{ Options

  { Options controlling sorting


   table { llll
       `-b`  ☰ `--ignore-leading-blanks` ☰ ☰ ignore leading blanks
       `-d`  ☰ `--dictionary-order` ☰ ☰ consider only blanks and alphanumeric characters
       `-f`  ☰ `--ignore-case` ☰ ☰ fold lower case to upper case characters
       `-g`  ☰ `--general-numeric-sort` ☰ ☰ compare according to general numerical value
       `-i`  ☰ `--ignore-nonprinting` ☰ ☰ consider only printable characters
       `-M`  ☰ `--month-sort` ☰ ☰ compare (unknown) < 'JAN' < ... < 'DEC'
       `-h`  ☰ `--human-numeric-sort` ☰ ☰ compare human readable numbers (e.g., 2K 1G)
       `-n`  ☰ `--numeric-sort` ☰ ☰ compare according to string numerical value
       `-R`  ☰ `--random-sort` ☰ ☰ shuffle, but group identical keys.  See shuf(1)
       ☰ `--random-source` ☰ `=FILE` ☰ get random bytes from `FILE`
       `-r`  ☰ `--reverse` ☰ ☰ reverse the result of comparisons
       ☰ `--sort` ☰ `=WORD` ☰ sort according to `WORD`. General-numeric `-g`, human-numeric `-h`, month `-M`, numeric `-n`, random `-R`, version `-V`
       `-V`  ☰ `--version-sort` ☰ ☰ natural sort of (version) numbers within text. Compare `→ Linux/shell/commands/ls/v`
   table }

  }
  { Other options

   table { llll

       ☰ `--batch-size` ☰ `=NMERGE` ☰ merge at most `NMERGE` inputs at once; for more use temp files
       `-c`  ☰ `--check` ☰ `=diagnose-first` ☰ Check for sorted input; do not sort
       `-C`  ☰ `--check=quiet` ☰ ☰ Like `-c`, but do not report first bad line (compare `--check=silent`)
       ☰ `--compress-program` ☰ `=PROG` ☰ compress temporaries with `PROG`; decompress them with `PROG -d`
       ☰ `--debug` ☰ ☰ annotate the part of the line used to sort, and warn about questionable usage to → development/stdin-stdout-stderr[stderr]
       ☰ `--files0-from` ☰ `=F` ☰ Read input from the files specified by NUL-terminated names in file `F`; If `F` is `-` then read names from → development/stdin-stdout-stderr[stdin].
       `-k`  ☰ `--key` ☰ `=KEYDEF` ☰ Sort via a key; `KEYDEF` gives location and type
       `-m`  ☰ `--merge` ☰ ☰ merge already sorted files; do not sort
       `-o`  ☰ `--output` ☰ `=FILE` ☰ write result to `FILE` instead of → development/stdin-stdout-stderr[stdout]
       `-s`  ☰ `--stable` ☰ ☰ stabilize sort by disabling last-resort comparison
       `-S`  ☰ `--buffer-size` ☰ `=SIZE` ☰ use `SIZE` for main memory buffer
       `-t`  ☰ `--field-separator` ☰ `=SEP` ☰ use `SEP` instead of non-blank to blank transition
       `-T`  ☰ `--temporary-directory` ☰ `=DIR` ☰ use `DIR` for temporaries, not `$TMPDIR` or `→ Linux/fhs/tmp`; multiple options specify multiple directories
       ☰ `--parallel` ☰ `=N` ☰ change the number of sorts run concurrently to `N`
       `-u`  ☰ `--unique` ☰ ☰ with `-c`, check for strict ordering; without `-c`, output only the first of an equal run
       `-z`  ☰ `--zero-terminated` ☰ ☰ line delimiter is `NUL`, not *newline*
       ☰ `--help` ☰ ☰
       ☰ `--version` ☰ ☰
    table }

  }

}

{ In place sorting

  The `-o` flag specifies an output file name for the sorted file.
  -
  If the specified file name is equal to the sorted file, this file will then
  have the sorted content.

  gh|shell-commands|/sort/o_in-place||

}
{ -n: sort numerically #sort-n

  With `-n`, `sort` sorts values numerically rather than alphabetically.

  Without this flag, `sort` considers `123` to be smaller than `89`.

}
{ -h: sort human readable numbers

  `-h` causes the sorted values to be interpreted as human readable, for example `1.89G` or `815M`.
  
   Incidentally, `→ Linux/shell/commands/ls` also has an `-h` flag which reports file sizes human readable.
   -
   Thus the output of `→ Linux/shell/commands/ls` with the `-h` flag can be piped in `sort` with the `-h` flag to
   → Linux/shell/commands/ls#ls-largest-files[show a directory's largest files] with file sizes human readable.

}
{ -k: keydef

  `-k` allows to define a start and optional stop position:
  -
  `-k startpos[,stoppos]`

   The format of `startpos` and `stoppos` is `F[.C][OPTS]`:
   table { ll
     `F` ☰ Field number
     `C` ☰ Character pos in the field
     `OPTS` ☰ a series of single-letter ordering options
   table }

}
{ Locale #sort-locale

  The sort order is influenced by the current → Linux/locale in effect.

 «Traditional» sort order (i. e. sorting by byte value) can be achieved by setting `LC_ALL` to `C`.

}
{ Strange results

  Use the `--debug` option.

}
{ Environment variables

  `→ development/environment-variable#lc-ctype[LC_CTYPE]`

}

sa:

  `shuf` randomly permutates the input lines.

  → Linux/shell/commands[Shell commands]

  → development/languages/R/functions/sort,
  → development/languages/Perl/functions/sort,
  → development/vim/script/vimscript/functions/sort
