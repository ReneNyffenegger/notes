$ Shell command: sort
@ sort

`sort` sorts lines of text files.

`sort` is especially useful in conjunction with → Linux/shell/commands/uniq[`uniq`] (because `uniq` needs the input lines to be sorted).
-
However, the traditional sequence `sort | uniq` can nowadays usually be abbreviavated with `sort -u`

{ In place sorting

  The `-o` flag specifies an output file name for the sorted file.
  -
  If the specified file name is equal to the sorted file, this file will then
  have the sorted content.

  gh|shell-commands|/sort/o_in-place||

}
{ -n: sort numerically #sort-n

  With `-n`, `sort` sorts values numerically rather than alphabetically.

  Without this flag, `sort` considers `123` to be smaller than `89`.

}
{ -h: sort human readable numbers

  `-h` causes the sorted values to be interpreted as human readable, for example `1.89G` or `815M`.
  
   Incidentally, `→ Linux/shell/commands/ls` also has an `-h` flag which reports file sizes human readable.
   -
   Thus the output of `→ Linux/shell/commands/ls` with the `-h` flag can be piped in `sort` with the `-h` flag to
   → Linux/shell/commands/ls#ls-largest-files[show a directory's largest files] with file sizes human readable.

}
{ -k: keydef

  `-k` allows to define a start and optional stop position:
  -
  `-k startpos[,stoppos]

   The format of `startpos` and `stoppos` is `F[.C][OPTS]`:
   table { ll
     `F` ☰ Field number
     `C` ☰ Character pos in the field
     `OPTS` ☰ a series of single-letter ordering options
   table }

}
{ Locale #sort-locale

  The sort order is influenced by the current → Linux/locale in effect.

 «Traditional» sort order (i. e. sorting by byte value) can be achieved by setting `LC_ALL` to `C`.

}
{ Strange results

  Use the `--debug` option.

}
{ Environment variables

  `→ development/environment-variable#lc-ctype[LC_CTYPE]`

}

sa:

  → Linux/shell/commands/index[Shell commands]

  → development/languages/R/functions/sort,
  → development/languages/Perl/functions/sort,
  → development/vim/script/vimscript/functions/sort
