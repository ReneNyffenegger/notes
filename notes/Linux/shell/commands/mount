$ Shell command: mount
@ mount

{ Mounting ntfs, fvat etc devices

  It seems that `chmod` has no effect on ntfs or fvat devices except when they are mounted with the `umask` option:
code {
mount -o umask=000 /dev/sdb1 /media
code }

}
{ Mounting as a specific user and group

  The `-o` option can alse be used to mount as a specific → Linux/user or → Linux/group:
code {
mount -o uid=rene,gid=admin /dev/sdb1 /mnt/E
code }

}
{ Determining on what device a directory is mounted #determine-mount-point

  `→Linux/shell/commands/df /media/rene/TOSHIBA/images` might print
code {
Filesystem      1K-blocks     Used  Available Use% Mounted on
/dev/sdb1      1953410044 98704032 1854706012   6% /media/rene/TOSHIBA
code }

}
{ Left aligned output of mount #mount-awk

 `→ development/languages/awk` can be used to create a visually nicer (imho) output of `mount`. Note also the swapping of the first and second column (`$3, $1`):
code {
$ mount | awk '{printf "%-26s %-12s %-11s %s\n", $3, $1, $5, $6}'
code }

  See also → development/tools/scripts/personal/mnt[`mnt`]: a shell script that only shows → Linux/fhs/dev/[`/dev`] devices and uses → Linux/shell/commands/column[`column`] to print them in tabular
  fashion, also with the goal to make the output more easy on the eye.

}
sa:

 `→ Linux/shell/commands/umount`

 `→ Linux/shell/commands/lsblk`

 `→ Linux/fhs/etc/mtab`, `→ Linux/fhs/etc/fstab`, `→ Linux/fhs/proc/mount`.

  → Linux/shell/commands[Shell commands]

  The `mount` → development/languages/C-C-plus-plus/C/language/datatypes/pointer/function in the → Linux/kernel/source/include/linux/fs_h#file_system_type[`file_system_type` struct].

  The → Windows console command → Windows/dirs/Windows/System32/mountvol_exe[`mountvol.exe`] and the PowerShell command `→ Windows/PowerShell/command-inventory/noun/psDrive/new`.
