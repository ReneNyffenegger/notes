$ Shell command: file
@ file



{ Using file to determine character encoding #file-determine-character-encoding

  `file` can be used to determine the → development/Unicode/character-encoding of files:

code {
$ file *
12-240: UTF-8 Unicode text, with very long lines, with CRLF line terminators
13-147: ISO-8859 text, with very long lines, with CRLF line terminators
13-150: ISO-8859 text, with very long lines, with CRLF line terminators
14-157: UTF-8 Unicode text, with very long lines, with CRLF line terminators
16-250: UTF-8 Unicode text, with very long lines, with CRLF line terminators
16-278: UTF-8 Unicode text, with very long lines, with CRLF line terminators
17-003: ASCII text, with CRLF line terminators
code }

Note that it also determines if a line ends on CR or CRLF. → development/tools/scripts/personal/show-newline_pl[show-newline.pl] is a perl script that shows the
line ending of every line (which is useful if it changes).

Optionally, the `-i` flag might be used to print → development/web/Multipurpose-Internet-Mail-Extensions[MIME] type strings.

code {
$ file -i *
12-240: text/plain; charset=utf-8
13-147: text/plain; charset=iso-8859-1
13-150: text/plain; charset=iso-8859-1
14-157: text/plain; charset=utf-8
16-195: text/plain; charset=utf-8
16-247: text/plain; charset=utf-8
16-250: text/plain; charset=utf-8
16-278: text/plain; charset=utf-8
17-003: text/plain; charset=us-ascii
code }

}
{ Determine MIME type

code {
→ Linux/shell/commands/file --brief --dereference --mime-type foo.bar
code }


}

sa:

  → Linux/shell/commands/iconv[`iconv`] and → Linux/shell/commands/recode[`recode`] can be used to convert the encoding in a file.

  → Linux/shell/commands/index[Shell commands]
