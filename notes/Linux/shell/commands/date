$ Shell command: date
@ date

{ -d date arithmetic #d

Display the time described by the *user friendly* string, not by *now*.

gh|shell-commands|/date/d_arithmetic||

Compare with → Linux/shell/commands/touch#d[-d flag] of → Linux/shell/commands/touch.

}
{ Formatting output #date-formatting-output

  The output of `date` can be formatted with a format string that is preceded by a `+` sign (see also → development/misc/strftime).

  gh|shell-commands|/date/+format||

}
{ ISO 8601, RFC 3339 or email format #I

  `-I` or `--iso-8601` prints the date in → development/misc/Datumsformate#iso-8601 format.
code {
$ date -I
2018-03-15

$ date --iso-8601 # seems to be equivalent
2018-03-15
code }

  Similarly, `--rfc-3339=x` prints a date in → development/web/RFC#rfc-3339[RFC 3339] format, `x` being `date`, `sec` or `ns`. (Note that in RFC 3339, there is no `T` that separates the date portion from the time portion
  in the result):
code {
$ date --rfc-3339=date
2021-08-20

$ date --rfc-3339=sec
2021-08-20 11:07:07+00:00

$ date --rfc-3339=ns
2021-08-20 11:07:10.178274618+00:00
code }

   Then, there is also the so called *email format*
code {
$ date --rfc-email
Fri, 20 Aug 2021 11:07:37 +0000
code }

}
{ Seconds since Unix epoch #shell-date-unix-time

  `+%s` (lower case `s`) formats a date as → development/date-time/Unix-time (which is the number of (non-leap) seconds since 1970-01-01).

  gh|shell-commands|/date/d_seconds-since-epoch||

}
{ Time zones #sh-date-time-zone

  Some `z` and `Z` specifiers show the currently active → development/date-time/time-zone
  gh|shell-commands|/date/z_time-zone||

}
{ TZ environment variable #shell-date-tz

  The value of the → development/environment-variable#tz environment variable influences the output of `date`:
  gh|shell-commands|/date/TZ||

}
{ Common formats

  gh|shell-commands|/date/common-formats||

}
{ Date arithmetic

  { Calcuate difference between two dates in days

code {
dt_1=2022-02-18
dt_2=2023-08-28
dt_1_sec=$(  date --date=$dt_1 +%s  )
dt_2_sec=$(  date --date=$dt_2 +%s  )
dt_d_sec=$(( dt_2_sec - dt_1_sec   ))
dt_d_day=$(( dt_d_sec / 86400      ))
echo "There are $dt_d_day days between $dt_1 and $dt_2"
code }

  }

}

sa:
  → Linux/shell/commands/faketime[`faketime`] manipulates the system time for a given → Linux/shell/commands[command].

  → misc/UTC[UTC]

  The → Windows/dirs/Windows/System32/cmd_exe[`cmd.exe`] commands → Windows/dirs/Windows/System32/cmd_exe/commands/date[`date`] and → Windows/dirs/Windows/System32/cmd_exe/commands/time[`time`]

  The → Windows/PowerShell command noun → Windows/PowerShell/command-inventory/noun/date[date] and especially the → Windows/PowerShell/command-inventory/noun/date/get[`get-date` cmdLet].
