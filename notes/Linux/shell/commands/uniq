$ Shell command: uniq
@ uniq

code {
uniq [OPTION]… [INPUT [OUTPUT]]
code }

{ Options

  table { llll
    `-c` ☰ `--count`                ☰   ☰ Prefix lines by the number of occurrences
    `-d` ☰ `--repeated`             ☰   ☰ Only print duplicate lines, one for each group. This option is very useful to → #uniq-d[determine if a text contains duplicated lines].
    `-D` ☰                          ☰   ☰ Print all duplicate lines
         ☰ `--all-repeated`☰ `[=METHOD]` ☰ Like `-D`, but allow separating groups with an empty line. `METHOD` is one of `none` (the default), `prepend` or `separate`
    `-f` ☰ `--skip-fields=`        ☰ `N` ☰ Avoid comparing the first `N` fields
         ☰ `--group` ☰ `[=METHOD]` ☰ Show all items, separating groups with an empty line. `METHOD` is one of `separate` (the default), `prepend`, `append` or `both`
    `-i` ☰ `--ignore-case`          ☰   ☰ Ignore differences in case when comparing
    `-s` ☰ `--skip-chars=`         ☰ `N`  ☰ Avoid comparing the first `N` characters
    `-u` ☰ `--unique`               ☰   ☰ Only print unique lines
    `-z` ☰ `--zero-terminated`      ☰   ☰ Line delimiter is `NUL`, not → development/line-break
    `-w` ☰ `--check-chars=` ☰  `N` ☰ Compare no more than `N` characters in lines
         ☰ `--help`         ☰ ☰
         ☰ `--version`      ☰ ☰
  table }

}
{ Using -d to verify if all texts are unique #uniq-d

  The `-d` options allows to quickly determine if a file contains duplicated lines.

  The following pipeline prints nothing:
code {
echo 'This
text
does
not
have
duplicates' | sort | uniq -d
code }

   This pipeline prints the word *this* because it is duplicated:
code {
echo 'in
this
text,
the
word
this
occurs
twice' | sort | uniq -d
code }

}
{ Count the frequency of values

  The following pipeline counts how many → development/version-control-systems/git/commands/commit[git commits] each author has contributed to a → development/version-control-systems/git/repository[git repository]:
code {
$ → development/version-control-systems/git/commands/log → development/version-control-systems/git/commands/_options/format-pretty[--format]='%aN' | → Linux/shell/commands/sort | uniq -c  | → Linux/shell/commands/sort -nr
code }

}
{ Misc

 `uniq` does not detect repeated lines unless they are adjacent.
  -
  Try using `sort -u` (without `uniq`).

}

sa:

 `→ Linux/shell/commands/sort`, `comm`, `join`

  → Linux/shell/commands[Shell commands]
