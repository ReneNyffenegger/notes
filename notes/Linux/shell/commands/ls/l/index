$ Shell command: ls -l
@ ls -l

`ls -l` lists each file and directory on a single line. Each line contains the following information:
   • → #ls-l-perm[Permissions]
   • Number of links
   • Name of owner
   • Name of owning group
   • file size (by default in bytes, but use `-h` for «human readable»)
   • Time of last modification
   • Name of file or directory

{ Representation of type and permissions #ls-l-perm

  The first column of `ls -l` consists of 10 characters (possibly followed by a dot) and represent the entries' type and permissions.

  { Type #ls-l-type

    The first character represents the type of the entry listed.

    The meaning of the first character is:
    table { ll
     `-` ☰ Regular file
     `b` ☰ *Block* special file, typically (always?) found under `→ Linux/fhs/dev`, for example → Linux/fhs/dev/sdX[`/dev/sda`] or `/dev/sr0`
     `c` ☰ *Character* special file, typically (always?) found under `→ Linux/fhs/dev/`, for example → Linux/fhs/dev/ttyN[`/dev/tty0`].
     `d` ☰ Directory
     `l` ☰ Symbolic link
     `p` ☰ FIFO («pipe»)
     `s` ☰ Socket
     `w` ☰ Whiteout
    table }

  }
  { Permission bits

    The next nine characters define the permissions for the user (first three characters), the users of the group (next three characters) and «everyone else» (last three characters).
  
    The meaning of the three characters is:
    table { ll
      `r` ☰ readable (always the first character)
      `w` ☰ writable (always the second character)
      `x` ☰ executable (always the third character)
      `S` ☰ Entry *is not* executable, setuid (first group), setgid is set (second group)
      `s` ☰ Same as `S`, but entry *is* executable
      `T` ☰ Sticky bit is set, but not executable (only as last character of the last group)
      `t` ☰ Same as `T` and *is* executable
    table }

  }
  { Dot

    If the permission bits are followed by a dot (for example `-rwxr-x-r-x.`), it indicates a file with a → Linux/security/modules/SELinux context.

  }

}

{ Sample script

  The following script creates a few files and directories whose name corresponds to their permission bits. It then uses `ls -l` to display the permission bits:
  gh|shell-commands|/ls/l_permission-bits||

}

sa:

  `ls -l` is equivalent to `ls --format=verbose`

  `→ Linux/shell/commands/ls` and other → Linux/shell/commands/ls#ls-options[other options].
