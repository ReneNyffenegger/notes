$ Shell command: tar
@ tar

`tar` stands for tape-archiver and is a utility to create such archives and then adding, updating or removing files from it (see the example → #tar-ex-lifecycle[tar archive lifecycle]).

Often, tar is used in combination with → Linux/shell/commands/gzip[`gzip`] so that the tarred file can be reduced in size (the resulting file is then a `.tar.gz` or `.tgz` file).

A peculiarity of the `tar` command is that it doesn't introduce command line options with a hyphen or dash.

{ Examples

  { Lifecycle #tar-ex-lifecycle

    The following example
      • creates a tar file, then
      • updates files within the tar file, then 
      • lists the file names within the tar file, then
      • extracts a file from the tar file, then
      • updates a file within the tar file again, then
      • deletes a file within the tar file, then
      • extracts the tar file's entire content to a different directory.

    gh|shell-commands|/tar/basic-operations/go.sh||

  }
  { Create a minimal (empty) tar file #tar-minimal

code {
tar cf minimal.tar --files-from → Linux/fhs/dev/null
code }

  }

}

sa:

  → Linux/shell/commands/cpio[`cpio`]

  → Linux/shell/commands/index[Shell commands]

  → Windows 10 also comes with `→ Windows/dirs/Windows/System32/tar_exe`.

  → development/databases/SQLite/archive[SQLite archives] provide a similar functionalality like `tar` does.

  `jar`, the Java Archive Tool.
