$ Shell command: stat
@ stat

code {
stat [OPTION]… FILE…
code }

{ Options

  table { llll
    `-L` ☰ `--dereference` ☰ ☰ follow links
    `-Z` ☰ `--context` ☰ ☰ print the SELinux security context
    `-f` ☰ `--file-system` ☰ ☰ display file system status instead of file status
    `-c` ☰ `--format=` ☰ `FORMAT` ☰ use the specified `FORMAT` instead of the default; output a newline after each use of `FORMAT`.
    ☰ `--printf=` ☰ `FORMAT` ☰ like `--format`, but interpret backslash escapes, and do not output a mandatory trailing newline. If you want a newline, include `\n` in `FORMAT`.
    `-t` ☰ `--terse` ☰ ☰ print the information in terse form
    ☰ `--help` ☰ ☰
    ☰ `--version` ☰ ☰

  table }

}

{ Format string

  The different values that `stat` is able to extract from a → Linux/filesystem/file-directory-metadata[file's metadata] can be specified within a format string.

 `%A %U %G %n` is similar to `→ Linux/shell/commands/ls/l` in that it shows files' and directories' users and groups as well as their permissions, but without other information (such as count hard links)
code {
$ stat --format='%A %U %G %s %n'  /home/rene/xyz/* | → Linux/shell/commands/column -t
code }
  The `column -t` is supposed to neatly align the output, but, of course, if file names contain spaces, the output will be distorted.

  A summary of some information about a file can be obtained with
code { 
stat --format="Inode number:      %i
Access Rights:     %A
Size:              %s (%b blocks allocated, each %B bytes)
File type:         %F
Owner:             %U
Last access:       %x
Last modification: %y
Last change:       %z
SELinux ctx str:   %C"          /home/rene/.bashrc
code }

  { Format sequences

    { Files

      The following formats sequences apply if `stat` is invoked without `--file-system` (or `-f`) and return information about a file or directory:
      table { ll

         `%a` ☰ Access rights in octal
         `%A` ☰ Access rights in human readable form
         `%b` ☰ Number of blocks allocated (see `%B`)
         `%B` ☰ The size in bytes of each block reported by `%b`
         `%C` ☰ SELinux security context string
         `%d` ☰ Device number in decimal
         `%D` ☰ Device number in hex
         `%f` ☰ Raw mode in hex
         `%F` ☰ File type
         `%g` ☰ → Linux/group[Group] ID of owner
         `%G` ☰ → Linux/group[Group] name of owner
         `%h` ☰ Number of hard links
         `%i` ☰ Inode number
         `%n` ☰ File name
         `%N` ☰ Quoted file name with dereference if symbolic link
         `%o` ☰ I/O block size
         `%s` ☰ Total size, in bytes
         `%t` ☰ Major device type in hex
         `%T` ☰ Minor device type in hex
         `%u` ☰ → Linux/user[User] ID of owner
         `%U` ☰ → Linux/user[User] name of owner
         `%x` ☰ Time of last access
         `%X` ☰ Time of last access as seconds since → development/date-time/Unix-time[Epoch]
         `%y` ☰ Time of last modification
         `%Y` ☰ Time of last modification as seconds since → development/date-time/Unix-time[Epoch]
         `%z` ☰ Time of last change
         `%Z` ☰ Time of last change as seconds since → development/date-time/Unix-time[Epoch]

      table }

    }
    { File systems

      If `stat` is invoked with `--file-system` (or `-f`), the following format sequences return information about the file system in which
      the given file is located:
      table { ll

        `%a` ☰ Free blocks available to non-superuser
        `%b` ☰ Total data blocks in file system
        `%c` ☰ Total file nodes in file system
        `%d` ☰ Free file nodes in file system
        `%f` ☰ Free blocks in file system
        `%C` ☰ SELinux security context string
        `%i` ☰ File System ID in hex (Is this ID the → https://man.archlinux.org/man/statfs.2#The_f_fsid_field[«random stuff such that the pair (f_fsid,ino) uniquely determines a file»] described in → https://man.archlinux.org/man/statfs.2[`statfs(2)`]?)
        `%l` ☰ Maximum length of filenames
        `%n` ☰ File name
        `%s` ☰ Block size (for faster transfers)
        `%S` ☰ Fundamental block size (for block counts)
        `%t` ☰ Type in hex
        `%T` ☰ Type in human readable form

      table }

    }
  }

}

sa:

  → development/languages/Perl/functions/stat[Perl function `stat`], → development/languages/C-C-plus-plus/C/libc/stat[`stat` in the libc]

  → Linux/filesystem/file-directory-metadata

  → Linux/shell/commands[Shell commands] such as
 `→ Linux/shell/commands/ls` and
 `→ Linux/shell/commands/namei`.
