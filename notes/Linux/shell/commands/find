$ Shell command: find
@ find


{ Business of find

→ https://docstore.mik.ua/orelly/unix/upt/index.htm[Unix Power Tools] has the following quote about `find`:
"
   `find`'s business is evaluating expressions - not locating files. Yes, find
   certainly locates files; but that's really just a side effect. For me,
   understanding this point was the conceptual breakthrough that made find much
   more useful.
" [→ https://docstore.mik.ua/orelly/unix/upt/ch17_12.htm[Chapter 17.12]: Finding Many Things with One Command ]

}
{ -inum

  Finds the file with an inode (that can be found for example with → Linux/shell/commands/ls[`ls -i`].

  This option is useful to → Linux/shell/commands/rm#rm-special-character[remove files with special characters].

}

{ Find files case insensitively

Use the `-iname` argument:
code {
$ find . -iname '*foo*'
code }

}

{ Find files that were changed during a certain period

{ During the last 5 minutes

code {
$ find . -cmin -5
code }
Note the minus in front of the five: this finds files changed between 0 and 5 minutes. with `-cmin 5` only files changed *exactly* five minutes ago would be found.
`-cmin +5` find files changed earlier than five minuts ago.

→ development/GNU[GNU] understands date reference strings that can be given to `→ Linux/shell/commands/date#d[date -d]`.
code {
$ find . -newermt '5 minutes ago'
code }

}
{ During the last n days

Similarly, files that were changed during the last week can be found so
code {
$ find . -ctime -7
code }

}
}
{ Files that are not owned by someone

With the exclamation mark, a premisse can be negated. This allows to search for files thare not owned by some specific user:
code {
$ find . ! -user rene -print
code }

}
{ Excluding directories #find-prune

Directries can be excluded with `-path ./path/do/excluded/dir -prune`.

Note `-prune` (as `-print`) always returns true.
-
Therefore, it will probably be followed by `-o`.

Find all files that contain a `b` in the filename but are not located under → development/version-control-systems/git/_git/index[`./git`]:
code {
$ find -path ./git -prune -o -type f -name '*b*' -print
code }

}
{ Operator precedence

  `-a` takes precedence over `-o`.


}

sa:

  → Linux/shell/commands/locate

  → https://github.com/ReneNyffenegger/shell-commands/tree/master/find

  → development/languages/Perl/modules/File/Find

  → Linux/shell/commands/index[Shell commands]
