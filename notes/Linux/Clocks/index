$ Clocks in Linux

There are two types of clocks in a Linux systems: the hardware clock and 

{ Hardware clock #hardware-clock

  The hardware clocks has its own power supply (battery, capactior etc.) so that it continues to keep track of the time even if the system is powered of or unplugged.

  ~Other names~ for the hardware clock are: real time clock, RTC, → hardware/BIOS[BIOS] clock or CMOS clock. The → Linux/kernel[kernel] sometimes names it persistent clock.

  Hardware clocks are usually too slow or too fast by a more or less constant amount of time per day. This amount of time is called the ~systematic drift~.
  → Linux/shell/commands/hwclock keeps track of the necessary information in the adjtime file (→ Linux/fhs/etc/adjtime)

  The hardware clock does not have the concept of time standard (localtime or → misc/UTC[UTC}) nor of daylight saving time (DST), it does not keep track
  of the time in a timezone.

}
{ System clock #system-clock

  The system clock is operated by the Linux kernel and updated through → Linux/kernel/interrupt[interrupts].

  The value of the system clock is the number of seconds since January first, 1970, 00:00:00. As the precision
  of this value is of infinite precision (if desired?), it is not limited to integers.

  The system clock is initialized from the value of the hardware clock when the system is → Linux/booting/index[booted up].

  The current system clock time can be read with → Linux/shell/commands/timedatectl[`timedatectl`].

}

sa:
  → Linux/shell/commands/hwclock, → Linux/shell/commands/timedatectl, → Linux/fhs/etc/adjtime, → Linux/fhs/dev/rtc

  → Linux/Clocks/NTP

  → hardware/PC/real-time-clock

  → hardware/Motorola-MC146818

  → Linux/timezone

  → Linux/shell/commands/faketime[`faketime`] and the *fudgetime utilities*.
