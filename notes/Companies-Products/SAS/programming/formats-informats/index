$ SAS: informats / formats
@ informats and formats

~Informats~ specify how data is converted from a character-string representation to the SAS-internal (possibly
numerical) value when it is read (hence the ~in~ in *informat).
-
Usually (always?), the informat is ended with a dot.

~Formats~ specify how values of variables are formated when they are printed.

Informats are defined with the `attrib` and `informat` statements, formats with `attrib` and `format` statements.


{ Formats

  The format, if applied to a variable, defines how the variable is displayed (without changing the value of the variable). The representation is always
  in the → Companies-Products/SAS/programming/data-types[character data type].

  Formats can be created with → Companies-Products/SAS/programming/proc/format.

}

sa:


  → Companies-Products/SAS/programming/formats-informats/ddmmyy[`ddmmyyXN`] to write dates as `18/09/2011`, `18.09.2011`, `180911` etc.

  → Companies-Products/SAS/programming/formats-informats/date[`dateN`] to write dates as `13-SEP-2017` or `13SEP17` etc.

  → Companies-Products/SAS/programming/formats-informats/weekdate[`weekdateN`] to write dates such as *Wednesday, September 13, 2017*, *Wednesday, Sep 13, 2017*, *Wed, Sep 13, 2017*, *Wednesday* or *Wed*.

  → Companies-Products/SAS/programming/formats-informats/datetime[`datetimeN`] to display seconds past 1960 as `04JAN60:16:21:38` etc.

  → Companies-Products/SAS/programming/formats-informats/weekday[`weekday`] 

  → Companies-Products/SAS/programming/formats-informats/worddate[`worddateN`] to write dates such as *September 18, 2011* or *Sep 18, 2011*.

  → Companies-Products/SAS/programming/formats-informats/words[`wordsN.`] to spell numbers.

  → Companies-Products/SAS/programming/formats-informats/comma[`commaN.M`]
  
  → Companies-Products/SAS/programming/statements/format,
  → Companies-Products/SAS/programming/functions/put,
  → Companies-Products/SAS/programming/functions/putn


