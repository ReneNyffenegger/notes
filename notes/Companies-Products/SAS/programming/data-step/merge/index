$ SAS data step: merge

{ One to one merge

  The variable on which the merge is performed (`by num`) is unique in the merged → Companies-Products/SAS/programming/data-sets and the same
  values occur in both data sets.

  gh|about-SAS|/programming/data-step/merge/basic.sas||

}
{ Missing observations

  In the following example, the german translation for `two` is missing and the english observation for five is missing.

  The merge creates a → Companies-Products/SAS/programming/proc/sql/select/join#sas-proc-sql-full-outer-join[full outer join].

  gh|about-SAS|/programming/data-step/merge/missing.sas||

}
{ Duplicate values

  The following example contains a duplicate value in the german translation: `num=5` is translated with both: *fünf* and *fuenf*.

  The merge produces what we'd expect from an → Companies-Products/SAS/programming/proc/sql/select/join[SQL join]:

  gh|about-SAS|/programming/data-step/merge/duplicate.sas||


  To make things worse, we add a `num=5` observation to the english data set. Unlike SQL, the merge won't produce 4 records for all combinations where `num=5`:

  gh|about-SAS|/programming/data-step/merge/duplicate-2.sas||

}
{ Sort order

  The data sets must be sorted to merge them, otherwise, SAS will complain with something like ~BY variables are not proberly sorted~:

  gh|about-SAS|/programming/data-step/merge/sort-order.sas||

}

sa:

  → Companies-Products/SAS/programming/data-step/update[update]

  → Companies-Products/SAS/programming/data-step
