$ Oracle Virtual Box: Network / Port forwarding (guest with NAT)

A → Companies-Products/Oracle/VM-VirtualBox/virtual-machine[guest] with a «→ development/networking/NAT[NET]» can establish → development/web/TCP-IP connections but cannot simply reached from the host or outside world.

In order to access a service running under a given port number, the guest must be configured with *port forwarding*. If so configured, the host listens on the specified port and forwards incoming
TCP/IP connection requests to the specified port in the guest.

The following example forwards port 9999 on the host to 9090 on the guest:
gh|about-VirtualBox|/settings/network/img/NAT-port-forwarding.png||

When the guest is started, we can verify on the host that the host is indeed listening on the port 9999:
code {
PS C:\> → Windows/dirs/Windows/System32/NETSTAT_EXE[netstat] -an | findstr 9999
  TCP    0.0.0.0:9999           0.0.0.0:0              LISTENING

PS C:> netstat -anb | → Windows/PowerShell/command-inventory/noun/string/select 9999 → Windows/PowerShell/command-inventory/noun/string/select#select-string-context[-context] 0,1

>   TCP    0.0.0.0:9999           0.0.0.0:0              LISTENING
   [→ Windows/dirs/Program-Files/Oracle/VirtualBox/VirtualBoxVM_exe[VirtualBoxVM.exe]]
code }

The port forwarding rule can be be queried on the command line:
code {
PS C:\> → Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe/showvminfo $vmname | → Windows/dirs/Windows/System32/findstr_exe[findstr] /c:"NIC 1 Rule"
NIC 1 Rule(0):   name = Rule 1, protocol = tcp, host ip = , host port = 9999, guest ip = , guest port = 9090
code }

{ Add a port forwarding rule on the command line

  A portforwarding rule can be added on the command line with `→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe/modifyvm`.

  The following example adds a forwarding rule for → development/security/SSH (port 22) which listens on port 2200:
code {
→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe/modifyvm $vmName --natpf1 'port forwarding rule ssh,tcp,,2200,,22'
code }

  With the rule in place, I can connect to the guest from the host:
code {
PS C: > ssh -p2200 rene@localhost
…
code }

}
