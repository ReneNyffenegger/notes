$ Oracle VM VirtualBox

VirtualBox provides a *x86 processor* in a virtual environment. Thus, only x86 based operating systems are supported.
-
The virtual processor corresponds to the host's actual processor. This is different from → hardware/QEMU where the processor is emulated (or imitated).

{ Enabling BIOS/UEFI

  In order to be able to use virtualization, *VT-x* must be enabled in the → hardware/BIOS[BIOS] or → hardware/UEFI[UEFI].

}
{ Adding a custom screen resolution

  It seems that, at least when running on a Windows host, the virtual box only has some predefined screen resolutions: *1600x1200*, *1280x1024*, *1152x864*, *1024x768* and *800x600*.

  These predefined resolutions can be extended with a *custom video mode* . First, the virtual machine must be stopped.
  Then (within → Windows/dirs/Windows/System32/cmd_exe), `VBoxManage.exe` can be executed:
code {
"c:\Program Files\Oracle\VBoxManage.exe" setextradata "VIRTUAL BOX NAME HERE" CustomVideoMode 1600x900x32
code }

}
{ Guest additions

  A *guest addition* improves the guest operating system (notably: screen resolution and mouse control).

  Guest additions are installed *within* the guest OS, not on the host OS.

}
{ Arch Linux #arch-linux

  Apparently, under → Linux/distributions/arch[Arch Linux], VirtualBox is loaded through/via/by the `vboxdrv` → Linux/kernel/module which
  must be loaded before any virtual machine can run.
  -
  This modules is installed with
  -
  `sudo pacman -S virtualbox`
  -
  and then loaded with
  -
  `→ Linux/shell/commands/modprobe vboxdrv`.
  -
  *Optional* (but recommended) modules are: `vboxnetadp`, `vboxnetflt` and `vboxpci`. (See also
  → Linux/fhs/etc/modules-load_d/virtualbox_conf)

  The user who wants to use the VirtualBox must be member of the `vboxusers` group:
  -
  `gpasswd -a $USER vboxusers`

  Apparently, the executable to start the VirtualBox, `virtualbox`, must be installed seperatly:
  -
  `sudo pacman -S virtualbox`

  TODO: Apparently, it cannot hurt to also install `virtualbox-guest-iso`.

  TODO: does it also need `sudo pacman -S virtualbox-host-modules-arch`?

}
{ Host key

  Pressing the *host key* un-captures the keyboard (and the mouse?). (With a caputured keyboard, all keyboard events, even alt/tab, go to the guest OS.

  The currently assigned host key is shown in the bottom-status bar on the right side.

}
