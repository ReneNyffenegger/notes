$ Oracle VM VirtualBox

VirtualBox provides a *x86 processor* in a virtual environment. Thus, only x86 based operating systems are supported.
-
The virtual processor corresponds to the host's actual processor. This is different from → hardware/QEMU where the processor is emulated (or imitated).

{ Global configuaration file

  The global configuration file is `VirtualBox.xml`.

}
{ Enabling BIOS/UEFI

  In order to be able to use virtualization, → hardware/CPUs/x86/hardware-virtualization#vt-x_amd-v[VT-x] must be enabled in the → hardware/BIOS[BIOS] or → hardware/UEFI[UEFI].

}
{ Some command line examples

  VirtualBox can be configured from the command line.

  { List all available and running virtual machines

code {
→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe[VBoxManage] list vms
→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe[VBoxManage] list runningvms
code }

  }
  { Starting and shutting down a virtual machine

    The following command starts a → Companies-Products/Oracle/VM-VirtualBox/virtual-machine whose name is *lnx*. lnx needs to be either
    in powered-off or saved state.
code {
→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe[VBoxManage] startvm lnx
code }

    After starting the virtual machine, it probably needs to be resumed:
code {
VBoxManage controlvm lnx resume
code }

    The virtual machine can be shut down the hard way:
code {
VBoxManage controlvm lnx poweroff
code }

  }
  { Remove hard disk, DVD or floppy image

    A hard-disk, DVD or floppy image can be removed from the *media registry* like so. With `--delete`, the associated files will also be removed.
code {
VBoxManage closemedium [disk|dvd|floppy] <uuid|filename> [--delete]
code }

  }
  { Adding a custom screen resolution

    It seems that, at least when running on a Windows host, the virtual box only has some predefined screen resolutions: *1600x1200*, *1280x1024*, *1152x864*, *1024x768* and *800x600*.

    These predefined resolutions can be extended with a *custom video mode* . First, the → Companies-Products/Oracle/VM-VirtualBox/virtual-machine must be stopped.
    Then (within → Windows/dirs/Windows/System32/cmd_exe), `VBoxManage.exe` can be executed:
code {
"c:\Program Files\Oracle\VBoxManage.exe" setextradata "VIRTUAL BOX NAME HERE" CustomVideoMode 1600x900x32
code }

  }

}
{ Arch Linux #arch-linux

  Apparently, under → Linux/distributions/arch[Arch Linux], VirtualBox is loaded through/via/by the `vboxdrv` → Linux/kernel/module which
  must be loaded before any virtual machine can run.
  -
  This modules is installed with
  -
  `sudo pacman -S virtualbox`
  -
  and then loaded with
  -
  `→ Linux/shell/commands/modprobe vboxdrv`.
  -
  *Optional* (but recommended) modules are: `vboxnetadp`, `vboxnetflt` and `vboxpci`. (See also `→ Linux/fhs/etc/modules-load_d/virtualbox_conf`)

  The user who wants to use the VirtualBox must be member of the `vboxusers` group:
  -
  `gpasswd -a $USER vboxusers`

  Apparently, the executable to start the VirtualBox, `virtualbox`, must be installed separately:
  -
  `sudo pacman -S virtualbox`

  TODO: Apparently, it cannot hurt to also install `virtualbox-guest-iso`.

  TODO: does it also need `sudo pacman -S virtualbox-host-modules-arch`?

}
{ Windows / Hyper-V #vmbox-hyper-v-mutually-exclusive

  As per some comments that I found in the vast depths of the Internet, VirtualBox cannot be run on → Windows/versions/10 if → Windows/optional-features/Hyper-V is active because Hyper-V does not release
  → hardware/CPUs/x86/hardware-virtualization#vt-x_amd-v[VT-x] once it has acquired it.
  -
  Apparently though, VirtualBox and VMWare *can* coexist.

  However, at least with VirtualBox version six, there using VirtualBox with Hyper-V is an → https://www.virtualbox.org/manual/ch14.html#ExperimentalFeatures[experimental feature]: Virtual Box will use Hyper-V if it detects it.
  Such a configuration is indicated by a CPU icon in the VM window status bar.
  -
  Apparently, the interaction with Hyper-V leads to performance degradation.

  An advantage of VirtualBox over Hyper-V is that it is free and also runs on a Windows home edition.

}
{ Auto Capture Keyboard

  When *Auto Capture Keyboard* is enabled, it causes the Virtual Machine to automatically capture the keyboard every time the VM window is activated
  and make it unavailable to other application running (for example Alt-Tab).

  This feature can be enabled or disabled in the Virtual Machine Manager's Menu *Preferences -> Input -> Keyboard -> Keyboard Settings*.

}
{ Python API

  VirtualBox comes with two → development/languages/Python APIs:
    • one for its → development/web/service, and
    • one for the → Windows/development/COM (or XPCOM) API

}
{ Components

  table { ll

    IPRT ☰  A portable runtime library which abstracts file access, threading, and string manipulation. Whenever Oracle VM VirtualBox accesses host operating features, it does so through this library for cross-platform portability.
    VMM  ☰ The *Virtual Machine Monitor*, which is the heart of the → development/hypervisor.
    EM   ☰ The *Execution Manager* controls execution of guest code.
    TRPM ☰ The *Trap Manager* intercepts and processes guest traps and exceptions.
    HM   ☰ The *Hardware Acceleration Manager* provides support for → hardware/CPUs/x86/hardware-virtualization#vt-x_amd-v[VT-x and AMD-V].
    GIM  ☰ The *Guest Interface Manager* provides support for various paravirtualization interfaces to the guest.
    PDM  ☰ The *Pluggable Device Manager* is an abstract interface between the VMM and emulated devices which separates device implementations from VMM internals and makes it easy to add new emulated devices. Through PDM, third-party developers can add new virtual devices to Oracle VM VirtualBox without having to change Oracle VM VirtualBox itself.
    PGM  ☰ The *Page Manager* is a component that controls guest paging.  
    TM   ☰ The *Time Manager* handles timers and all aspects of time inside guests.
    CFGM ☰ The *Configuration Manager* provides a tree structure which holds configuration settings for the VM and all emulated devices.
    SSM  ☰ The *Saved State Manager* saves and loads → Companies-Products/Oracle/VM-VirtualBox/virtual-machine state.
    VUSB ☰ The *Virtual → hardware/USB layer* which separates emulated USB controllers from the controllers on the host and from USB devices. This component also enables remote USB.
    DBGF  ☰ The *Debug Facility* is a built-in VM debugger.

  table }

}
{ Misc

  VirtualBox was originally created by → https://www.virtualbox.org/wiki/innotek[innotek GmbH] which was acquired by Sun Microsystems Inc. (2008) which in turn was acquired  by Oracle (2010).

}
{ TODO

? VboxSDS is the process (service) that monitors a guest's system resources (`→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe metrics`). This process/services ends shortly
after all VMs and frontends have been closed.
code {
PS C:\> (→ Windows/PowerShell/command-inventory/noun/service/get VBoxSDS).displayName
VirtualBox system service
code }

`/dev/vboxuser` and `/dev/vboxguest`
-
`/proc/irq/n/vboxvideo` and `/proc/irq/n/vboxguest`
-
`→ Linux/fhs/sys/kernel/btf[/sys/kernel/btf]/vboxvideo` and `/sys/kernel/btf/vboxguest`
-
`/sys/kernel/debug/printk/index/vboxvideo` and `/sys/kernel/debug/printk/index/vboxguest`
-`
`/sys/class/misc/vboxuser` and `/sys/class/misc/vboxguest`
-
`/sys/devices/virtual/misc/vboxuser` and `/sys/devices/virtual/misc/vboxguest`
-
`/sys/bus/pci/drivers/vboxvideo` and `/sys/bus/pci/drivers/vboxguest`
-
`/sys/module/drm_kms_helper/holders/vboxvideo`, `/sys/module/drm_vram_helper/holders/vboxvideo`
-
`/sys/module/vboxvideo` and `/sys/module/vboxguest`


  { Display/Graphics

    { Graphics controllers #vbox-graphic-controllers

      The → https://www.virtualbox.org/manual/[User Guide's] chapter → https://www.virtualbox.org/manual/ch03.html#settings-display[Display Settings] lists the following four *graphics controllers*:
      table { ll
        VBoxSVGA ☰ Default for Windows 7 and later. Allegedly improves performance and 3D support when compared to the legacy VBoxVGA. See also `vboxsvga.dll` under `→ Windows/dirs/Program-Files/Oracle/VirtualBox-Guest-Additions`.
	VBoxVGA ☰ Used for legacy guest OSs (Windows before 7, Solaris). No 3D acceleration
	VMSVGA ☰ Default for Linux OSs. Emulates VMware SVGA graphics device
	None ☰ No emulation
      table }

      The graphics controller can be changed with `→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe/modifyvm --graphicscontroller ‥`

      See also → https://superuser.com/a/1403131[this SuperUser answer].

    }

  }
  { Performance #vbox-performance

    After installing Windows 10 in a guest, it turned out that some web pages (with WebGL?) were sluggish.

    By enabling 3D acceleration, this problem went away: 
code {
→ Windows/dirs/Program-Files/Oracle/VirtualBox/VBoxManage_exe/modifyvm $VBNAME --accelerate3d on
code }

   However, with accelerated 3D, the start menu and the taskbar became transparent so that the text could not be read anymore.
   -
   So, «Windows transparency» must be disabled:
code {
$null = set-itemProperty HKCU:\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize -name EnableTransparency -type dWord -value 0
code }

  }

}

sa:

  → Companies-Products/Oracle/VM-VirtualBox/guest-additions[Guest additions]

  → Companies-Products/Oracle/VM-VirtualBox/host-key

 `→ Windows/dirs/Program-Files/Oracle/VirtualBox`

  Error message → Companies-Products/Oracle/VM-VirtualBox/Windows/Failed-to-open-session-for-the-virtual-box[Failed to open a session for the virtual machine]

  VirtualBox is the default virtualisation provider for → hardware/virtual-machine/Vagrant.

  The Linux Kernel source file `→ Linux/kernel/source/drivers/gpu/drm/vboxvideo`

  → hardware/CPUs/x86/hardware-virtualization
