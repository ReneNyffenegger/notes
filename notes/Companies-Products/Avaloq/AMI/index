$ Avaloq Message Interface
@ AMI

The *→ Companies-Products/Avaloq Message Interface* (AMI) allows Avaloq Core to communicate with 3rd party systems (TPS) with *messages*. These messages are
  • text based
  • standardised (→ misc/ISO/15022)
  • structured

AMI is part of the *Open Interface/SOA* module.

Components:
  • Adapters (e.g. MQBridge, JMS Aapter)
  • → Companies-Products/Avaloq/AMI/EMI (External Message Interface, a → development/databases/Oracle/PL-SQL API)
  • AMI: connects EMI with → Companies-Products/Avaloq Core

Further keywords:
  • Builder (Creates internal messages from Avaloq data (usually → Companies-Products/Avaloq/order[orders]))
  • Formatter (converts an internal message to an external message)
  • Parser (converts external message to internal message)
  • Handler (Creates Avaloq data from an internal message)

{ Internal messages #ami-internal-msg

  Apparently, internal messages are stored in → Companies-Products/Avaloq/development/tables#avq-tab-msg.

}
{ External messages #ami-external-msg

  Apparently, outgoing external messages are stored in → Companies-Products/Avaloq/development/tables#avq-tab-msg_extl_out.

  Similarly, incoming external messages are stored in `msg_extl_in`.

}
{ Formatter

  The formatter can be invoked by → Companies-Products/Avaloq/BGP/PRCQ[PRCQ] 800 (Process Queue Fomatter).

}


{ TODO

  → Companies-Products/Avaloq/development/plsql-packages[Package] `msg_intf#`.

  → Companies-Products/Avaloq/development/tables/msg

  → Companies-Products/Avaloq/development/oracle-schemas#avq-p[Oracle user P].

}
sa:
  → Companies-Products/Avaloq/development/Avaloq-script/packages#avq-msg_lib and
  → Companies-Products/Avaloq/development/Avaloq-script/packages#avq-netw_release.

