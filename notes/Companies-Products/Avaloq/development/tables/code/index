$ Avaloq code tables

Code tables store possible »lookup« values for specific *domains*. There is one code table for each domain.

→ Companies-Products/Avaloq/development/tables#avq-tab-meta-typ[meta_typ] is also a code table although it does not start with `code_`.


→ Companies-Products/Avaloq/development/tables/code/config/lvl

→ Companies-Products/Avaloq/development/tables/code/module

{ code_obj_rel_sub_type

  Definition of the type of an object-relation.

}
{ code_const_type

  The values in this table can be used in the GUI for drop down lists.

}
{ code_obj_type

  Definition of object types.

  No additional object types possible.

}
{ Code table customization

  Two → Companies-Products/Avaloq/development/sources/types[source types] are associated with the customization of code tables:
    • *CODE TAB DEF* to define the structure of a code table and
    • *CODE TAB* (CODE TAB ROWS?) to insert records into the table.

}
{ DDICs

Every code table is associated with a → Companies-Products/Avaloq/development/DDIC[data dictionary].

The code values can be retrieved in a various number of ways:
code {
l_foo_bar := code_foo_bar.intl_id_of_row;
code }

code {
import native def_foo_bar;
l_foo_bar := def_foo_bar.intl_id_of_row;
code }

code {
l_foo_bar := lookup.code('CODE_FOO_BAR', 'intl_id_of_row');
code }

}
{ TODO

  → Companies-Products/Avaloq/development/tables/code/obj[code_obj_* tables]

  → Companies-Products/Avaloq/development/tables/code/restr[code_restr_* tables]

}
sa:
  → Companies-Products/Avaloq/development/tables/code/obj/key[code_obj_key]
