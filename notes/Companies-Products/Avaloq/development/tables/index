$ Avaloq tables
-

→ Companies-Products/Avaloq/development/tables/code

`code_task_layout_fmt`: supported output formats for layout (→ Companies-Products/Avaloq/development/report-writer[report writer]).

{ atrx_baseline_subscr #atrx_baseline_subscr

  This table records automatic → Companies-Products/Avaloq/pillars[pillar] creation.

  It is filled by → Companies-Products/Avaloq/BGP[BGPs] 990/991.

}
{ code_const
}
{ code_const_type
}
{ code_obj_add #avq-tab-code_obj_add

  → Companies-Products/Avaloq/development/tables/code/obj/index#avq-tab-code_obj_add.


}
{ code_obj_class #avq-tab_code_obj_class

}
{ code_obj_extn_admin

  This table configures business unit (BU) visibility of → Companies-Products/Avaloq/object/attributes[object attributes] → Companies-Products/Avaloq/object/attributes/addition[addition],
  → Companies-Products/Avaloq/object/attributes/class[classifications] and → Companies-Products/Avaloq/object/attributes/key[keys].

}
{ code_obj_type #avq-tab-code_obj_type

  Stores the possible → Companies-Products/Avaloq/object#avq-obj-type[object types].

}
{ crm_ctact

  `crm_ctact` contains the main contact data. It is linked to `crm_ctact_action`.

}
{ crm_ctact_action

  `crm_ctact_action` contains specific contact data.

}
{ ddic_cmp

  `ddic_cmp` is a → Companies-Products/Avaloq/pillars[pillar] which is filled
  by → Companies-Products/Avaloq/tasks[task] 9924.

  The column `tab_id` is a foreign key to `meta_script_tab`.

  The column `fld_id` is a foreign key to → #avq-tab-meta_script_fld[`meta_script_fld`]


}
{ doc #avq-tab-doc

  `doc` is subject to → development/databases/Oracle/security/RLS[row level security]. In order to see data, an Avaloq session must be opened (see `session#.open_session`).


}
{ file_idx

  Created files (by BGP 903)?

}
{ meta_code_tab_bu

  Lists code tables and their visibility to different BUs.

}
{ meta_script_fld #avq-tab-meta_script_fld

  `meta_script_fld` stores the individual → Companies-Products/Avaloq/development/DDIC[DDIC] entries.

}
{ meta_script_stmt #avq-tab-meta_script_stmt

? This table contains the statements to be executed or values to be returned when
  calling a → Companies-Products/Avaloq/development/DDIC[DDIC].

}
{ meta_typ #avq-tab-meta-typ

  The `meta_typ` table is a special case of a → Companies-Products/Avaloq/development/tables/code[code table].

}
{ mpar_def

  `mpar_def` stores the definition of *meta parameters* and if the parameter is one, two or three-dimensional.

}
{ mpar_par

  `mpar_par` stores the parameters of a *meta parameter*.

}
{ mpar_val

  `mpar_val` stores the values of a *meta parameter*.

}
{ obj #avq-tab-obj

  obj (as well as → #avq-tab-doc) is protected by → development/databases/Oracle/security/RLS[row level security]. In order to see data wihin these tables,
  an Avaloq session must be opened:
code {
begin
  session#.open_session;
end;
code }


}
{ obj_tasks_def_par #avq-tab-obj_tasks_def_par

  This table describes the parameters of a → Companies-Products/Avaloq/tasks[task] definition.

}
{ obj_cont

  A *container* belongs to exactly one *bp*: the `obj_cont`'s (pseudo?) foreign key `bp_id` points to it.

}
{ pos_af_serpil

  Stores the *asset flow projection → Companies-Products/Avaloq/pillars[pillar]*.

}
{ tab_list

  ? Somehow linked to `tab_meta_data` and the
  → Companies-Products/Avaloq/development/plsql-packages[package] `src_app#`.

}
{ tab_meta_data

}

{ TODO

  The *table editor* allows to query and update rows thare are stored in an Avaloq → development/databases[database].

}
