$ Avaloq PL/SQL packages

→ Companies-Products/Avaloq/development/plsql-packages/aging[`aging#`] 

→ Companies-Products/Avaloq/development/plsql-packages/base[`base#`] 

→ Companies-Products/Avaloq/development/plsql-packages/base_par_intf[`base_par_intf#`] to get and modify → Companies-Products/Avaloq/development/base-parameters[base parameters].

→ Companies-Products/Avaloq/development/plsql-packages/ctx_action_admin

`db_list#`

`def_source_type` contains the constants used for the parameter `i_src_type_id` in `src_intf#.src#do_action`.

`env_item_expr_ext#` is an interface to the → Companies-Products/Avaloq/ICE[ICE server] and provides querying of solution, stream solution and issue items.

`install#` (in → Companies-Products/Avaloq/development/oracle-schemas[schema] `X`)  has the important method `log#write`.

→ Companies-Products/Avaloq/development/plsql-packages/lookup[`lookup#`]

→ Companies-Products/Avaloq/development/plsql-packages/migr_user[`migr_user#`]: create and motify → Companies-Products/Avaloq/users[users].

`mpar#`

→ Companies-Products/Avaloq/development/plsql-packages/msg_intf exhibits the functionalty for sending, receiving and acknowledging → Companies-Products/Avaloq/AMI messages.

`obj_classif_ld#` loads → Companies-Products/Avaloq/object/attributes/class[classifications].

→ Companies-Products/Avaloq/development/plsql-packages/obj_class_intf[`obj_class_intf#`]

`obj_classif_deriv_rule#`

→ Companies-Products/Avaloq/development/plsql-packages/ora_stats

→ Companies-Products/Avaloq/development/plsql-packages/param_gen

`plsql_to_bool`

→ Companies-Products/Avaloq/development/plsql-packages/sec_admin_intf[`sec_admin_intf#`] to create new
→ Companies-Products/Avaloq/security#avq-access-code[access codes] or to delete them

→ Companies-Products/Avaloq/development/plsql-packages/sec_inft[`sec_intf#`]: Query what data a user can see and which functionality he is allowed to execute.
(→ Companies-Products/Avaloq/security#avq-access-code[access codes]).

→ Companies-Products/Avaloq/development/plsql-packages/sec_policy[`sec_policy#`]

→ Companies-Products/Avaloq/development/plsql-packages/session[`session#`]

`src_app#` defines procedures which generate application objects from entries in the `tab_list` and
`tab_meta_data` tables.

`src_intf#` manages the installation and compilation of → Companies-Products/Avaloq/development/sources[sources].
-
→ Companies-Products/Avaloq/tasks[Task] 1020 uses the procedures in this package.

`ui_cont_svc#` seems to be the interface between the
→ Companies-Products/Avaloq/SmartClient[SmartClient] and the Avaloq Core.

`user_admin#`: Granting an → Companies-Products/Avaloq/security#avq-access-code[access code] (created with
→ Companies-Products/Avaloq/development/plsql-packages/sec_admin_intf[`sec_admin_intf#`] to a specific (end-) → Companies-Products/Avaloq/users/[user] in a specific
→ Companies-Products/Avaloq/bu/[BU].

→ Companies-Products/Avaloq/development/plsql-packages/sec_policy[`sec_policy#`]

→ Companies-Products/Avaloq/development/plsql-packages/user_admin_intf[`user_admin_intf#`]: add or remove
→ Companies-Products/Avaloq/security#avq-access-code[access codes] from → Companies-Products/Avaloq/users[users].

{ TODO

  `omd_OBJ_TYPE_classif`

  Apparently, Avaloq comes with predefined → development/databases/Oracle/PL-SQL/collection-types/predefined[PL/SQL collection types] such as `t_number9_varray`.

}
