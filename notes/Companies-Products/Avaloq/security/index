$ Avaloq security

→ development/security/authentication[Authentication]:
  • → development/databases/Oracle[Oracle's] default user authentication
  • LDAP / LDAPS?
  • RSA
  • SecurID
  • Kerberos

Security areas/concepts:
  • → Companies-Products/Avaloq/object[Object] and business type (meta type) security
  • → Companies-Products/Avaloq/order/workflow[Workflow] security
  • → Companies-Products/Avaloq/order[Order] security (defined in → Companies-Products/Avaloq/development/tables/sec/doc/rule[`sec_doc_rule`] → Companies-Products/Avaloq/development/tables[table]).

{ Access code #avq-access-code

  Access codes define what a → Companies-Products/Avaloq/users[user] can see or do.

  Access codes are assigned to data and functionality. Then, the data or functionality is protected unless a
  user posesses the same access code. (Key/lock principle).

  Access codes are assigned to a user either directly or indirectly via → Companies-Products/Avaloq/users/role[roles].
  (Compare → Companies-Products/Avaloq/development/plsql-packages[package] → Companies-Products/Avaloq/development/plsql-packages/sec_admin_intf[`sec_admint_intf#`]).

}
{ Oracle role level security (RLS)

  Most → Companies-Products/Avaloq/object[objects] are protected with Oracle RLS: when → development/databases/SQL/select[selecting] from the
  → Companies-Products/Avaloq/development/tables/obj[obj] table, RLS allows to select a row from obj when when one of its column values
  `access_svr_id` or `access_1_id` through `access_8_id` is present in `code_sec_user_access_cache` with `sec_user_id = sys_context('AAA_SEC', 'SEC_USER_ID')`

  RLS can be turned off by setting `is_rls_sec` off in → Companies-Products/Avaloq/development/tables/code/obj/type

}
{ Access codes

  Access codes can be assigned or removed from a → Companies-Products/Avaloq/users[user] with the `user_admin_intf#` package.

  Apparently, there are three types of access codes:
    • normal
    • techical
    • session context

  See also the → Companies-Products/Avaloq/development/tables/sec/user/access table.

}
{ TODO

  Security engine

  Session context security


}
